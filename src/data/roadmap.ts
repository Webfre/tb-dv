export const levels = [
  "ВСЕ",
  "Trainee",
  "Junior",
  "Junior+",
  "Middle",
  "Middle+",
  "Senior",
];

export const roadmap = {
  Trainee: [
    "Основы браузера (как работает браузер, DevTools, движки Chrome/V8)",
    "Настройка рабочего окружения (IDE - выбор редактора, установка расширений, Prettier, ESLint)",
    "HTML (структура документа, семантические теги, формы, изображения, ссылки, списки)",
    "CSS (селекторы, позиционирование, display, box model, flexbox, стилизация форм)",
    "JavaScript (переменные, типы данных, условия, циклы, функции, массивы, объекты, DOM)",
    "React (основы) (create-react-app, компоненты, JSX, props, state, события)",
    "Git (основы) (инициализация репозитория, commit, push, pull, ветки, .gitignore)",
    "Практические задачи (ссылка)",
  ],
  Junior: [
    "Основы браузера (работа с вкладками, кеш, localStorage/sessionStorage, network-запросы, event loop, критический путь рендеринга)",
    "Настройка рабочего окружения (VSCode + расширения, настройка Prettier + ESLint, настройка tsconfig, package.json, npm/yarn)",
    "HTML (доступность, формы, валидация, правильная структура, мета-теги, работа с media, iframe)",
    "CSS (селекторы, наследование, specificity, flexbox/grid, transitions, псевдоклассы, адаптивность)",
    "JavaScript (функции, замыкания, this, стрелочные функции, spread/rest, деструктуризация, методы массивов: map, filter, reduce)",
    "React (hooks) (useState, useEffect, правила хуков, жизненный цикл, event handling, поднятие состояния)",
    "Git (основы) (clone, fetch, rebase vs merge, ветки, конфликты, .gitignore, история коммитов)",
    "SCSS (module.scss) (импорт переменных, вложенность, миксины, переменные, модульная структура, изоляция стилей)",
    "TypeScript (основы) (типизация props, state, функций, интерфейсы, типы, optional и union типы)",
    "Понятие store (зачем нужен, глобальное состояние, подходы к архитектуре, однонаправленный поток данных)",
    "Redux (RTKq) (createSlice, createAsyncThunk, RTK Query — endpoints, caching, polling, optimistic updates)",
    "Кеширование в React (основы) (useMemo, useCallback, мемоизация компонентов, зачем и когда применять)",
    "MUI, ANTD (базовая настройка темы, компоненты: Button, Modal, Input, использование и кастомизация стилей)",
    "Практические задачи (ссылка)",
  ],
  "Junior+": [
    "Основы браузера (оптимизация загрузки, принципы работы браузерного движка, критический путь рендеринга, async/defer, кеширование, перфоманс)",
    "Настройка рабочего окружения (расширенные настройки IDE, настройка абсолютных путей, alias, environment variables, настройка команд сборки)",
    "HTML (SEO-основы, ARIA-атрибуты, формы с кастомными элементами, взаимодействие с JS)",
    "CSS (адаптивность через media queries, mobile-first, работа с переменными, кастомные свойства, transition, animation)",
    "JavaScript (глубокое понимание области видимости, hoisting, promise, async/await, event loop, setTimeout/setInterval, стрелочные функции, контекст выполнения)",
    "React (продвинутые темы) (контекст, оптимизация рендера, error boundaries, refs, порталы, фрагменты, suspense)",
    "Git (продвинутые темы) (rebase, cherry-pick, git stash, git reset, git reflog, ветвление по git-flow, code review, squash)",
    "SCSS (module.scss) (архитектура SCSS: переменные, функции, миксины, вложенность, изоляция по компонентам)",
    "TypeScript (продвинутые темы) (generics, utility types (Partial, Pick, Omit), enum, расширенные типы, кастомные хуки с типами)",
    "Понятие store (архитектура хранилища, separation of concerns, best practices)",
    "Redux (RTKq) (advanced: selectors, middleware, optimistic updates, polling, invalidateTags, cache lifecycle)",
    "Кеширование в react (основы) (useMemo, useCallback, memo, re-render debugging, React DevTools)",
    "MUI, ANTD (расширенная кастомизация, работа с темами, кастомные компоненты через styled API, slots, overrides)",
    "Работа с формами: React Hook Form + YUP (контролируемые/неконтролируемые компоненты, вложенные формы, валидация, динамические поля)",
    "Организация структуры проекта (FSD, feature-based, shared/ui/lib, переиспользование компонентов, слоя ответственности)",
    "Модульные тесты: Jest + React Testing Library (основы написания тестов компонентов, mock-данных, проверка DOM, coverage)",
    "Lazy loading компонентов (React.lazy, Suspense, split по маршрутам и компонентам)",
    "Code Splitting, динамический импорт (import(), динамические routes, bundle-analyzer)",
    "Оптимизация рендеринга (анализ причин повторных ререндеров, DevTools, мемоизация, избегание лишних перерисовок)",
    "React Router (навигация, вложенные маршруты, useNavigate, useParams, protected routes)",
    "Custom хуки и переиспользование логики (абстракция бизнес-логики, хук useToggle/useFetch/useDebounce)",
    "Подходы к работе с UI-библиотеками (тема, кастомизация компонентов, настройка через ThemeProvider, переопределение стилей)",
    "Работа с REST API / axios / RTK Query (настройка базового API, interceptors, обработка ошибок, локализация ошибок)",
    "Файловая структура, именование, conventions (feature-sliced design, alias, правила именования компонентов, хуков, модулей)",
    "Интеграция с библиотеками drag-n-drop, rich editors и т.д. (react-dnd, react-beautiful-dnd, react-quill, кастомизация сторонних библиотек)",
    "Практические задачи (ссылка)",
  ],

  Middle: [
    "Архитектура приложений (слоистая архитектура, SOLID-принципы, паттерны проектирования: HOC, Render Props, Compound Components, DI)",
    "Работа с TypeScript (продвинутые типы, conditional types, type guards, infer, keyof, mapped types, ts-pattern)",
    "Расширенное использование хуков (useReducer, useLayoutEffect, кастомные хуки с обобщёнными типами)",
    "Оптимизация производительности React-приложений (анализ re-render'ов, профилирование, React.memo, useMemo, useCallback, virtualization)",
    "Продвинутая работа с формами (динамические поля, вложенные формы, кастомные компоненты для React Hook Form, async валидация)",
    "Разработка собственных UI-компонентов (универсальность, slot-based API, пропсы-композиции, анимации)",
    "Переиспользуемые компоненты и хуки (настройка библиотеки компонентов внутри проекта, подходы к переиспользованию логики)",
    "Сложные кейсы React Router (навигация с guard'ами, query-параметры, переход с сохранением состояния)",
    "RTK Query (удаление, обновление кеша вручную, queryFn, WebSockets + RTK Query integration, infinite scroll)",
    "WebSockets и реалтайм (ws / socket.io, подписки, уведомления, sync состояния)",
    "SSR и CSR подходы (Next.js основы, преимущества SSR, подходы к SEO, getServerSideProps, getStaticProps)",
    "CI/CD (базовая настройка пайплайнов, GitHub Actions / GitLab CI, деплой на Vercel, Netlify, Docker)",
    "Тестирование (юнит + интеграционные тесты, mocks, spies, coverage анализ, e2e: Cypress / Playwright)",
    "Security (защита от XSS/CSRF, безопасная работа с cookies/token'ами, защита route'ов, role-based доступ)",
    "Code Quality (линтинг, форматирование, husky + lint-staged, архитектурный контроль через eslint-plugin)",
    "Продвинутая настройка Webpack / Vite (code splitting, lazy loading, оптимизация прод-сборки, кастомные плагины)",
    "Анализ производительности (Lighthouse, Web Vitals, React Profiler, Bundle analyzer, производительность в mobile)",
    "Управление зависимостями (monorepo, workspace, shared packages, yarn/npm workspaces, pnpm)",
    "Документирование проекта (Storybook, styleguide, README, Swagger/OpenAPI для frontend)",
    "Практические проекты (сложные UI-фичи, дашборды, работа с графиками, роль user/admin, таблицы с пагинацией и фильтрацией)",
    "Опыт Code Review (написание понятных ревью, выявление архитектурных и логических ошибок, общение в команде)",
    "Участие в планировании и оценке задач (оценка по Story Points, работа по Kanban/Scrum, участие в Grooming/Sprint Review)",
    "Понимание DevOps-процессов (деплой, мониторинг, логирование, alerts)",
    "Интеграция с backend API (GraphQL, REST, WebSockets, OpenAPI генерация типов)",
    "Микрофронтенды и модульная архитектура (Module Federation, независимая сборка/деплой подфичей)",
    "Практические задачи (рефакторинг, ревью кода, реализация модальных окон, таблиц, кастомных фильтров и форм)",
  ],

  "Middle+": [
    "Архитектура приложения (Domain-driven Design, Feature-Sliced Design, SOLID, KISS, DRY, архитектурные слои: UI / App / Features / Entities / Shared)",
    "React продвинутый (Error Boundaries, Suspense с SSR, React Concurrent Mode, React 18 features)",
    "TypeScript (template literal types, conditional types, keyof, infer, advanced generics, безопасная типизация API)",
    "RTK Query (полный контроль над кешем, WebSocket-интеграция, подписки, кастомные endpoints, SSR integration)",
    "React Hook Form + Yup (многоступенчатые формы, сложная валидация, зависимые поля, step-form)",
    "Code Splitting / Lazy loading (архитектура SPA + micro-frontend, динамические layout'ы, микросервисы на фронте)",
    "Webpack / Vite (настройка production билда, оптимизация загрузки, кастомные плагины, анализ бандла)",
    "GraphQL (Apollo Client, codegen, кеширование, нормализация, фрагменты, combine queries)",
    "Performance (профилирование рендера, useTransition, useDeferredValue, виртуализация списков, отложенная загрузка)",
    "Unit + Integration тесты (advanced mocking, spies, snapshot-тесты, тестирование хуков, coverage metrics)",
    "E2E тесты (Cypress/Playwright: сценарии входа, навигации, флоу пользователя)",
    "DevOps-знания (CI/CD пайплайны, Vercel, Netlify, Docker + nginx, настройка production-инфраструктуры)",
    "Безопасность (OAuth2, HTTPS, XSS/CSRF защита, хранение токенов, авторизация и refresh-токены)",
    "Monorepo и микрофронтенды (Turborepo, Nx, Module Federation, архитектура масштабируемых проектов)",
    "Design Systems (разработка собственной UI-библиотеки, поддержка тем, документация в Storybook)",
    "Storybook (настройка окружения, документация компонентов, интерактивные playground'ы, stories для форм, состояний и тем)",
    "Git (advanced: squash-merge, git bisect, workflow code freeze, git blame для отладки)",
    "Mentorship и ревью (код-ревью, работа с джуниорами, шаблоны ревью, архитектурные ревью, refactoring suggestions)",
    "Team processes (инициатива в выборе технологий, обсуждение RFC, распределение задач, ответственность за часть проекта)",
    "Миграции (с JS на TS, с CRA на Vite, с class-based компонентов на функциональные, с REST на GraphQL)",
    "Работа с аналитикой (встраивание Google Analytics, Sentry, мониторинг ошибок и логов в проде)",
    "Feature Toggles / A/B тестирование (реализация фичефлагов, конфигурируемый UI, dark releases)",
    "Практика CI/CD (настройка GitHub Actions / GitLab CI: линтинг, тесты, автосборка, деплой)",
    "Документирование и стандарты (архитектурные документы, ADR, README, contribution guide, onboarding docs)",
    "Работа в кросс-командах (интеграция с backend, обсуждение API, универсальные компоненты, поддержка shared пакетов)",
    "Практические задачи (реализация сложного модуля, форм с логикой, дашбордов, редакторов, таблиц с вложенностью и drag-n-drop)",
  ],

  Senior: [
    "Техническое лидерство (инициатива по внедрению новых технологий, ревизия архитектуры, проведение техдолговых спринтов)",
    "Архитектура Frontend-приложений (микрофронтенды, масштабируемые модули, layered/folder-by-feature/FSD, RFC процессы)",
    "React (глубокое знание: Suspense for Data Fetching, React 18 features, Concurrent Mode, server components)",
    "TypeScript (всё, включая advanced conditional types, inference, кастомные utility types, декларации модулей)",
    "Интеграция с Backend (глубокое понимание REST, GraphQL, WebSockets, OpenAPI/Swagger, генерация типов, схемы валидации)",
    "Тестирование (юнит, интеграционные и e2e, настройка процессов тестирования, покрытие, автоматизация с CI)",
    "CI/CD (построение полного пайплайна: линтинг, тесты, билд, деплой, preview environments)",
    "Производительность (оптимизация загрузки, Lighthouse, Code Splitting, bundle-size control, перфоманс на слабых устройствах)",
    "Безопасность (OWASP, безопасная работа с токенами, защита от XSS, CSP, безопасный роутинг и работа с third-party)",
    "Разработка Design System / UI-библиотеки (Storybook, токены, документация, масштабирование компонентов)",
    "Работа с Webpack/Vite на продвинутом уровне (конфигурация, кастомные плагины, анализ зависимостей)",
    "DevOps (настройка docker-сред, nginx конфигурации, переменные окружения, наблюдаемость, мониторинг, логирование)",
    "Менторство и развитие команды (онбординг новичков, code review, проведение лекций/воркшопов, soft skills)",
    "Участие в планировании и управлении продуктом (оценка задач, участие в Grooming/Sprint Planning, продуктовые обсуждения)",
    "Кросс-командная коммуникация (обсуждение API, границ ответственности между FE и BE, принятие архитектурных решений)",
    "Процессы разработки (разработка internal tooling, шаблоны проектов, автоматизация рутинных задач, написание документации)",
    "A/B тестирование, feature toggles (поддержка версионности UI, раскатка по пользователям, аналитика поведения)",
    "Опыт масштабирования проектов (работа с high-load, мультикомандная разработка, дизайн кросс-доменных фич)",
    "Влияние на бизнес (понимание целей продукта, участие в экспериментах, анализ метрик и фидбэка пользователей)",
    "Сильные софт-скиллы (коммуникация, ответственность, инициативность, навык переговоров, умение вести за собой)",
    "Практические кейсы (переезд архитектуры, миграция с CRA на Vite, внедрение Server Components, масштабирование UI на 10+ команд)",
  ],
};
