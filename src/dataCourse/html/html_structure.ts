export const html_structure_1 = {
  id: "html_structure_1",
  title: "Обязательная структура документа",
  content: `
  ## Базовая структура HTML-документа
  
  Каждый HTML-документ должен начинаться с базовой структуры, которая сообщает браузеру, как интерпретировать код страницы. Это **обязательный стандарт**, гарантирующий корректное отображение и работу всех элементов страницы.
  
   ---

  ## Минимальная структура HTML-документа
  
  HTML-документ начинается с объявления типа документа и содержит два основных раздела:
  
  1. \`<!DOCTYPE html>\`  
     Указывает браузеру, что используется стандарт HTML5. Обязательно должно быть первой строкой.
  
  2. \`<html>\`  
     Корневой элемент, внутри которого располагаются все остальные теги.
  
  3. \`<head>\`  
     Блок с технической информацией: мета-теги, заголовок, подключения CSS и шрифтов.
  
  4. \`<body>\`  
     Основное содержимое страницы — то, что видит пользователь: тексты, изображения, кнопки и т.д.
  
  ### Пример минимального HTML-документа:
  
  \`\`\`html
  <!DOCTYPE html>
  <html>
    <head>
      <meta charset="UTF-8">
      <title>Моя первая страница</title>
    </head>
    <body>
      <h1>Привет, мир!</h1>
      <p>Это мой первый HTML-документ.</p>
    </body>
  </html>
  \`\`\`

   ---
  
  ## Разбор ключевых элементов
  
  | Элемент                    | Назначение                                               |
  |---------------------------|-----------------------------------------------------------|
  | \`<!DOCTYPE html>\`       | Включает стандартный режим, отключая баги старых браузеров |
  | \`<html>\`                | Обёртка для всей HTML-разметки                            |
  | \`<head>\`                | Содержит метаинформацию, заголовок страницы и подключения |
  | \`<meta charset="UTF-8">\`| Указывает кодировку символов (важно для кириллицы)        |
  | \`<title>\`               | Отображается во вкладке браузера                          |
  | \`<body>\`                | Основное содержимое страницы                              |
  
   ---

  ## Почему это важно
  
  - Без корректной структуры браузер может включить **режим совместимости**, что приведёт к некорректному отображению страницы.
  - Структура важна для **семантики**, **доступности** (a11y) и **SEO**.
  - Это основа, без которой невозможно создать даже самую простую веб-страницу.
  
  Хорошее понимание базовой структуры HTML — первый шаг к профессиональной вёрстке.
  `.trim(),

  codeExample: `
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>Пример структуры</title>
  </head>
  <body>
    <h1>Моя первая страница</h1>
    <p>Это базовая структура HTML-документа.</p>
  </body>
</html>
  `.trim(),

  resources: [
    "https://developer.mozilla.org/ru/docs/Web/HTML/Element/html",
    "https://html5book.ru/osnovy-html/#part1",
  ],
};

export const html_structure_2 = {
  id: "html_structure_2",
  title: "<!DOCTYPE> и его значение",
  content: `
  ## Что такое \`<!DOCTYPE>\`
  
  \`<!DOCTYPE>\` — это специальная директива, которая **указывает браузеру**, как следует интерпретировать HTML-документ. Она **не является HTML-тегом** и **не отображается на странице**, но играет критически важную роль в корректной работе браузера.
  
   ---

  ## Что делает \`<!DOCTYPE>\`
  
  - Включает **стандартный режим рендеринга** браузера (Standards Mode)
  - Сообщает браузеру, что документ написан с использованием **HTML5**
  - Является **обязательным элементом** в каждом HTML-документе
  
  
  ---

  ## Современный синтаксис
  
  С выходом HTML5 синтаксис стал предельно простым:
  
  \`\`\`html
  <!DOCTYPE html>
  \`\`\`
  
  - Записывается **в самом начале документа**, до тега \`<html>\`
  - Не требует закрытия
  - Поддерживается **всеми современными браузерами**
  
  ---

  ## Почему это важно
  
  Если не указать \`<!DOCTYPE>\`:
  
  - Браузер может **исказить отображение элементов**: отступы, шрифты, box-model
  - Нарушается поддержка **современных CSS-свойств** (flex, grid, переменные)
  - Верстка становится **нестабильной и непредсказуемой**
  - Невозможно корректно валидировать документ
  
  ---
  
  ## Вывод
  
  - \`<!DOCTYPE>\` — это **основа правильного отображения HTML-документа**
  - Его **нельзя пропускать**, даже в тестовых и учебных примерах
  - Это важная часть **валидации и кроссбраузерной совместимости**
  

  `.trim(),

  codeExample: `
<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Пример</title>
  </head>
  <body>
    <h1>Добро пожаловать!</h1>
    <p>Это стандартный HTML-документ.</p>
  </body>
</html>
  `.trim(),
};

export const html_structure_3 = {
  id: "html_structure_3",
  title: "Элементы <html>, <head> и <body>",
  content: `
  ## Основные структурные элементы HTML
  
  Три ключевых элемента HTML-документа — это \`<html>\`, \`<head>\` и \`<body>\`. Вместе они формируют **каркас веб-страницы**, задавая структуру, которую распознаёт браузер.
  
  ---
  
  ## \`<html>\` — корневой элемент
  
  - Охватывает весь HTML-документ
  - Является корнем DOM-дерева
  - Содержит только два вложенных блока: \`<head>\` и \`<body>\`
  
  Пример:
  
  \`\`\`html
  <html>
    ...
  </html>
  \`\`\`
  
  Дополнительные атрибуты:
  
  - \`lang="ru"\` — указывает язык содержимого страницы. Это важно для:
    - корректного произношения текста голосовыми помощниками
    - улучшения индексации в поисковых системах (SEO)
    - выбора правильных шрифтов в браузерах
  
  ---
  
  ## \`<head>\` — служебная информация
  
  Содержит **метаданные**, которые **не отображаются** напрямую на странице:
  
  - \`<title>\` — заголовок страницы во вкладке браузера
  - \`<meta charset="UTF-8">\` — кодировка символов (рекомендуется всегда указывать)
  - \`<link>\` — подключение внешних стилей, шрифтов и иконок
  - \`<script>\` — подключение скриптов (обычно размещаются внизу страницы, но могут быть и здесь)
  
  Пример:
  
  \`\`\`html
  <head>
    <meta charset="UTF-8" />
    <title>Пример</title>
    <link rel="stylesheet" href="styles.css" />
  </head>
  \`\`\`
  
  ---
  
  ## \`<body>\` — визуальное содержимое
  
  Содержит **всё, что видит пользователь** в браузере:
  
  - заголовки и абзацы
  - изображения и списки
  - таблицы и формы
  - кнопки, ссылки и интерфейсные элементы
  
  Пример:
  
  \`\`\`html
  <body>
    <h1>Привет, мир!</h1>
    <p>Это пример страницы.</p>
  </body>
  \`\`\`
  
  ---
  
  ## Полезные советы
  
  - Элементы \`<html>\`, \`<head>\`, \`<body>\` являются **обязательными** в любом HTML-документе
  - Без \`<head>\` браузер может неправильно определить кодировку или не загрузить стили и скрипты
  - Использование \`<meta charset="UTF-8">\` избавит от проблем с отображением кириллицы и спецсимволов
  - Структурное разделение между служебной и визуальной частью улучшает читаемость и поддержку кода
  
  ---
  
  ## Вывод
  
  - \`<html>\` — корневой контейнер всей страницы
  - \`<head>\` — служебный блок с метаинформацией и подключениями
  - \`<body>\` — визуальное содержимое, отображаемое в браузере
  
  Это основа любого HTML-документа. От правильного оформления этих блоков зависит, **как будет восприниматься и отображаться ваша страница**.
  `.trim(),

  codeExample: `
<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <title>Пример структуры</title>
  </head>
  <body>
    <h1>Привет!</h1>
    <p>Это содержимое тела документа.</p>
  </body>
</html>
  `.trim(),
};
