export const css_intro1 = {
  id: "css_intro1",
  title: "Что такое CSS",
  content: `  
  CSS (Cascading Style Sheets) — это **язык стилей**, который определяет внешний вид HTML-документов. CSS отвечает за все аспекты визуального представления веб-страниц: цвета, шрифты, расположение элементов, анимации и адаптацию под разные устройства.
  
  ### Основные возможности CSS
  
  - **Оформление текста**: размер, цвет, шрифт, межстрочный интервал
  - **Работа с блоками**: размеры, отступы, границы, фон
  - **Позиционирование элементов**: относительное, абсолютное, фиксированное
  - **Создание сложных макетов**: Flexbox, Grid
  - **Адаптивный дизайн**: медиазапросы для разных устройств
  - **Анимации и переходы**: плавные изменения свойств
  
  ### Как работает CSS
  
  CSS состоит из **правил**, каждое из которых содержит:
  
  1. **Селектор** - указывает, к каким элементам применяется стиль
  2. **Свойства** - определяют конкретные аспекты оформления
  3. **Значения** - задают параметры для свойств
  
  ### Преимущества CSS
  
  - **Разделение содержания и оформления**: HTML отвечает за структуру, CSS - за внешний вид
  - **Гибкость**: один стиль можно применять ко многим страницам
  - **Каскадность**: стили могут наследоваться и переопределяться
  - **Производительность**: уменьшает количество HTML-кода
  - **Доступность**: помогает создавать удобные интерфейсы
  
  ### CSS в современной веб-разработке
  
  CSS постоянно развивается. Современные возможности включают:
  
  - Переменные (CSS Custom Properties)
  - Грид-раскладку (CSS Grid)
  - Флексбокс (Flexbox)
  - Сложные фильтры и эффекты
  - Анимации и переходы
  - Поддержка адаптивного дизайна
  `.trim(),

  codeExample: `
<!DOCTYPE html>
<html>
<head>
  <title>Пример CSS</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <h1>Заголовок</h1>
  <p class="intro">Это абзац текста.</p>
</body>
</html>
  `.trim(),

  codeExampleCSS: `
/* Базовые стили для страницы */
body {
  font-family: Arial, sans-serif;
  line-height: 1.6;
  color: #333;
  max-width: 800px;
  margin: 0 auto;
  padding: 20px;
}

/* Стили для заголовка */
h1 {
  color: #2c3e50;
  text-align: center;
  margin-bottom: 30px;
}

/* Стили для класса intro */
.intro {
  font-size: 1.1em;
  background-color: #f8f9fa;
  padding: 15px;
  border-left: 4px solid #3498db;
}
  `.trim(),

  resources: [
    "https://developer.mozilla.org/ru/docs/Web/CSS",
    "https://html5book.ru/osnovy-css/",
  ],
};

export const css_intro2 = {
  id: "css_intro2",
  title: "Способы подключения CSS",
  content: `
  ## Способы подключения CSS к HTML
  
  Существует три основных способа подключения CSS-стилей к HTML-документу:
  
  ### 1. Внешняя таблица стилей
  
  Самый рекомендуемый способ. Стили хранятся в отдельном файле с расширением .css и подключаются через тег \`<link>\` в секции \`<head>\`.
  
  **Преимущества**:
  - Один файл стилей для многих страниц
  - Кэширование браузером
  - Чистое разделение HTML и CSS
  
  ### 2. Внутренние стили
  
  Стили прописываются непосредственно в HTML-документе внутри тега \`<style>\` в секции \`<head>\`.
  
  **Когда использовать**:
  - Для небольших одностраничных проектов
  - Когда нужны специфические стили только для одной страницы
  
  ### 3. Инлайн-стили
  
  Стили прописываются непосредственно в атрибуте \`style\` HTML-элементов.
  
  **Когда использовать**:
  - Для динамического изменения стилей через JavaScript
  - Для единичных исключений
  - Не рекомендуется для основного оформления
  
  ### Приоритетность стилей
  
  При конфликте стилей применяются следующие правила приоритета:
  
  1. Инлайн-стили (наивысший приоритет)
  2. Внутренние стили
  3. Внешние стили
  4. Стили браузера (наименьший приоритет)
  `.trim(),

  codeExample: `
<!DOCTYPE html>
<html>
<head>
  <!-- Внешняя таблица стилей -->
  <link rel="stylesheet" href="styles.css">
  
  <!-- Внутренние стили -->
  <style>
    body {
      background-color: #f5f5f5;
    }
  </style>
</head>
<body>
  <!-- Инлайн-стили -->
  <h1 style="color: blue;">Заголовок</h1>
</body>
</html>
  `.trim(),

  codeExampleCSS: `
/* Пример внешнего файла styles.css */

/* Базовые стили */
body {
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  margin: 0;
  padding: 20px;
}

/* Стили для навигации */
nav {
  background-color: #2c3e50;
  padding: 10px;
}

nav a {
  color: white;
  text-decoration: none;
  margin-right: 15px;
}
  `.trim(),

  resources: ["https://developer.mozilla.org/ru/docs/Web/HTML/Element/link"],
};

export const css_intro3 = {
  id: "css_intro3",
  title: "Синтаксис CSS",
  content: `  
  CSS имеет простой и понятный синтаксис, состоящий из набора правил.
  
  ### Структура CSS-правила
  
  Каждое CSS-правило состоит из:
  
  1. **Селектора** - указывает, к какому элементу(ам) применяется стиль
  2. **Блока объявлений** - содержит одно или несколько свойств в фигурных скобках {}
  3. **Свойств** - определяют конкретные аспекты оформления
  4. **Значений** - параметры для свойств, после двоеточия
  
  ### Пример CSS-правила
  
  \`\`\`css
  селектор {
    свойство1: значение;
    свойство2: значение;
  }
  \`\`\`
  
  ### Комментарии в CSS
  
  Комментарии помогают документировать код и временно отключать стили:
  
  \`\`\`css
  /* Это однострочный комментарий */
  
  /*
    Это многострочный
    комментарий
  */
  \`\`\`
  
  ### Группировка селекторов
  
  Можно применять одни стили к нескольким селекторам:
  
  \`\`\`css
  h1, h2, h3 {
    color: navy;
    font-family: sans-serif;
  }
  \`\`\`
  
  ### Каскадность CSS
  
  Каскадность означает, что:
  
  - Стили могут наследоваться от родительских элементов
  - При конфликте применяются более специфичные правила
  - Порядок правил влияет на приоритет (последнее правило имеет больший вес)
  
  ### Единицы измерения
  
  CSS поддерживает различные единицы измерения:
  
  - Абсолютные: px (пиксели)
  - Относительные: em, rem, %, vw, vh
  - Цвета: hex (#RRGGBB), rgb(), rgba(), hsl()
  `.trim(),

  codeExample: `
<!DOCTYPE html>
<html>
<head>
  <style>
    /* Группировка селекторов */
    h1, h2 {
      font-family: Arial, sans-serif;
    }
    
    /* CSS-правило */
    p {
      color: #333;
      line-height: 1.5;
      margin-bottom: 15px;
    }
    
    /* Комментарии */
    /* .old-style { display: none; } */
  </style>
</head>
<body>
  <h1>Заголовок</h1>
  <p>Абзац текста</p>
</body>
</html>
  `.trim(),

  codeExampleCSS: `
/* Примеры различных CSS-правил */

/* Стили для body */
body {
  font-size: 16px;
  background-color: #f9f9f9;
  margin: 0;
  padding: 20px;
}

/* Стили для заголовков */
h1 {
  color: #2c3e50;
  font-size: 2em; /* 32px */
  margin-top: 0;
}

/* Стили для ссылок */
a {
  color: #3498db;
  text-decoration: none;
}

a:hover {
  text-decoration: underline;
  color: #2980b9;
}

/* Стили для класса .button */
.button {
  display: inline-block;
  padding: 10px 20px;
  background-color: #3498db;
  color: white;
  border-radius: 4px;
  cursor: pointer;
}

.button:hover {
  background-color: #2980b9;
}
  `.trim(),

  resources: [
    "https://developer.mozilla.org/ru/docs/Learn/Getting_started_with_the_web/CSS_basics",
  ],
};
