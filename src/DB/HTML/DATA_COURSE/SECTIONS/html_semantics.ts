export const html_sem_1 = {
  id: "html_sem_1",
  title: "Семантические теги: header, nav, main",
  content: `
  ## Семантические теги в HTML
  
  **Семантические теги** — это теги, которые **содержат смысл**. Они помогают не только браузеру, но и разработчику, скринридерам и поисковым системам **лучше понимать структуру страницы**.
  
  В отличие от универсальных контейнеров вроде \`<div>\`, семантические теги явно указывают, **какая роль у содержимого** внутри.
  
  ---
  
  ## Основные семантические теги
  
  ### \`<header>\` — шапка страницы или секции
  
  - Размещается в верхней части страницы или раздела
  - Обычно содержит:
      - логотип
      - заголовки
      - навигационное меню
  
  **Пример:**
  
  \`\`\`html
  <header>
    <h1>Мой сайт</h1>
    <nav>...</nav>
  </header>
  \`\`\`
  
  ---
  
  ## \`<nav>\` — навигация
  
  - Оборачивает **основные навигационные ссылки** по сайту или разделу
  - Может находиться внутри \`<header>\`, \`<aside>\` или отдельно
  - Помогает ассистивным технологиям быстро перейти к меню
  
  **Пример:**
  
  \`\`\`html
  <nav>
    <ul>
      <li><a href="/home">Главная</a></li>
      <li><a href="/about">О нас</a></li>
      <li><a href="/contact">Контакты</a></li>
    </ul>
  </nav>
  \`\`\`
  
  ---
  
  ## \`<main>\` — основной контент
  
  - Включает **уникальное содержимое страницы**
  - Должен быть **только один \`<main>\` на страницу**
  - Не должен включать хедер, футер или боковые панели
  
  **Пример:**
  
  \`\`\`html
  <main>
    <h2>Добро пожаловать!</h2>
    <p>Это основное содержимое страницы.</p>
  </main>
  \`\`\`
  
  ---
  
  ## Зачем использовать семантику?
  
  - Повышает **доступность**: скринридеры легче ориентируются по странице
  - Улучшает **SEO**: поисковые системы лучше анализируют структуру
  - Повышает **читаемость кода**: другим разработчикам проще понять, что за блок перед ними
  - Упрощает поддержку проекта в будущем
  
  ---
  
  ## Дополнительно: другие семантические теги
  
  - \`<section>\` — логическая секция страницы
  - \`<article>\` — автономный блок (например, новость или пост)
  - \`<aside>\` — дополнительная информация (сайдбар)
  - \`<footer>\` — нижняя часть страницы или блока (контакты, копирайт, ссылки)
  
  ---
  
  ## Вывод
  
  Семантические теги:
  
  - делают HTML **понятным и логичным**
  - помогают улучшить **доступность, SEO и архитектуру**
  - являются **современным стандартом** в верстке и фронтенд-разработке
  
  Использование семантики — это хороший тон и основа профессионального кода.
  `.trim(),

  codeExample: `
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>Мой блог</title>
</head>
<body>
  <header>
    <h1>Мой блог</h1>
    <nav>
      <a href="/">Главная</a>
      <a href="/about">О сайте</a>
    </nav>
  </header>

  <main>
    <article>
      <h2>Статья</h2>
      <p>Текст статьи...</p>
    </article>
  </main>
</body>
</html>

  `,
  resources: ["https://html5css.ru/html/html5_semantic_elements.php"],
};

export const html_sem_2 = {
  id: "html_sem_2",
  title: "Теги article, section, aside, footer",
  content: `
  ## Семантические теги: структура контента
  
  Семантические теги HTML используются для **логической разметки содержимого** страницы. Они помогают определить **роль каждого блока**, делая структуру документа понятной как для разработчиков, так и для браузеров, поисковиков и ассистивных технологий.
  
  ---
  
  ## \`<article>\` — автономный контент
  
  - Представляет **самостоятельный, независимый блок**, содержание которого можно распространять вне контекста страницы
  - Примеры использования:
    - новость
    - блог-пост
    - карточка товара
    - комментарий
  
  **Пример:**
  
  \`\`\`html
  <article>
    <h2>Новость дня</h2>
    <p>Сегодня вышел новый стандарт HTML.</p>
  </article>
  \`\`\`
  
  ---
  
  ## \`<section>\` — логический раздел
  
  - Используется для **группировки тематического контента**
  - Часто содержит собственный заголовок (\`<h1> - <h6>\`)
  - Применим внутри \`<main>\`, \`<article>\`, и даже в \`<aside>\`
  
  **Пример:**
  
  \`\`\`html
  <section>
    <h3>Особенности HTML5</h3>
    <p>HTML5 упростил работу с мультимедиа и API.</p>
  </section>
  \`\`\`
  
  ---
  
  ## \`<aside>\` — дополнительная информация
  
  - Содержит **второстепенный контент**, связанный с основным
  - Часто используется как сайдбар: реклама, ссылки, рекомендации, справка
  - Может располагаться как внутри \`<article>\`, так и отдельно
  
  **Пример:**
  
  \`\`\`html
  <aside>
    <h4>Рекомендуем прочитать</h4>
    <ul>
      <li><a href="#">HTML для начинающих</a></li>
      <li><a href="#">CSS по шагам</a></li>
    </ul>
  </aside>
  \`\`\`
  
  ---
  
  ## \`<footer>\` — нижняя часть раздела или страницы
  
  - Обычно содержит:
    - контактную информацию
    - авторские права (copyright)
    - навигационные или вспомогательные ссылки
  - Может использоваться как в глобальной разметке, так и в пределах одного \`<article>\`
  
  **Пример:**
  
  \`\`\`html
  <footer>
    <p>&copy; 2025 Мой сайт. Все права защищены.</p>
  </footer>
  \`\`\`
  
  ---
  
  ## Почему это важно
  
  - Повышает **доступность** — скринридеры могут перемещаться между разделами
  - Улучшает **SEO** — поисковые системы лучше понимают и индексируют содержимое
  - Повышает **понятность и поддержку** кода — структура читается как оглавление
  - Упрощает реализацию **адаптивного дизайна** и **компонентного подхода**
  
  ---
  
  ## Вывод
  
  Семантические теги:
  
  - делают HTML **структурированным и логичным**
  - помогают браузеру, поисковым системам и пользователям понять назначение контента
  - являются неотъемлемой частью **современного подхода к верстке**
  
  Использование \`<article>\`, \`<section>\`, \`<aside>\` и \`<footer>\` — это стандарт профессиональной frontend-разработки.
  `.trim(),

  codeExample: `
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>Пример семантической разметки</title>
</head>
<body>
  <article>
    <h2>Новость</h2>
    <p>Контент новости...</p>
  </article>

  <section>
    <h3>О компании</h3>
    <p>Информация о нас.</p>
  </section>

  <aside>
    <h4>Реклама</h4>
    <p>Сторонний контент</p>
  </aside>

  <footer>
    <p>© 2025 Все права защищены</p>
  </footer>
</body>
</html>

  `,
  resources: ["https://html5css.ru/html/html5_semantic_elements.php"],
};
export const html_sem_3 = {
  id: "html_sem_3",
  title: "Зачем нужна семантика и кому она помогает",
  content: `
  ## Что такое семантическая вёрстка
  
  **Семантическая вёрстка** — это подход к разметке HTML, при котором используются **теги строго по назначению**, исходя из их **смысла**, а не только внешнего вида.
  
  Вместо универсальных контейнеров вроде \`<div>\` и \`<span>\`, применяются теги, которые **обозначают роль контента**: \`<header>\`, \`<article>\`, \`<nav>\`, \`<main>\`, \`<footer>\` и др.
  
  ---
  
  ## Преимущества семантики
  
  ### 1. Улучшение SEO
  
  - Поисковые системы **анализируют структуру документа** на основе семантических тегов
  - Теги помогают определить, что действительно важно: заголовки, навигация, статьи
  - Пример: контент внутри \`<article>\` имеет больший вес, чем просто текст в \`<div>\`
  
  ### 2. Повышение доступности
  
  - Скринридеры и ассистивные технологии **распознают и озвучивают смысл блоков**
  - Пользователи с ограничениями могут лучше ориентироваться по странице
  - Семантика делает страницу более удобной для всех
  
  ### 3. Читаемость и поддержка кода
  
  - Структура HTML становится **наглядной и логичной**
  - Разработчикам легче ориентироваться в разметке
  - Упрощается командная работа и дальнейшая поддержка проекта
  
  ---
  
  ## Пример: сравнение подходов
  
  **Без семантики:**
  
  \`\`\`html
  <div class="header">
    <div class="nav">...</div>
  </div>
  <div class="content">...</div>
  <div class="footer">...</div>
  \`\`\`
  
  **С семантикой:**
  
  \`\`\`html
  <header>
    <nav>...</nav>
  </header>
  <main>...</main>
  <footer>...</footer>
  \`\`\`
  
  ---
  
  ## Когда особенно важна семантика
  
  - При создании **доступных интерфейсов**
  - В **публичных веб-приложениях**, особенно если важен **поисковый трафик**
  - В проектах с долгосрочной поддержкой
  - При использовании **компонентных библиотек**, таких как React, где важно передавать смысл на уровне компонентов
  
  ---
  
  ## Вывод
  
  Семантическая вёрстка — это не просто "модно", это:
  
  - улучшает **доступность** и **SEO**
  - делает HTML **понятным для людей и машин**
  - облегчает поддержку и масштабирование проекта
  
  Применяй теги по смыслу, а не по внешнему виду — и твой код будет профессиональным с самого начала.
  `.trim(),

  codeExample: `
<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8">
  <title>Семантический макет страницы</title>
</head>
<body>
  <!-- Заголовок страницы -->
  <header>
    <h1>Мой Семантический Сайт</h1>
    <nav>
      <a href="/">Главная</a> |
      <a href="/articles">Статьи</a> |
      <a href="/about">О сайте</a> |
      <a href="/contact">Контакты</a>
    </nav>
  </header>

  <!-- Основной контент страницы -->
  <main>
    <!-- Основная статья -->
    <article>
      <h2>Заголовок статьи</h2>
      <p>Это пример содержимого статьи. Здесь можно разместить текст, изображения и другие элементы, которые относятся к основной теме страницы.</p>
      <p>Использование тега <code>&lt;article&gt;</code> помогает обозначить самостоятельный блок контента.</p>
    </article>

    <!-- Боковая панель -->
    <aside>
      <h3>Полезные ссылки</h3>
      <ul>
        <li><a href="https://

  `,
  resources: [
    "https://developer.mozilla.org/en-US/docs/Glossary/Semantics",
    "https://web.dev/learn/html/semantic-html/",
  ],
};
