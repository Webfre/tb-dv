export const cssGridQuestions = [
  {
    id: "css_grid_1",
    title: "Что делает свойство display: grid на элементе?",
    options: [
      "Превращает элемент в flex-контейнер",
      "Превращает элемент в графическую сетку для размещения дочерних элементов",
      "Превращает элемент в блочный элемент",
      "Превращает элемент в строчный элемент",
    ],
    correctAnswers: [1],
    descriptions: [
      "display: flex превращает элемент в flex-контейнер, а не grid.",
      "Правильно: display: grid создаёт сетку, в которой дочерние элементы располагаются по строкам и столбцам.",
      "display: block делает элемент блочным, но не создаёт сетку.",
      "display: inline делает элемент строчным, а не сеточным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_2",
    title: "Как задать две колонки одинаковой ширины в grid-контейнере?",
    options: [
      "grid-template-columns: 1fr 1fr;",
      "grid-template-columns: repeat(2, auto);",
      "grid-template-rows: 1fr 1fr;",
      "grid-template-columns: 100% 100%;",
    ],
    correctAnswers: [0],
    descriptions: [
      "repeat(2, auto) даёт автоматический размер, а не равную долю.",
      "Правильно: 1fr 1fr означает две колонки, каждая по одной доле доступного пространства.",
      "grid-template-rows задаёт строки, а не колонки.",
      "100% 100% задаёт слишком большие колонки, а не равные фракции.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_3",
    title: "Что означает значение fr в grid-template-columns?",
    options: [
      "Пиксельную единицу измерения",
      "Процент от родительского элемента",
      "Долю доступного пространства",
      "Автоматический размер контента",
    ],
    correctAnswers: [2],
    descriptions: [
      "px представляет собой фиксированную пиксельную единицу, а не fr.",
      "% даёт процент от родителя, а не фракцию.",
      "Правильно: fr обозначает долю свободного пространства внутри grid-контейнера.",
      "auto задаёт размер по содержимому, а не fr.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_4",
    title: "Как задать промежуток 20px между строками и столбцами в grid?",
    options: [
      "grid-gap: 20px;",
      "grid-spacing: 20px;",
      "grid-gap: 20px 20px;",
      "grid-template-gap: 20px 20px;",
    ],
    correctAnswers: [2],
    descriptions: [
      "grid-gap:20px устанавливает одинаковый промежуток, но синтаксис с двумя значениями точнее.",
      "grid-spacing не является валидным свойством.",
      "Правильно: grid-gap:20px 20px устанавливает 20px между столбцами и 20px между строками.",
      "grid-template-gap не существует.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_5",
    title: "Как задать явную разметку из трёх строк в grid-контейнере?",
    options: [
      "grid-template-rows: 100px 100px 100px;",
      "grid-template-columns: 100px 100px 100px;",
      "grid-rows: repeat(3, 100px);",
      "grid-flow-rows: 3;",
    ],
    correctAnswers: [0],
    descriptions: [
      "grid-template-columns задаёт колонки, а не строки.",
      "grid-template-rows:100px 100px 100px задаёт ровно три строки по 100px.",
      "grid-rows не является валидным свойством.",
      "grid-flow-rows не существует.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_6",
    title: "Что делает функция repeat(3, 1fr) в grid-template-columns?",
    options: [
      "Создаёт одну колонку шириной 3fr",
      "Создаёт три колонки, каждая по одной доле свободного пространства",
      "Создаёт три строки, каждая по одной доле свободного пространства",
      "Дублирует содержимое три раза",
    ],
    correctAnswers: [1],
    descriptions: [
      "1fr 1fr 1fr задаёт три колонки, а repeat(3,1fr) эквивалентен этому.",
      "Правильно: repeat(3,1fr) создаёт три колонки, каждая занимает равную долю доступного пространства.",
      "repeat в grid-template-columns задаёт колонки, а не строки.",
      "repeat не дублирует содержимое, а задаёт шаблон размеров.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_7",
    title: "Как задать auto-размер для первой колонки и 200px для второй?",
    options: [
      "grid-template-columns: auto 200px;",
      "grid-columns: auto 200px;",
      "grid-template-rows: auto 200px;",
      "grid-flow: auto 200px;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-template-columns: auto 200px задаёт две колонки: первая по содержимому, вторая фиксированная.",
      "grid-columns не является валидным.",
      "grid-template-rows задаёт строки, а не колонки.",
      "grid-flow не управляет шаблоном размеров.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_8",
    title:
      "Как расположить элемент, чтобы он занимал две строки и две колонки?",
    options: [
      "grid-column: span 2; grid-row: span 2;",
      "grid-area: 2 / 2;",
      "grid-span: 2;",
      "grid-template: 2x2;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-column: span 2 и grid-row: span 2 заставят элемент растянуться на две колонки и две строки.",
      "grid-area:2/2 задаёт ячейку, а не span.",
      "grid-span не является валидным свойством.",
      "grid-template:2x2 не существует.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_9",
    title: "Что делает свойство grid-auto-rows?",
    options: [
      "Задает высоту автоматически создаваемых строк",
      "Задает ширину автоматически создаваемых колонок",
      "Задает отступы между строками",
      "Запрещает перенос",
    ],
    correctAnswers: [0],
    descriptions: [
      "grid-auto-rows управляет высотой строк, создаваемых автоматически вне явного шаблона.",
      "grid-auto-columns задаёт ширину автоматически создаваемых колонок.",
      "grid-row-gap управляет отступами между строками.",
      "flex-wrap/ grid-wrap управляет переносом, а не grid-auto-rows.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_10",
    title: "Какой синтаксис задаёт три фиксированных колонки по 100px?",
    options: [
      "grid-template-columns: 100px 100px 100px;",
      "grid-template-rows: 100px 100px 100px;",
      "grid-auto-columns: 100px;",
      "grid-columns: 100px repeat(2, 100px);",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-template-columns:100px 100px 100px создаёт три колонки по 100px.",
      "grid-template-rows задаёт три фиксированные строки, а не колонки.",
      "grid-auto-columns задаёт ширину автоматически создаваемых колонок, а не явных.",
      "grid-columns не является валидным свойством.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_11",
    title:
      "Как задать пустой 20px промежуток между строками без промежутка между колонками?",
    options: [
      "grid-row-gap: 20px; grid-column-gap: 0;",
      "grid-gap: 20px 0;",
      "grid-row-gap: 0; grid-column-gap: 20px;",
      "grid-gap: 0 20px;",
    ],
    correctAnswers: [1],
    descriptions: [
      "grid-gap:20px 0 задаёт 20px между строками и 0 между колонками.",
      "Правильно: первый параметр - row gap, второй - column gap.",
      "Перепутаны параметры: здесь задан gap между колонками.",
      "Перепутаны параметры: здесь задан gap между колонками.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_12",
    title: "Что делает свойство grid-template-areas?",
    options: [
      "Позволяет задать именованные области в сетке для упрощения позиционирования",
      "Определяет шаблон строк",
      "Устанавливает gap между элементами",
      "Задаёт отступы внутри ячеек",
    ],
    correctAnswers: [0],
    descriptions: [
      "grid-template-areas позволяет создавать визуальный шаблон именованных областей, а не простые размеры.",
      "Ряд рядов задаётся grid-template-rows, а не grid-template-areas.",
      "grid-gap или gap управляет промежутками, а не grid-template-areas.",
      "padding управляет отступами внутри ячеек.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_13",
    title:
      "Как задать элементы grid так, чтобы первый элемент находился в области 'header'?",
    options: [
      "grid-area: header;",
      "grid-column: header;",
      "grid-row: header;",
      "grid-place: header;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-area: header помещает элемент в область с именем 'header'.",
      "grid-column задаёт номер колонки, а не именованную область.",
      "grid-row задаёт номер строки, а не именованную область.",
      "grid-place не является валидным свойством.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_14",
    title: "Что означает grid-auto-flow: column?",
    options: [
      "Автоматически размещает новые элементы по колонкам",
      "Запрещает автоматическое размещение",
      "Автоматически размещает новые элементы по строкам",
      "Изменяет направление flexbox",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-auto-flow:column размещает автоматически созданные элементы по колонкам.",
      "dense или row dense влияют, но column даёт поток по колонкам.",
      "grid-auto-flow: row или auto размещает по строкам, а не column.",
      "grid-auto-flow не влияет на flex.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_15",
    title:
      "Как задать, чтобы grid-контейнер автоматически создавал ячейки шириной минимум 150px?",
    options: [
      "grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));",
      "grid-template-rows: repeat(auto-fill, minmax(150px, 1fr));",
      "grid-auto-columns: minmax(150px, 1fr);",
      "grid-columns: minmax(150px, 1fr);",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: repeat(auto-fill, minmax(150px,1fr)) создаёт колонки минимум 150px и автоматически заполняет длину.",
      "grid-template-rows задаёт строки, а не колонки.",
      "grid-auto-columns задаёт ширину автоматически создаваемых колонок, но не весь шаблон.",
      "grid-columns не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_16",
    title: "Что делает свойство justify-items: center?",
    options: [
      "Центрирует содержимое ячеек по горизонтальной оси",
      "Центрирует содержимое ячеек по вертикальной оси",
      "Выравнивает колонки по центру",
      "Выравнивает строки по центру",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: justify-items управляет выравниванием содержимого внутри ячеек по строке (горизонтально).",
      "align-items выравнивает содержимое по вертикали внутри ячеек.",
      "justify-content выравнивает колонки как единое целое по горизонтали.",
      "align-content выравнивает строки как единое целое по вертикали.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_17",
    title: "Что делает свойство align-items: end на grid-контейнере?",
    options: [
      "Выравнивает содержимое ячеек по нижней границе ячейки",
      "Центрирует колонки по горизонтали",
      "Выравнивает строки по верхней границе",
      "Выравнивает содержимое по центру",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-items:end выравнивает содержимое ячеек по нижнему краю ячейки (по вертикали).",
      "justify-content выравнивает колонки, а не align-items.",
      "align-content управляет выравниванием строк, а не содержимого ячеек.",
      "center выравнивает содержимое по центру, а не end.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_18",
    title:
      "Как задать, чтобы grid-контейнер автоматически создавал колонки минимальной ширины 200px и занимал всю ширину?",
    options: [
      "grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));",
      "grid-template-rows: repeat(auto-fit, minmax(200px, 1fr));",
      "grid-auto-columns: minmax(200px, 1fr);",
      "grid-columns: auto-fit minmax(200px, 1fr);",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: repeat(auto-fit, minmax(200px,1fr)) позволяет колонкам автоматически адаптироваться, занимая доступное пространство.",
      "grid-template-rows управляет строками, а не колонками.",
      "grid-auto-columns задаёт ширину колонки при автоматическом создании, но не полный шаблон.",
      "grid-columns не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_19",
    title: "Как grid-auto-flow влияет, если задано dense?",
    options: [
      "Заполняет пустые ячейки максимально плотным образом",
      "Запрещает создание новых строк",
      "Центрирует все элементы",
      "Удаляет пробелы между колонками",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: с dense браузер попытается заполнить пустые клетки элементами наиболее плотно.",
      "dense не запрещает новые строки.",
      "justify-content и align-content отвечают за центрирование.",
      "grid-gap управляет пробелами, а не grid-auto-flow.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_20",
    title:
      "Как задать фиксированный размер строки 50px и автоматически вычисляемую остальную высоту?",
    options: [
      "grid-template-rows: 50px auto;",
      "grid-template-columns: 50px auto;",
      "grid-auto-rows: 50px auto;",
      "grid-rows: 50px auto;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-template-rows:50px auto задаёт первую строку 50px, а вторая автоматически занимает оставшуюся высоту.",
      "grid-template-columns задаёт колонки, а не строки.",
      "grid-auto-rows задаёт размеры автоматически создаваемых строк, а не явных.",
      "grid-rows не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_21",
    title: "Что делает свойство grid-template-columns?",
    options: [
      "Задает размеры колонок в grid-контейнере",
      "Задает размеры строк",
      "Определяет отступы между элементами",
      "Устанавливает порядок элементов",
    ],
    correctAnswers: [0],
    descriptions: [
      "grid-template-columns задает шаблон колонок.",
      "grid-template-rows управляет строками, а не колонками.",
      "grid-gap управляет отступами между элементами.",
      "order управляет порядком элементов в flexbox, а не в grid.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_22",
    title: "Как задать три колонки шириной 100px, 2fr и auto?",
    options: [
      "grid-template-columns: 100px 2fr auto;",
      "grid-template-rows: 100px 2fr auto;",
      "grid-template: 100px 2fr auto;",
      "grid-columns: 100px 2fr auto;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: первое значение для первой колонки, второе – фракции, третье – auto.",
      "grid-template-rows задает строки, а не колонки.",
      "grid-template – неточно; нужны отдельные свойства.",
      "grid-columns не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_23",
    title: "Что означает repeat(4, 1fr) в grid-template-rows?",
    options: [
      "Создает 4 строки, каждая по 1fr",
      "Создает одну колонку шириной 4fr",
      "Создает 4 колонки, каждая по 1fr",
      "Создает 4 ячейки автоматически",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: repeat(4,1fr) для строк задает четыре строки равной фракционной высоты.",
      "Это значение для строк, а не колонок.",
      "repeat в grid-template-rows задает строки, не колонки.",
      "Это не shorthand для автоматического создания ячеек.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_24",
    title: "Как задать колонку с минимальной шириной 150px и максимальной 1fr?",
    options: [
      "grid-template-columns: minmax(150px, 1fr);",
      "grid-template-rows: minmax(150px, 1fr);",
      "grid-auto-columns: minmax(150px, 1fr);",
      "grid-cols: minmax(150px, 1fr);",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: minmax(150px,1fr) задает диапазон ширины колонки.",
      "grid-template-rows задает строки, а не колонки.",
      "grid-auto-columns задает автоматический шаблон, а не явный.",
      "grid-cols не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_25",
    title: "Как задать три строки одинаковой высоты?",
    options: [
      "grid-template-rows: repeat(3, 1fr);",
      "grid-template-columns: repeat(3, 1fr);",
      "grid-auto-rows: 3fr;",
      "grid-rows: 1fr 1fr 1fr;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: repeat(3,1fr) создаст три строки равной высоты.",
      "Это свойство задает колонки, а не строки.",
      "grid-auto-rows управляет автоматически создаваемыми строками, но не явными.",
      "grid-rows не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_26",
    title: "Что задает grid-auto-columns?",
    options: [
      "Ширину колонок, которые создаются автоматически",
      "Высоту строк, которые создаются автоматически",
      "Ширину явных колонок",
      "Отступы между колонками",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-auto-columns управляет шириной создаваемых автоматически колонок.",
      "grid-auto-rows управляет высотой автоматически создаваемых строк.",
      "grid-template-columns задает явные колонки.",
      "gap управляет отступами между колонками.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_27",
    title: "Как задать автоматически создаваемые строки высотой 50px?",
    options: [
      "grid-auto-rows: 50px;",
      "grid-template-rows: 50px;",
      "grid-rows: 50px;",
      "grid-auto-columns: 50px;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-auto-rows задает высоту автоматически создаваемых строк.",
      "grid-template-rows задает лишь явные строки.",
      "grid-rows не является валидным.",
      "grid-auto-columns управляет колонками, а не строками.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_28",
    title:
      "Как задать, чтобы в grid автоматически создавались колонки минимум 100px?",
    options: [
      "grid-auto-columns: minmax(100px, auto);",
      "grid-auto-rows: minmax(100px, auto);",
      "grid-template-columns: minmax(100px, auto);",
      "grid-auto-column: 100px;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-auto-columns задает минимальную ширину создаваемых автоматически колонок.",
      "grid-auto-rows задает авто-строки, а не колонки.",
      "grid-template-columns задает явный, а не автоматический шаблон.",
      "grid-auto-column не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_29",
    title: "Что означает значение auto-fill в repeat(auto-fill, 200px)?",
    options: [
      "Заполняет всю ширину контейнера, создавая как можно больше колонок по 200px",
      "Создает ровно одну колонку шириной 200px",
      "Запрещает создание колонок",
      "Выравнивает колонки по центру",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fill заполняет доступное пространство колонками указанной ширины.",
      "Это не ограничит до одной колонки.",
      "Не запрещает создание, а наоборот создаёт максимально возможные.",
      "Выравнивает не влияет; это задача justify-content.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_30",
    title: "Что означает auto-fit в repeat(auto-fit, minmax(100px, 1fr))?",
    options: [
      "Автоматически размещает колонки, расширяясь или сжимаясь, чтобы вписаться в контейнер",
      "Запрещает заполнение контейнера колонками",
      "Создаёт колонки только при наличии свободного места",
      "Выравнивает колонки по краям",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit похож на auto-fill, но колонки могут «съезжать», если места меньше.",
      "Не запрещает, а наоборот создаёт.",
      "В обеих функциях создаётся, но auto-fit «сжимает» пустые колонки.",
      "Выравнивание не связано с auto-fit.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_31",
    title: "Как задать первую колонку 150px, вторую 1fr, третью 2fr?",
    options: [
      "grid-template-columns: 150px 1fr 2fr;",
      "grid-template-rows: 150px 1fr 2fr;",
      "grid-auto-columns: 150px 1fr 2fr;",
      "grid-cols: 150px 1fr 2fr;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-template-columns задаёт три колонки с указанными размерами.",
      "grid-template-rows задаёт строки, а не колонки.",
      "grid-auto-columns управляет только авто-колонками.",
      "grid-cols не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_32",
    title: "Что задаёт свойство grid-row?",
    options: [
      "Диапазон строк, на которых находится элемент",
      "Диапазон колонок, на которых находится элемент",
      "Высоту строки",
      "Прозрачность строки",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-row задаёт стартовую и конечную линии строки для элемента.",
      "grid-column задаёт диапазон колонок.",
      "Высоту строки задаёт grid-template-rows.",
      "Прозрачность управляется opacity.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_33",
    title: "Как разместить элемент во второй строке и третьей колонке?",
    options: [
      "grid-row: 2 / 3; grid-column: 3 / 4;",
      "grid-row: 3 / 2; grid-column: 2 / 3;",
      "grid-area: 3 / 2;",
      "grid-position: 2,3;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-row:2/3 указывает вторую строку, grid-column:3/4 указывает третью колонку.",
      "Диапазоны перепутаны; нужно 2/3, а не 3/2.",
      "grid-area принимает четыре параметра или имя области.",
      "grid-position не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_34",
    title: "Что делает свойство grid-column-start: 2?",
    options: [
      "Устанавливает начальную вертикальную линию для элемента как вторую колонку",
      "Устанавливает начальную горизонтальную линию для элемента как вторую строку",
      "Устанавливает промежуток между колонками",
      "Изменяет количество колонок",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-column-start задаёт номер вертикальной линии начала колонки.",
      "grid-row-start управляет строками, а не колонками.",
      "gap управляет промежутками, а не grid-column-start.",
      "grid-template-columns управляет количеством колонок.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_35",
    title: "Как задать элементу растяжение на всю ширину grid из трех колонок?",
    options: [
      "grid-column: 1 / 4;",
      "grid-row: 1 / 4;",
      "grid-area: span 3 / 1;",
      "grid-span: 3;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-column:1/4 охватывает все три колонки, так как линии 1 и 4 являются внешними.",
      "grid-row управляет строками, а не колонками.",
      "grid-area требует два диапазона или имя.",
      "grid-span не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_36",
    title: "Что делает свойство grid-row-end: span 2?",
    options: [
      "Растягивает элемент на две строки вниз",
      "Растягивает элемент на две колонки вправо",
      "Запрещает перенос",
      "Удаляет строку",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: span 2 указывает, что элемент займет две строки.",
      "span относится к строкам, а не к колонкам.",
      "grid-row-end не влияет на перенос.",
      "grid-row-end не удаляет строки.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_37",
    title:
      "Как разместить элемент на пересечении первой строки и второй колонки?",
    options: [
      "grid-area: 1 / 2;",
      "grid-row: 2 / 3; grid-column: 1 / 2;",
      "grid-row: 1 / 2; grid-column: 2 / 3;",
      "grid-position: 1x2;",
    ],
    correctAnswers: [2],
    descriptions: [
      "grid-area требует четыре параметра или имя.",
      "Перепутаны значения строк и колонок.",
      "Правильно: первая строка (1/2) и вторая колонка (2/3).",
      "grid-position не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_38",
    title: "Что делает шаблон grid-template-rows: auto 1fr 2fr?",
    options: [
      "Первая строка по содержимому, вторая занимает 1 часть, третья – 2 части оставшегося пространства",
      "Первая строка 1fr, вторая auto, третья 2fr",
      "Три строки равной высоты",
      "Удаляет вторую строку",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto – размер по содержимому, 1fr и 2fr – фракции.",
      "Порядок значений неверен.",
      "Для равных нужно 1fr 1fr 1fr.",
      "grid-template-rows не удаляет строки.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_39",
    title: "Как задать колонку с минимальной шириной 100px и максимумом 300px?",
    options: [
      "grid-template-columns: minmax(100px, 300px);",
      "grid-auto-columns: minmax(100px, 300px);",
      "grid-template-rows: minmax(100px, 300px);",
      "grid-flow: minmax(100px, 300px);",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: minmax(100px,300px) задает диапазон ширины колонки.",
      "grid-auto-columns управляет только авто-колонками.",
      "grid-template-rows задает строки, а не колонки.",
      "grid-flow не задает диапазон.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_40",
    title: "Что задает grid-column-gap?",
    options: [
      "Промежуток между колонками",
      "Промежуток между строками",
      "Ширину колонок",
      "Высоту строк",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-column-gap определяет расстояние между колонками.",
      "grid-row-gap определяет промежуток между строками.",
      "Ширина колонок задается grid-template-columns или grid-auto-columns.",
      "Высота строк задается grid-template-rows или grid-auto-rows.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_41",
    title:
      "Что означает значение auto-fill в repeat(auto-fill, minmax(100px, 1fr))?",
    options: [
      "Заполняет ряд столько колонок, сколько поместится, оставляя пустые «слоты»",
      "Заполняет ряд ровно одной колонкой",
      "Ограничивает количество колонок до 1fr",
      "Удаляет колонки при нехватке места",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fill создаёт колонки, пока они умещаются, оставляя пустые ячейки, если мест больше нет.",
      "Не ограничивает до одной колонки.",
      "1fr — это размер, а не ограничение количества.",
      "Колонки не удаляются; они остаются пустыми.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_42",
    title:
      "В чем отличие auto-fit от auto-fill в repeat(auto-fit, minmax(150px, 1fr))?",
    options: [
      "auto-fit сжимает пустые слоты вместе, auto-fill оставляет их",
      "auto-fit создаёт больше колонок, auto-fill — меньше",
      "auto-fit не поддерживается в IE, auto-fill поддерживается",
      "auto-fit задаёт строки, auto-fill — колонки",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit «собирает» пустые места, в то время как auto-fill сохраняет пустые позиции.",
      "Количество колонок определяется доступным пространством, а не самим значением.",
      "Оба работают в современных браузерах, IE не поддерживает Grid вовсе.",
      "Оба управляют колонками, а не строками.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_43",
    title:
      "Что произойдёт, если в контейнере недостаточно места для minmax(200px, 1fr) с auto-fill?",
    options: [
      "Будет создана хотя бы одна колонка шириной 1fr",
      "Ни одна колонка не создастся",
      "Будут созданы колонки шириной менее 200px",
      "Элемент попытается сжаться меньше min",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при нехватке места minmax устанавливает ширину в 1fr, и хотя бы одна колонка появится.",
      "Всегда создаётся хотя бы одна колонка.",
      "min-width = 200px, так что ширина не будет меньше.",
      "minmax запрещает сжатие меньше min.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_44",
    title:
      "Как repeat(auto-fill, 150px) отличается от repeat(auto-fill, minmax(150px, 1fr))?",
    options: [
      "Первый создаёт колонки жёстко по 150px, второй — адаптивные от 150px до 1fr",
      "Первый создаёт строки, второй — колонки",
      "Первый игнорирует auto-fill, второй — нет",
      "Первый работает только с fr, второй — только с px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: repeat(auto-fill,150px) задаёт фиксированную ширину, а minmax позволяет адаптивно менять размер.",
      "Оба задают колонки, а не строки.",
      "auto-fill применяется в обоих случаях.",
      "Первый использует px, второй — сочетание min и fr.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_45",
    title: "При каком условии auto-fit и auto-fill ведут себя одинаково?",
    options: [
      "Когда сетка заполнена полностью, без пустых слотов",
      "Когда задано grid-auto-flow: column",
      "Когда используются только пиксельные значения, без fr",
      "Никогда не ведут себя одинаково",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: если сетка наполнена без пустых ячеек, auto-fit и auto-fill дают одинаковый результат.",
      "grid-auto-flow не влияет на поведение auto-fit/auto-fill.",
      "Тип единиц не влияет на логику заполнения; при полном заполнении результат тот же.",
      "При полном заполнении они дают одинаковый шаблон.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_46",
    title:
      "Что верно про repeat(auto-fit, minmax(100px, 1fr)) на широком экране?",
    options: [
      "Создаст максимально возможное количество колонок шириной минимум 100px",
      "Создаст ровно одну колонку шириной 1fr",
      "Заполнит колонкой только половину ширины экрана",
      "Будет создавать строки вместо колонок",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit создаёт столько колонок по минимум 100px, сколько поместится; при лишнем месте они растянутся до равных 1fr.",
      "На широком экране получится несколько колонок.",
      "Колонки заполнят всю ширину, а не половину.",
      "repeat(auto-fit,…) всегда создаёт колонки.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_47",
    title: "Как ведёт себя repeat(auto-fill, minmax(200px, 200px))?",
    options: [
      "Создаёт колонки фиксированной ширины 200px",
      "Создаёт адаптивные колонки от 200px до 200px",
      "Не создаёт колонки, так как min и max равны",
      "Автоматически удаляет колонки при сжатии",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: minmax с одинаковыми min и max эквивалентно фиксированной ширине, поэтому колонки всегда 200px.",
      "Хотя это адаптивная запись, она сводится к фиксированному размеру.",
      "С min и max равными, колонки всё равно создаются фиксированного размера.",
      "Колонки не удаляются автоматически, они остаются фиксированными.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_48",
    title:
      "Что произойдёт, если задать repeat(auto-fit, minmax(150px, 1fr)) и сетка не заполнена контентом полностью?",
    options: [
      "Пустые «ячейки» схлопнутся, а колонки растянутся равномерно",
      "Будут видны пустые пустые ячейки фиксированного размера",
      "Колонки исчезнут",
      "Элементы станут наложенными",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit «собирает» пустые ячейки, а существующие колонки растягиваются до равных долей 1fr.",
      "Это поведение auto-fill, а не auto-fit.",
      "Колонки не исчезают; они адаптивно растягиваются.",
      "Наложение не происходит, так как свободное пространство перераспределяется.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_49",
    title: "Как задать, чтобы колонки создавались только при наличии контента?",
    options: [
      "Использовать auto-fit вместо auto-fill",
      "Использовать auto-fill вместо auto-fit",
      "Задать grid-auto-flow: row",
      "Задать grid-auto-columns: 0",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit создаёт колонки только под существующий контент, «собирателя» пустых ячеек.",
      "auto-fill создаёт максимальное количество, включая пустые.",
      "grid-auto-flow относится к направлению потока, а не заполнению колонок.",
      "grid-auto-columns задаёт ширину авто-колонок, но не влияет на их создание.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_50",
    title:
      "Как повторить три колонки по минимум 100px, но не более 1fr, с заполнением авто-колонок?",
    options: [
      "grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));",
      "grid-template-columns: repeat(3, minmax(100px, 1fr));",
      "grid-auto-columns: repeat(auto-fill, minmax(100px, 1fr));",
      "grid-auto-rows: repeat(auto-fill, minmax(100px, 1fr));",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fill создаёт колонки, пока есть место, а minmax гарантирует диапазон.",
      "repeat(3,…) создаст ровно 3, а не автоматически.",
      "grid-auto-columns влияет только на автоматические колонки.",
      "grid-auto-rows создаёт строки, а не колонки.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_51",
    title:
      "Что будет, если задать grid-template-columns: repeat(auto-fit, minmax(150px, 2fr));?",
    options: [
      "Колонки шириной минимум 150px, максимум 2fr, без пустых слотов",
      "Колонки фиксированного размера 2fr",
      "Колонки всегда 150px",
      "Колонки исчезнут при нехватке места",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit создаёт колонки до заполнения, а minmax управляет диапазоном от 150px до 2fr.",
      "2fr — максимальное значение, но min позволяет 150px.",
      "max не равен min, так что не всегда 150px.",
      "Колонки не исчезают; они занимают min ширину.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_52",
    title:
      "При использовании auto-fill, что произойдёт, если свободного места достаточно только для части колонки?",
    options: [
      "Будет создана колонка меньшей ширины до min-width, если указан minmax",
      "Колонка не создастся и остаток останется пустым",
      "Ширина колонки автоматически увеличится до max",
      "Элемент переполнит контейнер",
    ],
    correctAnswers: [1],
    descriptions: [
      "Если minmax задан, поведение: при отсутствии места min ширина не может быть соблюдена, поэтому колонка не создаётся.",
      "Правильно: если min ширина не помещается, auto-fill пропускает создание колонки.",
      "max действует только при наличии места свыше min.",
      "Переполнение не происходит; просто колонка не создаётся.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_53",
    title:
      "Как указать, чтобы авто-колонки имели фиксированный размер 200px без адаптации?",
    options: [
      "grid-auto-columns: 200px;",
      "grid-template-columns: auto-fill 200px;",
      "grid-auto-columns: minmax(200px, 200px);",
      "grid-template-columns: 200px auto-fill;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-auto-columns:200px задаёт фиксированную ширину для авто-колонок.",
      "Неправильный синтаксис для явных колонок.",
      "minmax(200px,200px) эквивалентно 200px, но shorthand проще.",
      "Неверный синтаксис – repeat или auto-fill внутри grid-template-columns.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_54",
    title: "Что делает grid-auto-flow: dense в сочетании с auto-fill?",
    options: [
      "Попытаться заполнить пробелы плотнее, даже если порядок нарушается",
      "Запрещает создание авто-строк",
      "Центрирует колонки",
      "Запрещает перенос",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: dense пытается компактно заполнить небольшие пробелы элементами, игнорируя исходный порядок.",
      "Не запрещает создание строк; управляет лишь плотностью размещения.",
      "Выравнивание зависит от justify-content/align-content.",
      "flex-wrap/ grid-wrap управляет переносом, а не grid-auto-flow.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_55",
    title:
      "Как auto-fit поможет при отсутствии достаточного количества контента для заполнения всех колонок?",
    options: [
      "Схлопнёт пустые колонки, оставив только заполненные",
      "Оставит пустые ячейки видимыми",
      "Запрещает создание колонок",
      "Сгенерирует placeholder",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit убирает неиспользуемые авто-ячейки, растягивая существующие.",
      "Это поведение auto-fill, а не auto-fit.",
      "auto-fit не запрещает создание, а упрощает адаптивность.",
      "Placeholder не создаётся; лишь колонки скрываются.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_56",
    title:
      "Как указать, чтобы сетка заполнялась как можно больше колонок 150px, но минимизировала пустые места?",
    options: [
      "repeat(auto-fit, minmax(150px, 1fr))",
      "repeat(auto-fill, 150px)",
      "repeat(auto-fit, 150px)",
      "repeat(auto-fill, minmax(150px, 1fr))",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit вместе с minmax позволяет адаптивно размещать колонки без пустых ячеек.",
      "repeat(auto-fill,150px) оставит пустые ячейки, если место остается.",
      "repeat(auto-fit,150px) задаст фиксированную ширину, но не адаптивность.",
      "auto-fill заполнит как можно больше, но оставит пробелы.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_57",
    title:
      "Что произойдёт, если minmax(100px, 1fr) используется без auto-fill или auto-fit?",
    options: [
      "Сетка создаст точно указанное число колонок, даже при нехватке или избытке места",
      "Сетка автоматически применит auto-fill",
      "minmax не будет работать",
      "Сетка создаст только одну колонку",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: без auto-*, repeat(N, minmax…) создаст ровно N колонок вне зависимости от пространства.",
      "auto-fill/auto-fit задаются явно, не по умолчанию.",
      "minmax работает, но без auto-* требует жёсткого числа.",
      "Создаст столько, сколько указано, а не автоматически одну.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_58",
    title:
      "Какое поведение более подходяще для сеток с переменным контентом: auto-fit или auto-fill?",
    options: [
      "auto-fit, чтобы не оставлять пустые ячейки",
      "auto-fill, чтобы сохранить пустые ячейки",
      "Оба одинаковы",
      "Ни один из них",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit убирает пустые ячейки, лучше для переменного контента.",
      "auto-fill сохраняет пустые позиции, что может быть нежелательно.",
      "Они различаются в поведении, когда остаётся пространство.",
      "Оба работают, но auto-fit предпочтительнее для адаптивности.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_59",
    title:
      "Можно ли использовать minmax() без auto-fill/auto-fit для адаптивных колонок?",
    options: [
      "Да, но тогда число колонок фиксировано",
      "Нет, minmax требует auto-fill",
      "Да, при grid-auto-columns",
      "Нет, minmax работает только с repeat",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: без auto-* можно адаптивно менять размеры, но число колонок задано явно.",
      "minmax не требует auto-*, но шаблон статичный.",
      "grid-auto-columns задаёт только авто-колонки, а не явный шаблон.",
      "minmax можно применять без repeat, но чаще вместе.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_60",
    title:
      "Какой параметр repeat автоматически создаёт колонки до предела и исчезает при нехватке места?",
    options: ["auto-fit", "auto-fill", "minmax", "grid-gap"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit схлопывает пустые ячейки, исчезая при нехватке места.",
      "auto-fill сохраняет пустые ячейки даже при нехвате места.",
      "minmax управляет размером, а не исчезновением колонок.",
      "grid-gap управляет промежутками, а не количеством колонок.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_61",
    title: "Что задаёт свойство grid-template-areas?",
    options: [
      "Именованные области для упрощённого позиционирования элементов",
      "Отступы между ячейками",
      "Ширину колонок",
      "Направление потока элементов",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-template-areas позволяет задать шаблон именованных областей внутри контейнера.",
      "Промежутки задаются grid-gap, а не grid-template-areas.",
      "Ширина колонок задаётся grid-template-columns.",
      "Направление потока задаётся grid-auto-flow.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_62",
    title:
      "Как выглядит синтаксис для трёх областей: header, sidebar, content?",
    options: [
      "grid-template-areas: 'header header' 'sidebar content';",
      "grid-template-areas: 'header' 'sidebar' 'content';",
      "grid-areas: 'header, sidebar, content';",
      "grid-template: header sidebar content;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: области разделяются пробелами внутри строк, а строки – переносом в кавычках.",
      "Каждая область на отдельной строке без указания колонок некорректно.",
      "grid-areas не является валидным свойством.",
      "Неверный синтаксис – нужно указывать области в кавычках.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_63",
    title: "Что ставят в ячейке шаблона, чтобы обозначить пустое место?",
    options: ["'.'", "'empty'", "'none'", "'void'"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: точка обозначает пустой слот без именованной области.",
      "'empty' не является допустимым идентификатором в grid-template-areas.",
      "'none' не применяется для пустых ячеек.",
      "'void' не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_64",
    title:
      "Как задать область 'footer', чтобы она располагалась в нижней строке по всему диапазону колонок?",
    options: [
      "footer { grid-area: footer; }",
      "footer { grid-column: span 3; }",
      "footer { grid-row: span 3; }",
      "footer { grid-column: 1 / -1; }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при объявлении именованной области в шаблоне grid-template-areas элементу задают grid-area с таким же именем.",
      "grid-column: span 3 не привязан к area-декларации.",
      "grid-row: span 3 задаёт растяжение по строкам, но без area не применится.",
      "Хотя grid-column:1/-1 растянет по колонкам, здесь нужен grid-area.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_65",
    title:
      "Что указывают в grid-area, чтобы элемент расположился в области 'nav'?",
    options: [
      "grid-area: nav;",
      "grid-area: 1 / 2 / 2 / 3;",
      "grid-area: 2 / 1;",
      "grid-area: 1 / span 2;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: простая запись grid-area: имя области; привязывает элемент.",
      "grid-area с четырьмя числами задаёт явный диапазон, не имя.",
      "Недостаточно параметров, без имен области.",
      "Неправильная запись для именованной области.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_66",
    title: "Как объявить шаблон с именами областей: 'a a b' и 'c d d'?",
    options: [
      "grid-template-areas: 'a a b' 'c d d';",
      "grid-template-areas: a a b / c d d;",
      "grid-template-areas: ['a','a','b'], ['c','d','d'];",
      "grid-template-areas: a a b c d d;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: области перечисляются в строках через пробел, каждая строка в кавычках.",
      "Неверный разделитель – нужно кавычки, а не слэш.",
      "Неправильный синтаксис – требуется строка в кавычках.",
      "Нужно разбивать на отдельные строки в кавычках.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_67",
    title:
      "Что должно быть в grid-template-areas, если ячейка занимает две строки и две колонки?",
    options: [
      "Имя области повторяется в этих ячейках",
      "Имя области ставится один раз в первой ячейке",
      "Область описывается через span в grid-template-rows",
      "grid-area: span 2 / span 2",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: имя области указывается в каждой пересекающей ячейке, чтобы создать прямоугольник.",
      "Недостаточно – нужно повторить имя во всех ячейках перекрытия.",
      "span относится к явным линиям, а не к именованным областям.",
      "grid-area с span работает отдельно от шаблона имен.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_68",
    title: "Каково ограничение при использовании именованных областей?",
    options: [
      "Имена должны образовывать прямоугольные блоки",
      "Имена не должны содержать цифр",
      "Имена автоматически удваиваются",
      "Имена могут быть только короткие",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: область должна быть непрерывной и прямоугольной, без разрывов.",
      "Цифры в именах разрешены.",
      "Имена не удваиваются; нужно указать каждую ячейку.",
      "Длина имени не имеет строгого ограничения.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_69",
    title: "Что означает точка '.' в шаблоне grid-template-areas?",
    options: [
      "Пустую область без содержимого",
      "Динамическую область",
      "Переполнение сетки",
      "Слияние ячеек",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: точка обозначает, что в этой ячейке нет именованной области.",
      "'.' не создаёт динамику; просто пусто.",
      "Не связано с переполнением.",
      "Не используется для слияния.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_70",
    title: "Какой синтаксис правильный для пустой ячейки в средней колонке?",
    options: [
      "'.' между двумя именами",
      "'empty' между именами",
      "'none' между именами",
      "'void' между именами",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: точка обозначает отсутствующую область.",
      "'empty' не является специальным значением.",
      "'none' не работает для имен областей.",
      "'void' не используется.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_71",
    title: "Какому свойству задают grid-area: header; ?",
    options: [
      "Элементу с именем области 'header'",
      "Контейнеру grid-контейнера",
      "Ячейке между строками header",
      "Общему шаблону областей",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-area применяется к дочернему элементу, чтобы он занимал именованную область.",
      "Контейнеру задают grid-template-areas, а не grid-area.",
      "grid-row и grid-column задают диапазоны, а не именованные области.",
      "grid-area задаёт отдельным элементам, а не шаблону.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_72",
    title:
      "Как присвоить элементу область, состоящую из двух колонок и одной строки?",
    options: [
      "grid-area: 1 / 2 / 2 / 4;",
      "grid-area: 'two-col';",
      "grid-row: span 2; grid-column: span 1;",
      "grid-area: 1 / span 2;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: четыре числа задают начало/конец строк и начало/конец колонок.",
      "Нужно объявить именованную область в шаблоне, а затем применить её.",
      "span 2 / span 1 не указывает фактический диапазон.",
      "Неполный синтаксис; требует двух диапазонов.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_73",
    title: "Что grid-area: footer / 1 / 3 / 4; означает?",
    options: [
      "Занять область с именем footer, начиная с 1-й строки до 3-й, и 3-й колонки до 4-й",
      "Ошибка – нельзя смешивать имя и числа",
      "Занять область с именем footer в каждой ячейке",
      "grid-area не принимает четыре числа с именем",
    ],
    correctAnswers: [1],
    descriptions: [
      "Неверно: либо используются только имя, либо только индексы, нельзя совместно.",
      "Правильно: grid-area либо принимает одно имя, либо четыре числовых индекса, но не оба вместе.",
      "grid-area не заполняет каждую ячейку автоматически.",
      "Микс имени и чисел недопустим.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_74",
    title:
      "Как объявить именованную область 'main' в шаблоне, чтобы занимать центральную часть?",
    options: [
      "grid-template-areas: ' . main . ';",
      "grid-template-areas: 'main';",
      "grid-template-areas: '. main';",
      "grid-template-areas: ' . main . . ';",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: точка точка указывают пустые ячейки слева и справа, main – в центре.",
      "Нужно указать пустые колонки, иначе main займёт всю ширину.",
      "Неполный синтаксис – не указан шаблон целиком.",
      "Лишняя точка приведёт к неправильному количеству колонок.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_75",
    title:
      "Как задать область, состоящую из двух строк и трёх колонок, именем 'banner'?",
    options: [
      "grid-template-areas: 'banner banner banner' 'banner banner banner';",
      "grid-template-areas: 'banner' 'banner';",
      "grid-template-areas: 'banner banner' 'banner banner';",
      "grid-template-areas: 'banner banner banner banner';",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: повторить имя 'banner' во всех ячейках 2×3.",
      "Каждая строка должна содержать три колонки.",
      "Неверная матрица размеров – 2×2, а нужно 2×3.",
      "Четыре повторения дают 1×4 матрицу, а не 2×3.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_76",
    title: "Что означает grid-area: header / span 2 / span 3 / 4;?",
    options: [
      "Начать header на строке header, растянуть по строкам 2 и по колонкам 3",
      "Ошибка синтаксиса",
      "header – имя, остальные – диапазоны",
      "Применит область header и индексы одновременно",
    ],
    correctAnswers: [1],
    descriptions: [
      "Неверно – нельзя совмещать имя и span.",
      "Правильно: grid-area либо имя, либо точный диапазон без span, либо четыре числовых индекса.",
      "Нельзя смешивать имя и числовые операторы.",
      "Имя нельзя комбинировать с цифрами в одной записи.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_77",
    title: "Как задать элементу занимать область 'sidebar' в шаблоне?",
    options: [
      "sidebar { grid-area: sidebar; }",
      "sidebar { grid-template-areas: sidebar; }",
      "sidebar { grid-column: sidebar; }",
      "sidebar { grid-row: sidebar; }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-area: sidebar; привяжет элемент к этой именованной области.",
      "grid-template-areas задаётся контейнеру, а не элементу.",
      "grid-column ожидает числовые или span, а не имя области.",
      "grid-row ожидает номера строк, а не имя области.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_78",
    title: "Что необходимо для использования grid-area с именованной областью?",
    options: [
      "Объявить имя в grid-template-areas контейнера",
      "Задать grid-gap для контейнера",
      "Указать grid-auto-flow: row",
      "Использовать только minmax",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: именованная область должна быть объявлена в grid-template-areas.",
      "grid-gap влияет только на отступы, не на именованные области.",
      "grid-auto-flow управляет размещением, а не именами.",
      "minmax не связана с именованными областями.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_79",
    title: "Что делает свойство grid-area: 2 / 1 / 3 / 4; ?",
    options: [
      "Занимает вторую строку и первые три колонки",
      "Занимает первую строку и вторые три колонки",
      "Занимает три строки и одну колонку",
      "Занимает всю сетку",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: 2/1/3/4 означает start-row 2, start-col 1, end-row 3, end-col 4.",
      "Неверный порядок – 1/2/4/3, так не трактуется.",
      "Диапазон строк – 2 до 3, а не 3 строк, а диапазон колонок – 1 до 4.",
      "Ограничено указанными линиями, не всей сеткой.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_80",
    title: "Какой синтаксис создаёт область 'content' в позиции 2 / 2 / 4 / 5?",
    options: [
      "content { grid-area: 2 / 2 / 4 / 5; }",
      "content { grid-area: 'content'; }",
      "content { grid-template-areas: 'content'; }",
      "content { grid-area: 2-2-4-5; }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: четыре числа задают начало и конец по строкам и колонкам.",
      "Имя без объявления в шаблоне не сработает.",
      "grid-template-areas задаётся на контейнере, не на элементе.",
      "Неверный синтаксис – нужно слэши, а не дефисы.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_81",
    title: "Когда обычно лучше использовать Flexbox вместо Grid?",
    options: [
      "Для одномерных макетов (либо строка, либо колонка)",
      "Для сложных двумерных сеток",
      "Для управления отступами и границами",
      "Для позиционирования абсолютно спозиционированных элементов",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: Flexbox оптимален для одномерных макетов (линии или колонки).",
      "Grid предназначен именно для двумерных сеток.",
      "Отступы и границы задаются отдельными CSS-свойствами, а не Flex/Flexbox.",
      "Абсолютное позиционирование не зависит от Flexbox или Grid.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_82",
    title: "Что является преимуществом Grid перед Flexbox?",
    options: [
      "Более простое создание двумерных макетов",
      "Легче выравнивать элементы по одной оси",
      "Меньшее количество CSS-свойств",
      "Поддерживает только адаптивные единицы",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: Grid позволяет легко управлять как строками, так и колонками одновременно.",
      "Выравнивание по одной оси проще в Flexbox.",
      "Grid требует больше свойств для управления сеткой.",
      "Grid поддерживает любые единицы измерения, не только адаптивные.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_83",
    title: "Какое свойство в Flexbox управляет направлением оси?",
    options: [
      "flex-direction",
      "grid-template-columns",
      "justify-items",
      "align-content",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-direction определяет направление основной оси (row, column).",
      "grid-template-columns задаёт колонки, а не направление Flexbox.",
      "justify-items используется в Grid, а не в Flexbox.",
      "align-content используется и там, и там, но не для направления.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_84",
    title:
      "Как называется свойство Grid для управления направлением строк и колонок?",
    options: [
      "grid-auto-flow",
      "flex-wrap",
      "justify-content",
      "flex-direction",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-auto-flow управляет автоматическим заполнением строк или колонок.",
      "flex-wrap используется в Flexbox, а не в Grid.",
      "justify-content управляет выравниванием, а не направлением.",
      "flex-direction относится только к Flexbox.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_85",
    title:
      "Какой из инструментов лучше подходит для распределения элементов в одной строке с равными промежутками?",
    options: [
      "Flexbox с justify-content: space-between",
      "Grid с grid-gap",
      "Grid с grid-template-areas",
      "Flexbox с align-items: stretch",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: justify-content: space-between в Flexbox равномерно распределяет элементы по строке.",
      "grid-gap определяет промежутки, но не равное распределение в одномерном макете.",
      "grid-template-areas управляет расположением областей, а не распределением пробелов.",
      "align-items: stretch растягивает элементы по поперечной оси, а не распределяет по строке.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_86",
    title:
      "Какой метод удобнее для создания одинаковых ячеек сетки по обеим осям?",
    options: [
      "Grid с grid-template-columns и grid-template-rows",
      "Flexbox с flex-basis",
      "Flexbox с order",
      "Grid с grid-auto-flow: column",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-template-columns и grid-template-rows позволяют задать размеры ячеек по горизонтали и вертикали.",
      "flex-basis задает размер по основной оси, но не по двум осям одновременно.",
      "order управляет порядком, а не размерами ячеек.",
      "grid-auto-flow управляет потоком, а не размером ячеек.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_87",
    title:
      "Как Flexbox справляется с адаптивностью ширины элементов по сравнению с Grid?",
    options: [
      "Flexbox автоматически подстраивает размер элементов внутри строки",
      "Flexbox всегда фиксирует размеры элементов",
      "Flexbox не поддерживает дробные единицы (fr)",
      "Flexbox запрещает перенос элементов",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: Flexbox позволяет элементам гибко менять размер внутри строки.",
      "Flexbox позволяет гибкость через flex-grow и flex-shrink, а не фиксирует размеры.",
      "Flexbox использует разные единицы (%, px), но не fr.",
      "flex-wrap управляет переносом, а не Flexbox в целом.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_88",
    title:
      "Что Grid предоставляет сверх Flexbox при управлении шаблоном расположения?",
    options: [
      "Именованные области и детальный контроль над ячейками",
      "Умную адаптивную обтекание текста",
      "Автоматическое управление шрифтами",
      "Управление псевдоэлементами",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: Grid позволяет задавать именованные области (grid-template-areas) и точно позиционировать ячейки.",
      "Обтекание текста контролируется другими свойствами CSS, не Grid.",
      "Шрифты управляются font-family, font-size и так далее, а не Grid.",
      "Псевдоэлементы задаются свойствами before/after, а не Grid.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_89",
    title:
      "Какой инструмент лучше для выравнивания элементов по вертикали в контейнере?",
    options: [
      "Flexbox с align-items",
      "Grid с grid-template-areas",
      "Grid с justify-content",
      "Flexbox с flex-wrap",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-items в Flexbox выравнивает элементы по поперечной (вертикальной) оси.",
      "grid-template-areas управляет расположением областей, а не выравниванием по вертикали.",
      "justify-content в Grid выравнивает области по горизонтали, а не по вертикали.",
      "flex-wrap управляет переносом, а не выравниванием по вертикали.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_90",
    title:
      "Какая особенность Grid упрощает создание асимметричных макетов по сравнению с Flexbox?",
    options: [
      "Двумерность управления строками и колонками",
      "Автоматическая сортировка элементов",
      "Интеграция с CSS-переменными",
      "Глубокая поддержка анимаций",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: Grid позволяет управлять одновременно строками и колонками для создания асимметричных макетов.",
      "Grid не сортирует автоматически элементы по логике, это делают JavaScript или Flexbox с order.",
      "CSS-переменные работают с любым layout-инструментом, не специфичны для Grid.",
      "Анимации работают через transition/animation, не привязаны только к Grid.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_91",
    title:
      "Как Flexbox ведёт себя при выравнивании объектов разной высоты на одной линии?",
    options: [
      "Выравнивает по базовой линии, если не задано иное",
      "Заставляет все элементы иметь одинаковую высоту",
      "Игнорирует различия высот",
      "Автоматически растягивает все элементы",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: по умолчанию элементы выравниваются по базовой линии текста, но можно менять через align-items.",
      "Flexbox не автоматически выравнивает высоту всех элементов.",
      "Flexbox учитывает различия высот при переносах и выравнивании.",
      "Растягиваются только если align-items: stretch.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_92",
    title:
      "Как Grid упрощает равномерное распределение одинаковых ячеек по обеим осям?",
    options: [
      "Использование функций repeat() и fr единиц",
      "Использование flex-grow и flex-shrink",
      "Использование justify-content: center",
      "Использование align-items: stretch",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: repeat() и fr позволяют задать равномерные ячейки по строкам и колонкам.",
      "flex-grow и flex-shrink работают только по одной оси одновременно.",
      "justify-content выравнивает по горизонтальной оси, но не создает равномерные ячейки.",
      "align-items растягивает по поперечной оси, но не создает сетку.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_93",
    title: "Как Flexbox обрабатывает перенос элементов при нехватке места?",
    options: [
      "Через свойство flex-wrap",
      "Через grid-auto-flow",
      "Через grid-gap",
      "Через justify-items",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-wrap контролирует, будут ли элементы переноситься на новую строку.",
      "grid-auto-flow относится к Grid, а не Flexbox.",
      "grid-gap контролирует промежутки, а не перенос.",
      "justify-items используется в Grid, а не для переноса.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_94",
    title: "Как Grid управляет пересечением элементов при явном размещении?",
    options: [
      "Использует grid-row и grid-column, позволяя элементам перекрывать друг друга",
      "Использует flex-overlap",
      "Автоматически разрывает перекрывающиеся элементы",
      "Использует gap для ограничения пересечений",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grid-row и grid-column задают явные диапазоны, возможна перекрываемость.",
      "flex-overlap не существует в Flexbox.",
      "Grid не разрывает; управление перекрытием происходит через позиционирование.",
      "gap влияет только на промежутки между ячейками, а не на перекрытие.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_95",
    title: "Что Flexbox не может сделать так же просто, как Grid?",
    options: [
      "Создать сетку с жесткими строками и колонками одновременно",
      "Выровнять элементы по центру по одной оси",
      "Сжать элементы при нехватке места",
      "Переупорядочить элементы с помощью order",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: Flexbox одномерный, поэтому управление двумя осями одновременно сложно.",
      "Flexbox легко выравнивает элементы по одной оси через justify-content или align-items.",
      "Flexbox поддерживает сжатие через flex-shrink.",
      "Flexbox поддерживает order для изменения порядка элементов.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_96",
    title: "В каком сценарии Flexbox и Grid могут использоваться вместе?",
    options: [
      "Grid для макета страницы, Flexbox для выравнивания элементов внутри ячеек",
      "Flexbox для глобального макета, Grid для кнопок",
      "Grid для текста, Flexbox для изображений",
      "Flexbox нельзя сочетать с Grid",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: часто используют Grid для макета ячеек, внутри каждой ячейки Flexbox для выравнивания вложенных элементов.",
      "Глобальный макет лучше делать через Grid, а не через Flexbox.",
      "Выбор не зависит от содержимого, а от структуры макета.",
      "Flexbox и Grid могут прекрасно сочетаться.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_97",
    title: "Что делает justify-content: stretch в Grid?",
    options: [
      "Растягивает содержимое ячеек по горизонтали внутри ячеек",
      "Растягивает колонки",
      "Растягивает строки",
      "Заполняет сетку автоматически",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: justify-content внутри Grid растягивает содержимое ячеек по горизонтальной оси.",
      "Растягивание колонок происходит через fr, а не justify-content.",
      "align-content управляет растяжением строк.",
      "grid-auto-flow управляет автоматическим заполнением.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_98",
    title: "Что делает align-content: space-between в Grid?",
    options: [
      "Распределяет ряды по вертикальной оси с равными промежутками",
      "Распределяет колонки по горизонтали с равными промежутками",
      "Выравнивает содержимое ячеек",
      "Сжимает элементы",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-content распределяет ряды (строки) по вертикальной оси.",
      "justify-content распределяет колонки, а не align-content.",
      "align-items управляет содержимым ячеек, а не align-content.",
      "align-content не влияет на сжатие элементов.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_99",
    title: "Как Flexbox реагирует на свободное пространство внутри контейнера?",
    options: [
      "Элементы растягиваются или сжимаются в зависимости от flex-grow и flex-shrink",
      "Элементы остаются фиксированного размера",
      "Колонки создаются автоматически",
      "Grid-template заполняется автоматически",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-grow и flex-shrink определяют, как элементы адаптируются к свободному пространству.",
      "Flexbox гибкий и изменяет размеры, а не фиксирует.",
      "Автоматическое создание колонок – прерогатива Grid.",
      "grid-template используется только в Grid, а не в Flexbox.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
  {
    id: "css_grid_100",
    title: "Когда Grid может быть избыточен по сравнению с Flexbox?",
    options: [
      "Когда нужен простой одномерный макет без сложных областей",
      "Когда необходимо управлять позиционированием по двум осям",
      "Когда нужно распределить ячейки по фракциям",
      "Когда требуется именованный шаблон",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: для простого одномерного макета Flexbox проще и менее громоздок.",
      "Управление по двум осям – задача именно Grid.",
      "Grid и Flexbox поддерживают процентную и фракционную систему, но для одномерного достаточно Flexbox.",
      "Именованные шаблоны – прерогатива Grid, не избыточны.",
    ],
    moduleId: "css",
    sectionTitle: "Grid Layout",
    topic: "css_grid",
  },
];
