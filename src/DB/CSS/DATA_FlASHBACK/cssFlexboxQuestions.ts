export const cssFlexboxQuestions = [
  {
    id: "css_flexbox_1",
    title: "Какое свойство превращает элемент в flex-контейнер?",
    options: [
      "display: grid;",
      "display: flex;",
      "flex-direction: row;",
      "justify-content: center;",
    ],
    correctAnswers: [1],
    descriptions: [
      "display: grid создаёт grid-контейнер, а не flex.",
      "Правильно: display: flex превращает элемент в flex-контейнер.",
      "flex-direction задаёт направление, но не делает контейнер flex.",
      "justify-content используется внутри flex-контейнера для выравнивания.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_2",
    title: "Что является flex-элементом?",
    options: [
      "Сам flex-контейнер",
      "Любой дочерний элемент flex-контейнера",
      "Любой элемент на странице",
      "Элемент с position: absolute",
    ],
    correctAnswers: [1],
    descriptions: [
      "Flex-контейнер сам не является flex-элементом.",
      "Правильно: flex-элементом считается любой прямой потомок flex-контейнера.",
      "Не любой элемент: только внутри flex-контейнера.",
      "position: absolute не делает элемент flex-элементом, если он не внутри flex-контейнера.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_3",
    title: "Какое свойство управляет главной осью flex-контейнера?",
    options: ["align-items", "flex-direction", "justify-content", "flex-wrap"],
    correctAnswers: [1],
    descriptions: [
      "align-items управляет поперечной осью.",
      "Правильно: flex-direction задаёт направление главной оси (row, column и т.д.).",
      "justify-content выравнивает вдоль главной оси, но не задаёт направление.",
      "flex-wrap управляет переносом, а не осью.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_4",
    title: "Что означает значение flex-direction: column?",
    options: [
      "Элементы располагаются по горизонтали слева направо",
      "Элементы располагаются по вертикали сверху вниз",
      "Элементы переносятся автоматически",
      "Элементы выровнены по центру",
    ],
    correctAnswers: [1],
    descriptions: [
      "row или row-reverse отвечают за горизонтальное направление.",
      "Правильно: column располагает flex-элементы вертикально сверху вниз.",
      "flex-wrap управляет переносом элементов.",
      "align-items или justify-content отвечают за выравнивание.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_5",
    title: "Как выровнять flex-элементы по центру вдоль главной оси?",
    options: [
      "align-items: center;",
      "justify-content: center;",
      "align-self: center;",
      "flex-wrap: wrap;",
    ],
    correctAnswers: [1],
    descriptions: [
      "align-items управляет поперечной осью, а не главной.",
      "Правильно: justify-content:center выравнивает вдоль главной оси.",
      "align-self действует на отдельный элемент по поперечной оси.",
      "flex-wrap управляет переносом, а не выравниванием.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_6",
    title: "Как выровнять flex-элементы по центру вдоль поперечной оси?",
    options: [
      "justify-content: center;",
      "align-items: center;",
      "align-content: center;",
      "justify-items: center;",
    ],
    correctAnswers: [1],
    descriptions: [
      "justify-content выравнивает вдоль главной оси.",
      "Правильно: align-items:center выравнивает вдоль поперечной оси.",
      "align-content распределяет строки flex-контейнера при переносе.",
      "justify-items не применяется к flex-контейнеру.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_7",
    title: "Что делает свойство flex-wrap: wrap?",
    options: [
      "Запрещает перенос элементов",
      "Разрешает перенос элементов на новую строку/столбец",
      "Выравнивает по центру",
      "Задаёт направление",
    ],
    correctAnswers: [1],
    descriptions: [
      "nowrap запрещает перенос, а не wrap.",
      "Правильно: wrap позволяет flex-элементам переходить на следующую строку или столбец.",
      "align-items или justify-content отвечают за выравнивание.",
      "flex-direction задаёт направление, а не перенос.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_8",
    title:
      "Как предотвратить перенос flex-элементов, удерживая их в одной строке?",
    options: [
      "flex-wrap: wrap;",
      "flex-wrap: nowrap;",
      "flex-direction: column;",
      "justify-content: space-between;",
    ],
    correctAnswers: [1],
    descriptions: [
      "wrap разрешает перенос, а не предотвращает.",
      "Правильно: nowrap сохраняет все flex-элементы в одной строке или столбце.",
      "column меняет направление, но не управляет переносом.",
      "justify-content управляет выравниванием, а не переносом.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_9",
    title:
      "Какое значение flex-direction располагает элементы справа налево в одной строке?",
    options: ["row", "row-reverse", "column", "column-reverse"],
    correctAnswers: [1],
    descriptions: [
      "row располагает слева направо.",
      "Правильно: row-reverse располагает вправо налево.",
      "column располагает сверху вниз.",
      "column-reverse располагает снизу вверх.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_10",
    title: "Что происходит при flex-direction: column-reverse?",
    options: [
      "Элементы располагаются сверху вниз",
      "Элементы располагаются снизу вверх",
      "Элементы располагаются слева направо",
      "Элементы располагаются справа налево",
    ],
    correctAnswers: [1],
    descriptions: [
      "column — сверху вниз, a не снизу вверх.",
      "Правильно: column-reverse располагает элементы снизу вверх.",
      "row — слева направо, а не вертикально.",
      "row-reverse — справа налево, но по горизонтали.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_11",
    title: "Какое свойство отвечает за порядок отображения flex-элементов?",
    options: ["order", "z-index", "flex-grow", "flex-shrink"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: order задаёт порядок расположения flex-элементов.",
      "z-index управляет наложением, а не порядком в flex.",
      "flex-grow изменяет размер, а не порядок.",
      "flex-shrink влияет на сжатие, а не на порядок.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_12",
    title: "Какое значение order имеет по умолчанию у flex-элемента?",
    options: ["0", "1", "-1", "auto"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: по умолчанию order:0.",
      "1 — не значение по умолчанию.",
      "-1 — не значение по умолчанию.",
      "auto не является допустимым значением для order.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_13",
    title: "Что означает flex-grow: 1 у flex-элемента?",
    options: [
      "Элемент не может увеличиваться",
      "Элемент растягивается, занимая свободное пространство",
      "Элемент сжимается, когда места мало",
      "Элемент исчезает",
    ],
    correctAnswers: [1],
    descriptions: [
      "0 или auto означает отсутствие роста, а не 1.",
      "Правильно: flex-grow:1 позволяет элементу занять доступное свободное пространство.",
      "flex-shrink управляет сжатием при нехватке места.",
      "Нет: элемент не исчезает.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_14",
    title: "Что означает flex-shrink: 0 у flex-элемента?",
    options: [
      "Элемент не может сжиматься",
      "Элемент может сжиматься бесконечно",
      "Элемент растягивается пропорционально",
      "Элемент фиксирован",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-shrink:0 запрещает сжатие элемента при нехватке места.",
      "Значение 0 означает отсутствие сжатия, а не бесконечное сжатие.",
      "flex-grow отвечает за растяжение, а не flex-shrink.",
      "fixed может означать position:fixed, а не flex-свойство.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_15",
    title:
      "Какое свойство задаёт начальный размер flex-элемента перед распределением свободного пространства?",
    options: ["flex-basis", "flex-grow", "width", "min-width"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-basis определяет начальный размер до применения flex-grow/flex-shrink.",
      "flex-grow управляет ростом, а не базовым размером.",
      "width задаёт ширину, но flex-basis эффективнее в flex-контексте.",
      "min-width задаёт минимальную ширину, а не базовый размер для flex.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_16",
    title:
      "Как отключить гибкое поведение элемента, используя shorthand-свойство flex?",
    options: [
      "flex: 0 0 auto;",
      "flex: 1 1 auto;",
      "flex: 0 auto;",
      "flex: auto;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:0 0 auto отключает рост и сжатие (flex-grow:0, flex-shrink:0).",
      "1 1 auto разрешает и рост, и сжатие.",
      "shorthand flex требует три значения (grow, shrink, basis).",
      "flex:auto эквивалентно flex:1 1 auto, а не отключает гибкость.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_17",
    title: "Какое значение flex shorthand соответствует flex:1 0 0?",
    options: ["flex: 1;", "flex: auto;", "flex: initial;", "flex: none;"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:1 эквивалентно flex:1 1 0, но flex:1 0 0 уточняет отсутствие сжатия.",
      "flex:auto эквивалентно 1 1 auto, а не 1 0 0.",
      "flex:initial эквивалентно 0 1 auto.",
      "flex:none эквивалентно 0 0 auto.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_18",
    title: "Что делает align-self: flex-end у flex-элемента?",
    options: [
      "Выравнивает элемент по концу поперечной оси собственного flex-контейнера",
      "Выравнивает элемент по концу главной оси",
      "Растягивает элемент на всю ширину",
      "Скрывает элемент",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-self:flex-end выравнивает один элемент по концу поперечной оси (вниз или вправо при column).",
      "justify-self отвечает за главную ось в grid, но не в flex.",
      "flex-grow управляет растяжением, а не align-self.",
      "align-self не скрывает элемент.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_19",
    title:
      "Как заставить flex-элемент занять все доступное пространство, если другие конкурируют?",
    options: [
      "flex: 1 1 auto;",
      "flex: 0 0 auto;",
      "flex: none;",
      "flex: 0 1 auto;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:1 1 auto позволяет элементу расти и сжиматься, занимая доступное пространство.",
      "0 0 auto запрещает гибкость, элемент не растянется.",
      "none эквивалентно 0 0 auto, без гибкости.",
      "0 1 auto запрещает рост, но позволяет сжатие.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_20",
    title: "Как разделить пространство между flex-элементами поровну?",
    options: [
      "justify-content: space-between;",
      "justify-content: space-around;",
      "justify-content: space-evenly;",
      "justify-content: center;",
    ],
    correctAnswers: [2],
    descriptions: [
      "space-between распределяет промежутки только между элементами, без полей.",
      "space-around создаёт одинаковые отступы вокруг элементов, но крайние имеют половину.",
      "Правильно: space-evenly распределяет одинаковое пространство до, между и после элементов.",
      "center выравнивает к центру, но не распределяет пространство между элементами.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_21",
    title: "Что делает justify-content: space-between у flex-контейнера?",
    options: [
      "Равномерно распределяет элементы с одинаковыми отступами вокруг",
      "Размещает первый элемент в начале, последний в конце, остальные равномерно между",
      "Центрирует все элементы по горизонтали",
      "Оборачивает элементы при нехватке места",
    ],
    correctAnswers: [1],
    descriptions: [
      "space-around распределяет с одинаковыми отступами вокруг элементов.",
      "Правильно: space-between ставит первый в начало и последний в конец, а промежутки равны между элементами.",
      "center просто центрирует группу элементов, не распределяя пространство.",
      "wrap управляет переносом, а не justify-content.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_22",
    title:
      "Какое свойство позволяет управлять выравниванием строк flex-контейнера, если элементов больше, чем помещается?",
    options: ["flex-wrap", "align-items", "align-content", "justify-content"],
    correctAnswers: [2],
    descriptions: [
      "flex-wrap управляет переносом, но не распределением строк после переноса.",
      "align-items управляет выравниванием внутри строки, а не между строчками.",
      "Правильно: align-content распределяет строки flex-контейнера при переносе.",
      "justify-content управляет выравниванием вдоль главной оси в каждой строке.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_23",
    title: "Что делает align-content: center при flex-wrap: wrap?",
    options: [
      "Выравнивает контент по центру поперек контейнера при наличии нескольких строк",
      "Центрирует элементы в одной строке",
      "Запрещает перенос элементов",
      "Выравнивает содержимое по концу",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-content:center центрирует все строки внутри контейнера по поперечной оси.",
      "align-items отвечает за выравнивание внутри одной строки.",
      "flex-wrap задаёт перенос, а не align-content.",
      "flex-end выравнивает по концу, а не center.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_24",
    title:
      "Как заставить flex-элемент игнорировать значения flex-grow и flex-shrink, занимая место согласно содержимому?",
    options: [
      "flex: 0 0 auto;",
      "flex: 1 1 0;",
      "flex: auto;",
      "flex: initial;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:0 0 auto отключает гибкость, элемент размеряется по содержимому.",
      "1 1 0 разрешает и рост, и сжатие с базисом 0.",
      "auto эквивалентно 1 1 auto, элемент гибкий.",
      "initial эквивалентно 0 1 auto, элемент сжимается, но не растёт.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_25",
    title:
      "Какое значение align-items заставляет элементы растягиваться по высоте flex-контейнера?",
    options: ["flex-start", "center", "stretch", "baseline"],
    correctAnswers: [2],
    descriptions: [
      "flex-start выравнивает к началу поперечной оси.",
      "center выравнивает к центру, но не растягивает.",
      "Правильно: stretch растягивает flex-элементы, чтобы они заполнили высоту контейнера.",
      "baseline выравнивает по базовой линии текста.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_26",
    title: "Что делает align-items: baseline?",
    options: [
      "Выравнивает элементы по верхнему краю контейнера",
      "Выравнивает элементы по нижнему краю контейнера",
      "Выравнивает элементы по базовой линии их текста",
      "Растягивает элементы по высоте контейнера",
    ],
    correctAnswers: [2],
    descriptions: [
      "flex-start выравнивает по верхнему краю.",
      "flex-end выравнивает по нижнему краю.",
      "Правильно: baseline выравнивает flex-элементы по базовой линии текста внутри них.",
      "stretch растягивает по высоте, а не выравнивает по базовой линии.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_27",
    title:
      "Какое свойство позволяет flex-элементу изменять лишь своё отношение к свободному пространству?",
    options: ["order", "flex-grow", "align-self", "flex-basis"],
    correctAnswers: [1],
    descriptions: [
      "order управляет порядком, а не свободным пространством.",
      "Правильно: flex-grow определяет, насколько элемент может расти в доступном пространстве.",
      "align-self управляет выравниванием по поперечной оси.",
      "flex-basis задаёт начальный размер, а не отношение к свободному пространству.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_28",
    title:
      "Как задать фиксированный размер flex-элемента перед применением flex-grow и flex-shrink?",
    options: ["width", "flex-basis", "flex: auto", "flex: initial"],
    correctAnswers: [1],
    descriptions: [
      "width задаёт размер, но flex-basis предпочтителен для flex-элементов.",
      "Правильно: flex-basis определяет базовый размер элемента до распределения свободного пространства.",
      "flex:auto эквивалентно 1 1 auto и не фиксирует размер.",
      "flex:initial эквивалентно 0 1 auto, не задаёт фиксированного базиса.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_29",
    title: "Что произойдёт, если установить flex: 1 0 50px для flex-элемента?",
    options: [
      "Элемент займет минимум 50px и будет расти при наличии свободного пространства",
      "Элемент будет фиксированным в 50px",
      "Элемент не сможет сжиматься, но не будет расти",
      "Элемент всегда займет 1px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:1 0 50px задаёт базовый размер 50px, не позволяет сжатие, но позволяет рост.",
      "Гибкость разрешена через flex-grow:1, а не фиксируется при 50px.",
      "flex-shrink:0 запрещает сжатие, но flex-grow:1 позволяет рост.",
      "Нет: flex:1 означает, что элемент может расти, а не стать 1px.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_30",
    title:
      "Какое свойство flex shorthand задаёт одновременно flex-grow, flex-shrink и flex-basis?",
    options: ["flex", "flex-alignment", "flex-settings", "flex-basis-all"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: shorthand flex задаёт flex-grow, flex-shrink и flex-basis одновременно.",
      "flex-alignment не является существующим свойством.",
      "flex-settings не является свойством CSS.",
      "flex-basis-all не существует.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_31",
    title: "Что называется главной осью (main axis) в flex-контейнере?",
    options: [
      "Ось, вдоль которой располагаются flex-элементы",
      "Ось, перпендикулярная flex-элементам",
      "Ось для позиционирования в grid",
      "Альтернативная ось для transform",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: главная ось — это направление, вдоль которого располагаются flex-элементы.",
      "Перпендикулярная ось — это поперечная ось (cross axis), а не главная.",
      "Grid имеет свои оси, не связанные с flex.",
      "Transform не использует термин «ось» в контексте flexbox.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_32",
    title: "Каким свойством задаётся направление главной оси?",
    options: ["flex-direction", "align-items", "justify-content", "flex-wrap"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-direction определяет направление главной оси (row, column и т.д.).",
      "align-items выравнивает по поперечной оси.",
      "justify-content выравнивает элементы вдоль главной оси, но не задаёт её направление.",
      "flex-wrap управляет переносом, а не направлением оси.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_33",
    title: "Что означает значение flex-direction: row?",
    options: [
      "Главная ось — горизонтальная слева направо",
      "Главная ось — вертикальная сверху вниз",
      "Поперечная ось — горизонтальная",
      "Поперечная ось — вертикальная",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: row задаёт главную ось горизонтально, элементы слева направо.",
      "column задаёт вертикальную ось сверху вниз.",
      "Поперечная ось при row — вертикальная, а не горизонтальная.",
      "Вертикальная ось при row — поперечная, но вопрос о главной оси.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_34",
    title: "Что означает значение flex-direction: column?",
    options: [
      "Главная ось — вертикальная сверху вниз",
      "Главная ось — горизонтальная снизу вверх",
      "Поперечная ось — вертикальная",
      "Поперечная ось — горизонтальная",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: column задаёт главную ось вертикально сверху вниз.",
      "row-reverse задаёт горизонтально справа налево, а не column.",
      "При column поперечная ось — горизонтальная, а не вертикальная.",
      "Горизонтальная ось при column — поперечная, но вопрос о главной оси.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_35",
    title: "Что делает flex-direction: row-reverse?",
    options: [
      "Располагает элементы справа налево по горизонтали",
      "Располагает элементы слева направо по горизонтали",
      "Располагает элементы снизу вверх по вертикали",
      "Располагает элементы сверху вниз по вертикали",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: row-reverse располагает элементы по горизонтали, начиная с правого края.",
      "row располагает слева направо.",
      "column-reverse располагает вертикально снизу вверх, а не row-reverse.",
      "column располагает вертикально сверху вниз.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_36",
    title: "Что делает flex-direction: column-reverse?",
    options: [
      "Располагает элементы снизу вверх по вертикали",
      "Располагает элементы сверху вниз по вертикали",
      "Располагает элементы справа налево",
      "Располагает элементы слева направо",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: column-reverse меняет направление главной оси на вертикальное справа налево, выводя элементы снизу вверх.",
      "column располагает сверху вниз.",
      "row-reverse располагает справа налево, а не column-reverse.",
      "row располагает слева направо.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_37",
    title: "Что называется поперечной осью (cross axis) в flex-контейнере?",
    options: [
      "Ось, перпендикулярная главной оси",
      "Ось, вдоль которой располагаются элементы",
      "Ось для transform: rotate",
      "Ось для позиционирования grid",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: поперечная ось — это направление, перпендикулярное главной оси flex-контейнера.",
      "Главная ось — это направление расположения элементов.",
      "Transform:rotate использует произвольную ось, но не терминологию flex.",
      "Grid имеет собственные термины для осей.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_38",
    title:
      "При flex-direction: row, как располагаются элементы по поперечной оси?",
    options: [
      "Вертикально сверху вниз",
      "Горизонтально справа налево",
      "Вертикально снизу вверх",
      "Горизонтально слева направо",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при row главная ось — горизонтальная, а поперечная — вертикальная сверху вниз.",
      "row-reverse задаёт горизонтальное справа налево для главной оси, а не поперечную.",
      "column-reverse задаёт вертикальное снизу вверх для главной оси.",
      "row задаёт горизонтальное слева направо для главной оси, а не поперечную.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_39",
    title:
      "При flex-direction: column, как располагаются элементы по поперечной оси?",
    options: [
      "Горизонтально слева направо",
      "Вертикально сверху вниз",
      "Горизонтально справа налево",
      "Вертикально снизу вверх",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при column главная ось — вертикальная, а поперечная — горизонтальная слева направо.",
      "column задаёт вертикальное сверху вниз для главной оси, а не поперечную.",
      "row-reverse задаёт горизонтальное справа налево для главной оси, а не поперечную.",
      "column-reverse задаёт вертикальное снизу вверх для главной оси.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_40",
    title: "Что означает justify-content в контексте осей flex?",
    options: [
      "Выравнивание вдоль главной оси",
      "Выравнивание вдоль поперечной оси",
      "Порядок элементов",
      "Направление осей",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: justify-content выравнивает flex-элементы вдоль главной оси контейнера.",
      "align-items управляет выравниванием вдоль поперечной оси.",
      "order управляет порядком элементов, а не justify-content.",
      "flex-direction задаёт направление осей, а не justify-content.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_41",
    title: "Что означает align-items в контексте осей flex?",
    options: [
      "Выравнивание вдоль поперечной оси",
      "Выравнивание вдоль главной оси",
      "Изменение направления осей",
      "Порядок элементов",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-items устанавливает, как flex-элементы выравниваются вдоль поперечной оси.",
      "justify-content управляет выравниванием вдоль главной оси.",
      "flex-direction задаёт направление осей, а не align-items.",
      "order управляет порядком элементов.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_42",
    title: "Что делает align-content?",
    options: [
      "Выравнивает строки flex-контейнера вдоль поперечной оси, когда есть перенос",
      "Выравнивает элементы в одной строке вдоль главной оси",
      "Устанавливает направление главной оси",
      "Определяет порядок flex-элементов",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-content управляет распределением пространства между строками flex-элементов при flex-wrap.",
      "justify-content выравнивает элементы в одной строке вдоль главной оси.",
      "flex-direction задаёт направление осей.",
      "order управляет порядком элементов.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_43",
    title: "Как flex-wrap влияет на расположение осей?",
    options: [
      "Позволяет строкам flex-элементов формироваться при нехватке места",
      "Меняет направление главной оси",
      "Выравнивает элементы вдоль поперечной оси",
      "Устанавливает порядок элементов",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-wrap управляет тем, будут ли элементы переноситься в новые строки при переполнении по главной оси.",
      "flex-direction задаёт направление оси, а не flex-wrap.",
      "align-items отвечает за выравнивание вдоль поперечной оси.",
      "order отвечает за порядок, а не перенос.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_44",
    title: "Что будет, если flex-wrap: nowrap?",
    options: [
      "Flex-элементы останутся в одной строке, не переносятся",
      "Flex-элементы будут переноситься на новые строки",
      "Меняется направление главной оси",
      "Элементы выравниваются по центру",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: nowrap запрещает перенос, элементы остаются в одной строке вне зависимости от ширины.",
      "wrap разрешает перенос, а не nowrap.",
      "flex-direction отвечает за направление оси.",
      "justify-content управляет выравниванием, а не flex-wrap.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_45",
    title: "Какой эффект даёт align-content: stretch при flex-wrap: wrap?",
    options: [
      "Растягивает строки, чтобы заполнить поперечную ось",
      "Центрирует строки по поперечной оси",
      "Переносит элементы на новые строки",
      "Меняет направление оси",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: stretch растягивает строки flex-элементов, чтобы заполнить доступное пространство вдоль поперечной оси.",
      "align-content:center центрирует строки, а не растягивает.",
      "flex-wrap управляет переносом, а не align-content.",
      "flex-direction отвечает за направление оси.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_46",
    title:
      "Как влияет order на расположение элементов при разных направлениях осей?",
    options: [
      "Переупорядочивает элементы независимо от направления оси",
      "Меняет направление оси",
      "Ставит элементы на poperechnuyu os'",
      "Не влияет",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: order задаёт позицию элемента в последовательности вдоль главной оси, независимо от её направления.",
      "order не меняет направление оси; flex-direction это делает.",
      "Поперечная ось управляется align-items, а order действует вдоль главной оси.",
      "order влияет на порядок, а не не влияет.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_47",
    title: "Как flex-basis взаимодействует с flex-direction?",
    options: [
      "flex-basis задаёт базовый размер вдоль главной оси",
      "flex-basis задаёт размер вдоль поперечной оси",
      "flex-basis управляет порядком элементов",
      "flex-basis изменяет направление оси",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-basis задаёт начальный размер элемента вдоль главной оси, определяемой flex-direction.",
      "Размер вдоль поперечной оси регулирует align-items или height/width, а не flex-basis.",
      "order управляет порядком, а не flex-basis.",
      "flex-direction задаёт направление, flex-basis задаёт размер.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_48",
    title:
      "Что происходит при сочетании flex-direction: row и align-items: flex-end?",
    options: [
      "Элементы выравниваются по нижнему краю по вертикали",
      "Элементы выравниваются справа по горизонтали",
      "Элементы выравниваются слева по горизонтали",
      "Элементы исчезают",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: main axis — горизонтальный, cross axis — вертикальный; align-items:flex-end выравнивает к низу.",
      "justify-content отвечает за выравнивание по горизонтали.",
      "justify-content:flex-start располагает слева, а не align-items.",
      "Элементы не исчезают при таком сочетании свойств.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_49",
    title:
      "Что произойдёт, если flex-direction: column и justify-content: flex-end?",
    options: [
      "Элементы выравниваются внизу контейнера по вертикали",
      "Элементы выравниваются слева по горизонтали",
      "Элементы выравниваются справа по горизонтали",
      "Элементы выравниваются сверху",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при column главная ось — вертикальная; justify-content:flex-end выравнивает элементы внизу.",
      "align-items управляет горизонтальным выравниванием при column.",
      "align-items:flex-end выравнивает вправо при column.",
      "justify-content:flex-start выравнивает сверху, а не flex-end.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_50",
    title:
      "Что делает сочетание flex-direction: row-reverse и justify-content: flex-start?",
    options: [
      "Элементы располагаются справа налево и приклеиваются к правому краю",
      "Элементы располагаются слева направо и приклеиваются к левому краю",
      "Элементы располагаются снизу вверх и выравниваются снизу",
      "Элементы располагаются сверху вниз и выравниваются сверху",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: row-reverse меняет направление на справа налево, а justify-content:flex-start приклеивает первый элемент (правый) к правому краю.",
      "row располагает слева направо, а не row-reverse.",
      "column-reverse и justify-content:flex-start дают снизу вверх, но не row-reverse.",
      "column и justify-content:flex-start дают сверху вниз, а не row-reverse.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_51",
    title:
      "Что происходит при flex-direction: column-reverse и align-items: center?",
    options: [
      "Элементы располагаются снизу вверх и центрируются по горизонтали",
      "Элементы располагаются сверху вниз и центрируются по горизонтали",
      "Элементы располагаются слева направо и центрируются по вертикали",
      "Элементы располагаются справа налево и центрируются по вертикали",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: column-reverse располагает вертикально снизу вверх, а align-items:center центрирует по горизонтали (poperechnaia os').",
      "column располагает сверху вниз, а не column-reverse.",
      "row и align-items влияют на другой контекст осей.",
      "row-reverse и align-items:center влияют по другим осям.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_52",
    title:
      "Какой эффект у сочетания flex-direction: row и align-content: flex-end при flex-wrap: wrap?",
    options: [
      "Строки flex-элементов располагаются внизу контейнера",
      "Строки располагаются сверху",
      "Элементы не переносятся",
      "Выравнивание по левому краю",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-wrap:wrap разрешает перенос, при этом align-content:flex-end выравнивает все строки ближе к нижней границе.",
      "align-content:flex-start выравнивал бы сверху.",
      "nowrap запрещает перенос, а wrap позволяет.",
      "align-items управляет горизонтальным выравниванием внутри строки, а не align-content.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_53",
    title: "Что делает justify-items в flex-контейнере?",
    options: [
      "Ничего — свойство не применяется к flex",
      "Выравнивает элементы вдоль главной оси",
      "Выравнивает элементы вдоль поперечной оси",
      "Управляет порядком элементов",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: justify-items не поддерживается в flex-контексте, используется в grid.",
      "justify-content выравнивает вдоль главной оси.",
      "align-items выравнивает вдоль поперечной оси.",
      "order управляет порядком элементов.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_54",
    title: "Что делает align-self?",
    options: [
      "Переопределяет выравнивание конкретного flex-элемента по поперечной оси",
      "Переопределяет выравнивание по главной оси",
      "Задаёт порядок элемента",
      "Определяет базовый размер",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-self позволяет одному элементу отличаться по выравниванию вдоль поперечной оси от остальных.",
      "justify-self не применяется в flex-контексте.",
      "order определяет порядок, а не align-self.",
      "flex-basis задаёт базовый размер, а не align-self.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_55",
    title: "Как flex-basis взаимодействует с width и height?",
    options: [
      "flex-basis имеет приоритет перед width/height вдоль главной оси",
      "width/height имеют приоритет перед flex-basis",
      "flex-basis всегда равен width",
      "height всегда равен flex-basis",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: если задан flex-basis, он задаёт базовый размер вдоль главной оси, даже если указаны width/height.",
      "width/height игнорируются, когда flex-basis задан на главную ось.",
      "flex-basis может использовать auto, а не width.",
      "height не обязательно равен flex-basis; они разные свойства.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_56",
    title:
      "Как flex-grow влияет на высоту элемента при flex-direction: column?",
    options: [
      "flex-grow растягивает элемент по вертикали",
      "flex-grow растягивает элемент по горизонтали",
      "flex-grow запрещён при column",
      "flex-grow изменяет порядок",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при column главная ось — вертикальная, поэтому flex-grow растягивает по высоте.",
      "flex-grow воздействует вдоль главной оси, а она вертикальная при column.",
      "flex-grow применим при любом направлении, включая column.",
      "order управляет порядком, а не flex-grow.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_57",
    title: "Как flex-shrink себя ведёт при flex-direction: row?",
    options: [
      "Элементы могут сжиматься по горизонтали",
      "Элементы сжимаются по вертикали",
      "flex-shrink игнорируется при row",
      "flex-shrink влияет на порядок",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при row главная ось — горизонтальная, поэтому flex-shrink сжимает элементы по горизонтали при нехватке места.",
      "По вертикали сжиматься будут при column.",
      "flex-shrink действует при любом flex-direction.",
      "order отвечает за порядок, а не flex-shrink.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_58",
    title: "Что происходит, если flex-wrap: wrap-reverse?",
    options: [
      "Строки переносятся и располагаются сверху вниз",
      "Строки переносятся и располагаются снизу вверх",
      "Никакой перенос не происходит",
      "Элементы располагаются по центру",
    ],
    correctAnswers: [1],
    descriptions: [
      "wrap распознаёт перенос сверху вниз при flex-wrap:wrap.",
      "Правильно: wrap-reverse переносит строки, но меняет направление поперечной оси, располагая новые строки сверху.",
      "nowrap запрещает перенос, а wrap-reverse разрешает.",
      "justify-content управляет выравниванием по главной оси, а не wrap-reverse.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_59",
    title:
      "Как flexbox определяет стартовую точку при reverse направлениях оси?",
    options: [
      "Начало берётся от противоположного края контейнера",
      "Начало всегда слева",
      "Начало всегда сверху",
      "Начало определяется свойством order",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при row-reverse или column-reverse начало главной оси находится у противоположного края.",
      "Начало не всегда слева; зависит от flex-direction.",
      "Начало не всегда сверху; зависит от flex-direction.",
      "order не влияет на начальную точку; изменяет лишь порядок.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_60",
    title: "Как flexbox учитывает направление текста (LTR/RTL) при оси row?",
    options: [
      "flex-direction: row не зависит от LTR/RTL, всегда слева направо",
      "row автоматически меняет направление при RTL",
      "flexbox игнорирует направление текста",
      "row-reverse меняется на row при RTL",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-direction:row всегда располагает слева направо, независимо от LTR/RTL.",
      "row не изменяется при RTL; влияет только row-reverse.",
      "flexbox учитывает направление текста лишь для генерации порядка inline-элементов, но оси flex остаются одинаковыми.",
      "row-reverse остаётся row-reverse, а не меняется автоматически при RTL.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_61",
    title: "Что делает свойство flex-wrap: wrap при нехватке пространства?",
    options: [
      "Запрещает перенос элементов",
      "Переносит элементы на новую строку или столбец",
      "Сжимает элементы",
      "Изменяет направление оси",
    ],
    correctAnswers: [1],
    descriptions: [
      "nowrap запрещает перенос, а не wrap.",
      "Правильно: wrap позволяет flex-элементам переходить на новую строку или столбец при нехватке места.",
      "flex-shrink отвечает за сжатие элементов при нехватке места.",
      "flex-direction управляет направлением оси, а не flex-wrap.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_62",
    title: "Что означает flex-wrap: wrap-reverse?",
    options: [
      "Элементы не переносятся",
      "Переносятся и новая строка располагается сверху",
      "Переносятся и новая строка располагается снизу",
      "Переносятся и новая строка располагается справа",
    ],
    correctAnswers: [1],
    descriptions: [
      "nowrap запрещает перенос, а не wrap-reverse.",
      "Правильно: wrap-reverse переносит строки, но меняет порядок, располагая новые строки сверху.",
      "wrap располагает новые строки снизу, а не wrap-reverse.",
      "wrap-reverse влияет на вертикальное расположение строк, а не на горизонтальное.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_63",
    title: "Какое значение flex-wrap запрещает перенос элементов?",
    options: ["wrap", "wrap-reverse", "nowrap", "none"],
    correctAnswers: [2],
    descriptions: [
      "wrap разрешает перенос.",
      "wrap-reverse разрешает перенос вверх.",
      "Правильно: nowrap сохраняет все элементы в одной строке или столбце.",
      "none не является допустимым значением flex-wrap.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_64",
    title: "Что такое свойство order у flex-элемента?",
    options: [
      "Растягивает элемент",
      "Задает порядок расположения элемента",
      "Устанавливает перенос строки",
      "Определяет направление оси",
    ],
    correctAnswers: [1],
    descriptions: [
      "flex-grow отвечает за растягивание, а не order.",
      "Правильно: order задаёт позицию элемента в последовательности вдоль главной оси.",
      "flex-wrap управляет переносом, а не order.",
      "flex-direction задаёт направление осей, а не order.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_65",
    title: "Какое значение order имеет элемент по умолчанию?",
    options: ["-1", "0", "1", "auto"],
    correctAnswers: [1],
    descriptions: [
      "-1 опустит элемент назад, но не является значением по умолчанию.",
      "Правильно: по умолчанию order:0.",
      "1 переместит элемент вперёд, но не является значением по умолчанию.",
      "auto не является корректным значением для order.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_66",
    title: "Что произойдет, если задать flex-wrap: wrap и order для элементов?",
    options: [
      "Перенос и порядок работают независимо",
      "order игнорируется при wrap",
      "wrap игнорируется при order",
      "Элементы не будут отображаться",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: перенос (wrap) и порядок (order) работают совместно, не отменяя друг друга.",
      "order применяется вне зависимости от wrap.",
      "wrap не зависит от order, элементы будут переноситься.",
      "Элементы отобразятся, просто могут измениться их порядок и строки.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_67",
    title: "Как flex-flow объединяет свойства flex-direction и flex-wrap?",
    options: [
      "flex-flow: <direction> <wrap>;",
      "flex-flow: <wrap> <direction>;",
      "flex-flow: <order> <wrap>;",
      "flex-flow: <direction> <order>;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-flow shorthand принимает сначала направление, затем значение wrap.",
      "Порядок должен быть direction, затем wrap, а не наоборот.",
      "order не входит в flex-flow shorthand.",
      "order не входит в flex-flow shorthand.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_68",
    title: "Какое значение flex-flow: row wrap; означает?",
    options: [
      "flex-direction:column и flex-wrap:nowrap",
      "flex-direction:row и flex-wrap:wrap",
      "flex-direction:wrap и flex-wrap:row",
      "flex-direction:row и flex-wrap:nowrap",
    ],
    correctAnswers: [1],
    descriptions: [
      "column задаёт вертикальную ось, а не row.",
      "Правильно: row wrap задаёт горизонтальную ось и разрешает перенос.",
      "wrap не является значением flex-direction.",
      "wrap не указан; nowrap применяется по умолчанию.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_69",
    title: "Как задать flex-flow для вертикального направления с переносом?",
    options: [
      "flex-flow: column nowrap;",
      "flex-flow: column wrap;",
      "flex-flow: row wrap;",
      "flex-flow: wrap column;",
    ],
    correctAnswers: [1],
    descriptions: [
      "nowrap запрещает перенос, а не wrap.",
      "Правильно: column wrap задаёт вертикальную ось и позволяет перенос.",
      "row wrap задаёт горизонтальную ось, а не вертикальную.",
      "wrap column неверный порядок параметров.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_70",
    title: "Какое значение flex: 2 1 100px; означает для flex-элемента?",
    options: [
      "flex-grow:2, flex-shrink:1, flex-basis:100px",
      "flex-basis:2, flex-grow:1, flex-shrink:100px",
      "flex-shrink:2, flex-grow:1, flex-basis:100px",
      "flex-grow:1, flex-shrink:2, flex-basis:100px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: в shorthand flex первым идёт grow, затем shrink, затем basis.",
      "Неправильный порядок параметров.",
      "Пожалуйста, обратите внимание на порядок: grow, shrink, basis.",
      "Неправильное распределение значений.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_71",
    title: "Что делает значением order: -1 у flex-элемента?",
    options: [
      "Переносит элемент на задний план",
      "Выставляет элемент перед другими по порядку",
      "Сжимает элемент",
      "Растягивает элемент",
    ],
    correctAnswers: [1],
    descriptions: [
      "z-index управляет наложением, а не order.",
      "Правильно: отрицательное значение order перемещает элемент вперед по порядку.",
      "flex-shrink управляет сжатием, а не order.",
      "flex-grow управляет растягиванием, а не order.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_72",
    title:
      "Какое поведение flex-элемента с order: 999 имеет по сравнению с order: 0?",
    options: [
      "Элемент появится первым",
      "Элемент окажется последним",
      "Элемент исчезнет",
      "Элемент станет фиксированным",
    ],
    correctAnswers: [1],
    descriptions: [
      "order более высокое число ставит элемент позже, а не первым.",
      "Правильно: order:999 ставит элемент в конец последовательности.",
      "order не скрывает элемент.",
      "order не меняет позиционирование на fixed.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_73",
    title: "Как flex-wrap влияет на поведение flex-элементов при order?",
    options: [
      "Порядок может влиять на разбиение строк",
      "order игнорируется при wrap",
      "wrap игнорирует order",
      "Элементы не отображаются",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: порядок задаёт последовательность, и при wrap элементы переносятся в этой последовательности.",
      "order всегда применяется, независимо от wrap.",
      "wrap и order работают совместно, а не игнорируют друг друга.",
      "Элементы остаются видимыми, пока display не изменен.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_74",
    title: "Как flex-wrap: wrap-reverse влияет на порядок при order?",
    options: [
      "Первая строка располагается сверху, последняя снизу",
      "Первая строка располагается снизу, последняя сверху",
      "Порядок элементов меняется на обратный",
      "Элементы не переносятся",
    ],
    correctAnswers: [1],
    descriptions: [
      "wrap обычно располагает новые строки снизу.",
      "Правильно: wrap-reverse располагает новую строку сверху и учитывает порядок элементов.",
      "order не меняет порядок при wrap-reverse, меняется лишь направление переноса.",
      "wrap-reverse всегда переносит элементы, если места не хватает.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_75",
    title:
      "Как flex-wrap и flex-direction совместно влияют на расположение элементов?",
    options: [
      "flex-wrap определяет перенос, а flex-direction — направление оси",
      "flex-wrap задаёт направление оси, а flex-direction — перенос",
      "Они не взаимодействуют",
      "flex-wrap отменяет flex-direction",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-direction задаёт направление главной оси, а flex-wrap определяет, будет ли происходить перенос при нехватке места.",
      "flex-flow задаёт оба одновременно, но wrap и direction имеют свои задачи.",
      "flex-wrap и flex-direction взаимодействуют и определяют окончательное поведение layout.",
      "wrap не отменяет направление, а работает вместе с ним.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_76",
    title:
      "Что произойдет, если задать flex-wrap: wrap и flex-direction: column?",
    options: [
      "Элементы будут переноситься по горизонтали",
      "Элементы будут располагаться вертикально и переноситься горизонтально",
      "Элементы будут располагаться горизонтально и переноситься вертикально",
      "Перенос будет запрещён",
    ],
    correctAnswers: [1],
    descriptions: [
      "row заставляет горизонтальную ось, а не column.",
      "Правильно: column задаёт вертикальную ось для расположения, а wrap переносит в горизонтальном направлении при нехватке места.",
      "row wrap переносит вертикально при column, но первоначальное направление не соответствует question.",
      "nowrap запрещает перенос, а wrap разрешает.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_77",
    title:
      "Как flex-wrap влияет, если размер flex-элементов одинаков, но container меньше, чем сумма их ширин?",
    options: [
      "Элементы автоматически переносятся",
      "Элементы сжимаются до минимального размера",
      "Элементы перекрывают друг друга",
      "Ничего не происходит",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: wrap при нехватке места перемещает элементы на новую строку.",
      "flex-shrink отвечает за сжатие, но wrap первично переносит.",
      "Перекрытие может произойти при nowrap.",
      "wrap реагирует на нехватку места и переносит элементы.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_78",
    title:
      "Как flex-wrap: wrap взаимодействует с justify-content: space-between?",
    options: [
      "Промежутки распределяются внутри каждой строки",
      "Промежутки распределяются между строками",
      "justify-content игнорируется при wrap",
      "wrap игнорируется при justify-content",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: space-between распределяет свободное пространство между элементами внутри каждой строки при wrap.",
      "align-content распределяет пространство между строками, а не justify-content.",
      "justify-content всегда применяется, wrap не отменяет его.",
      "wrap и justify-content работают совместно, а не игнорируют друг друга.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_79",
    title: "Что делает align-content: space-around при flex-wrap: wrap?",
    options: [
      "Распределяет строки с одинаковым промежутком вокруг",
      "Распределяет элементы внутри строк",
      "Запрещает перенос",
      "Изменяет направление оси",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: space-around распределяет пространство вокруг каждой строки flex-элементов вдоль поперечной оси.",
      "justify-content управляет пространством внутри строки по главной оси.",
      "wrap управляет переносом, а не align-content.",
      "flex-direction управляет направлением, а не align-content.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_80",
    title:
      "Какое значение order заставит элемент отображаться вторым, если у остальных order: 0?",
    options: ["order: 1", "order: -1", "order: 0", "order: auto"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: order:1 переместит элемент после тех, у кого order:0.",
      "order:-1 переместит элемент вперед, а не назад.",
      "order:0 оставит элемент в том же порядке, что и остальные.",
      "auto не является допустимым значением для order.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_81",
    title:
      "Как flex-container распределяет элементы при wrap и order, если два элемента имеют одинаковый order?",
    options: [
      "Оставляет их в исходном DOM-порядке",
      "Сортирует по алфавиту",
      "Меняет порядок на противоположный",
      "Прячет один из элементов",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при одинаковом order flexbox сохраняет исходный порядок из DOM.",
      "flexbox не сортирует элементы по алфавиту.",
      "Порядок не меняется по умолчанию без разницы order.",
      "Ни один элемент не скрывается без свойства display.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_82",
    title: "Как flex-wrap влияет на поведение margin между строками?",
    options: [
      "Margin между строками сохраняется",
      "Margin между строками перекрывается",
      "Margin игнорируется при wrap",
      "Margin меняется на padding",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: margin между flex-строками работает как обычно и создаёт промежуток между ними.",
      "Margin может перекрываться, если colspan применяется, но обычно сохраняется.",
      "Margin всегда учитывается при переносе, а не игнорируется.",
      "Margin не превращается в padding.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_83",
    title: "Как flex-wrap влияет при отрицательных значениях order?",
    options: [
      "Элементы с отрицательным order появляются раньше и могут переноситься первыми",
      "Отрицательный order запрещает перенос",
      "Отрицательный order игнорируется при wrap",
      "Отрицательный order меняет направление оси",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: элементы с меньшим order (включая отрицательные) располагаются раньше и переносятся первыми, если wrap активен.",
      "order не влияет на разрешение переноса, а только на порядок.",
      "wrap не отменяет порядок, в том числе отрицательный.",
      "order не задаёт направление оси.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_84",
    title: "Что происходит, если несколько элементов имеют order: -1 при wrap?",
    options: [
      "Все элементы с order:-1 выстраиваются первыми, сохраняя DOM-порядок",
      "Только один элемент отображается",
      "Элементы с отрицательным order игнорируются",
      "Элементы располагаются последними",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: все элементы с order:-1 располагаются первыми в строке, в том порядке, как они в DOM.",
      "Все элементы остаются видимыми и располагаются вместе.",
      "Order всегда учитывается, даже при wrap.",
      "Элементы с большим order располагаются позже, а с меньшим — раньше.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_85",
    title:
      "Как flexbox ведёт себя при flex-wrap и align-content: center, если строк больше, чем может вместиться по высоте?",
    options: [
      "Строки сгруппированы по центру поперечной оси, но может появиться прокрутка",
      "Строки складываются друг на друга",
      "align-content игнорируется при нехватке места",
      "flex-wrap превращается в nowrap",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-content:center сгруппирует строки по центру, но при переполнении контента может появиться скролл или обрезка.",
      "Строки не перекрываются без специальных стилей overflow.",
      "align-content учитывается, но при ограниченной высоте контейнера поведение зависит от overflow.",
      "wrap остаётся активным, nowrap не применяется автоматически.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_86",
    title:
      "Какой эффект будет, если задать flex-wrap: wrap и align-content: stretch?",
    options: [
      "Строки растягиваются, чтобы заполнить доступное пространство по поперечной оси",
      "Строки центрируются",
      "Элементы располагаются без переноса",
      "Первая строка скрывается",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: stretch растягивает строки flex-элементов, чтобы они заполнили пространство по поперечной оси.",
      "center центрирует строки, а не stretch.",
      "nowrap запрещает перенос, а wrap разрешает.",
      "Никогда не скрывается без overflow:hidden.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_87",
    title:
      "Какой эффект даст сочетание flex-wrap: wrap и justify-content: center?",
    options: [
      "Строки будут центрированы по главной оси, а элементы внутри — тоже",
      "Строки и элементы будут выровнены по центру вдоль главной оси",
      "Строки будут перенесены в начало",
      "wrap отключится",
    ],
    correctAnswers: [1],
    descriptions: [
      "justify-content действует внутри каждой строки, а не управляет строками.",
      "Правильно: justify-content:center выровняет элементы по центру главной оси внутри каждой строки, а wrap обеспечит перенос.",
      "Начало контролируется justify-content:flex-start, а не center.",
      "wrap остаётся активным, без изменений.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_88",
    title: "Как flex-wrap и align-items взаимодействуют при wrap?",
    options: [
      "align-items выравнивает элементы внутри каждой строки по поперечной оси",
      "align-items выравнивает строки между собой",
      "wrap отменяет align-items",
      "align-items определяет порядок строк",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-items действует внутри каждой строки flex-элементов, управляя выравниванием по поперечной оси.",
      "align-content управляет выравниванием строк, а не align-items.",
      "wrap не отменяет align-items; оба работают совместно.",
      "order управляет порядком, а не align-items.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_89",
    title: "Как flex-wrap влияет на порядок отступов между строками?",
    options: [
      "Между строками применяется margin, если задан",
      "Отступы между строками не применяются",
      "flex-wrap удаляет margin",
      "Отступы заменяются на padding",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: margin между элементами первой строки и элементов второй строки сохраняется.",
      "Margin между строками сохраняется и создаёт пространство.",
      "wrap не удаляет margin; margin остаётся активным.",
      "margin не заменяется на padding автоматическим образом.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_90",
    title:
      "Что произойдёт с порядком элементов при изменении flex-direction на column, если ранее был row?",
    options: [
      "Порядок элементов вдоль новой оси сохраняется в соответствии с order",
      "Порядок автоматически меняется на тот же, что и при row",
      "Элементы исчезают",
      "Порядок сбрасывается к DOM-порядку",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: order применяется вдоль главной оси независимо от её направления; при column порядок сохраняется согласно order.",
      "Направление меняется, но порядок элементов по-прежнему контролируется свойством order.",
      "Элементы остаются видимыми, если display не изменён.",
      "order не сбрасывается при смене оси; он сохраняет заданный порядок.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_91",
    title: "Что делает свойство flex-grow у flex-элемента?",
    options: [
      "Задает базовую ширину элемента",
      "Определяет, насколько элемент может вырасти, занимая свободное пространство",
      "Устанавливает порядок элемента",
      "Запрещает перенос",
    ],
    correctAnswers: [1],
    descriptions: [
      "flex-basis задаёт базовый размер, а не flex-grow.",
      "Правильно: flex-grow указывает, насколько элемент может увеличиваться при наличии свободного пространства.",
      "order задаёт порядок, а не размер.",
      "flex-wrap управляет переносом, а не flex-grow.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_92",
    title: "Что означает значение flex-grow: 2?",
    options: [
      "Элемент не будет расти",
      "Элемент вырастет в два раза больше по сравнению с другими flex-элементами с flex-grow:1",
      "Элемент будет сжиматься вдвое",
      "Элемент выравнивается по центру",
    ],
    correctAnswers: [1],
    descriptions: [
      "flex-grow:0 означает отсутствие роста.",
      "Правильно: при наличии свободного пространства элемент с flex-grow:2 займёт двойную долю по сравнению с flex-grow:1.",
      "flex-shrink отвечает за сжатие, а не flex-grow.",
      "align-items управляет выравниванием, а не flex-grow.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_93",
    title: "Что происходит, если у всех flex-элементов задать flex-grow: 0?",
    options: [
      "Элементы будут расти",
      "Никто не займёт свободное пространство, даже если оно есть",
      "Элементы сожмутся автоматически",
      "Элементы исчезнут",
    ],
    correctAnswers: [1],
    descriptions: [
      "flex-grow:1 или больше позволяет элементам расти.",
      "Правильно: при flex-grow:0 элементы не растут и занимают только свой базовый размер (flex-basis).",
      "flex-shrink управляет сжатием, а не flex-grow.",
      "Элементы не исчезают без display:none.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_94",
    title: "Что делает свойство flex-shrink у flex-элемента?",
    options: [
      "Определяет базовый размер элемента",
      "Регулирует, насколько элемент может сжиматься при нехватке места",
      "Изменяет порядок элементов",
      "Запрещает перенос",
    ],
    correctAnswers: [1],
    descriptions: [
      "flex-basis задаёт базовый размер, а не flex-shrink.",
      "Правильно: flex-shrink указывает, насколько элемент может уменьшаться, когда места мало.",
      "order управляет порядком, а не гибкостью размеров.",
      "flex-wrap управляет переносом, а не flex-shrink.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_95",
    title: "Что означает значение flex-shrink: 0?",
    options: [
      "Элемент не может сжиматься при нехватке места",
      "Элемент растягивается",
      "Элемент сначала сжимается, а затем растягивается",
      "Элемент исчезает",
    ],
    correctAnswers: [0],
    descriptions: [
      "flex-shrink:1 или больше допускает сжатие.",
      "Правильно: flex-shrink:0 запрещает сжатие элемента при нехватке места.",
      "flex-grow управляет растяжением, а не flex-shrink.",
      "Элемент остаётся видимым, если только display не изменено.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_96",
    title: "Что происходит, если у flex-элемента flex-shrink не задан явно?",
    options: [
      "По умолчанию flex-shrink: 1",
      "По умолчанию flex-shrink: 0",
      "По умолчанию flex-shrink: auto",
      "Элемент не участвует в flex",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: по умолчанию flex-shrink равен 1.",
      "0 — не значение по умолчанию.",
      "auto не является корректным значением flex-shrink.",
      "Любой прямой потомок flex-контейнера участвует как flex-элемент.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_97",
    title: "Что задаёт flex-basis у flex-элемента?",
    options: [
      "Базовый размер перед распределением свободного пространства",
      "Минимальную высоту",
      "Порядок элемента",
      "Запрещает перенос",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-basis определяет, какой размер элемент займёт перед применением flex-grow и flex-shrink.",
      "min-height задаёт минимальную высоту, а не flex-basis.",
      "order управляет порядком, а не базовым размером.",
      "flex-wrap управляет переносом, а не flex-basis.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_98",
    title: "Что означает значение flex-basis: auto?",
    options: [
      "Базовый размер равен содержимому или width/height",
      "Элемент растягивается до максимума",
      "Элемент скрывается",
      "Элемент фиксирован по размеру",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto позволяет размеру основываться на width/height или содержимом.",
      "flex-grow управляет растяжением, а не auto в flex-basis.",
      "Элемент остаётся видимым, если не Задано display:none.",
      "Фиксированный размер задаётся конкретным значением (например, 100px), а не auto.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_99",
    title: "Что происходит, если flex-basis задан в процентах (например, 50%)?",
    options: [
      "Размер вычисляется относительно размера родителя flex-контейнера",
      "Размер вычисляется относительно содержимого элемента",
      "Проценты игнорируются",
      "Элемент исчезает",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: процентные значения flex-basis вычисляются от размера контейнера.",
      "auto или content задаёт размер по содержимому, а не проценты.",
      "Проценты поддерживаются и вычисляются правильно.",
      "Элемент остаётся видимым, если flex-basis задан корректно.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_100",
    title: "Как flex-grow и flex-shrink взаимодействуют при flex-basis: 100px?",
    options: [
      "flex-basis сначала задаёт 100px, затем flex-grow/flex-shrink изменяют размер при необходимости",
      "flex-grow и flex-shrink игнорируют flex-basis",
      "flex-basis переопределяет flex-grow/flex-shrink",
      "flex-grow и flex-shrink задают базовый размер",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: сначала элемент установлен в 100px, затем может расти или сжиматься по заданным коэффициентам.",
      "flex-basis участвует в расчётах, а не игнорируется.",
      "flex-grow/flex-shrink изменяют размер, а flex-basis задаёт начальную точку.",
      "flex-grow/flex-shrink регулируют изменение, а не базовый размер.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_101",
    title: "Что означает shorthand flex: 1 0 200px?",
    options: [
      "flex-grow:1, flex-shrink:0, flex-basis:200px",
      "flex-grow:0, flex-shrink:1, flex-basis:200px",
      "flex-grow:1, flex-shrink:1, flex-basis:0",
      "flex-grow:0, flex-shrink:0, flex-basis:200",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: порядок shorthand flex — grow, shrink, basis.",
      "Неправильный порядок параметров: grow и shrink перепутаны.",
      "Требуется указать basis явно, а не 0.",
      "Правильный порядок: grow, shrink, basis, а не как в этом варианте.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_102",
    title: "Как shorthand flex: auto интерпретируется для flex-элемента?",
    options: [
      "flex:1 1 auto",
      "flex:0 0 auto",
      "flex:1 0 auto",
      "flex:auto not supported",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:auto эквивалентно flex:1 1 auto.",
      "0 0 auto отключает гибкость, а auto даёт гибкость.",
      "flex:1 0 auto позволяет расти, но запрещает сжатие; auto даёт и расти, и сжиматься.",
      "auto поддерживается как shorthand.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_103",
    title: "Как shorthand flex: initial интерпретируется для flex-элемента?",
    options: [
      "flex:0 1 auto",
      "flex:1 1 auto",
      "flex:0 0 auto",
      "flex:initial not supported",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:initial по умолчанию означает flex:0 1 auto.",
      "1 1 auto — это auto, а не initial.",
      "0 0 auto исключает гибкость, а initial позволяет сжиматься.",
      "initial поддерживается как shorthand.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_104",
    title: "Что shorthand flex: none означает для flex-элемента?",
    options: [
      "flex:0 0 auto",
      "flex:1 0 auto",
      "flex:0 1 auto",
      "flex:none not supported",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:none эквивалентно flex:0 0 auto, отключая и рост, и сжатие.",
      "1 0 auto допускает рост, а none запрещает.",
      "0 1 auto допускает сжатие, а none запрещает.",
      "none поддерживается как shorthand.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_105",
    title: "Что происходит при flex: 2 2 0 у flex-элемента?",
    options: [
      "Элемент может расти вдвое быстрее и сжиматься вдвое быстрее с базовым размером 0",
      "Элемент занимает 2px",
      "Элемент не участвует в flex",
      "Элемент занимает весь контейнер",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grow:2 увеличивает рост, shrink:2 увеличивает сжатие, basis:0 означает отсутствие начального размера.",
      "0 означает отсутствие базового размера, а не 2px.",
      "Любой flex-элемент с shorthand flex участвует в Flexbox.",
      "shrink может уменьшить, а grow может растянуть, но не гарантировано весь контейнер.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_106",
    title: "Как flex-grow и flex-shrink влияют на flex-элемент одновременно?",
    options: [
      "flex-grow управляет ростом при избытке места, flex-shrink управляет сжатием при нехватке места",
      "flex-grow и flex-shrink задают одинаковое поведение",
      "flex-grow запрещает перенос, а flex-shrink разрешает",
      "Оба свойства задают порядок",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grow и shrink действуют в противоположных условиях: grow — при избытке, shrink — при нехватке места.",
      "Они имеют разные роли и не идентичны.",
      "flex-wrap управляет переносом, а не flex-grow/shrink.",
      "order управляет порядком, а flex-grow/shrink — размерами.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_107",
    title:
      "Что произойдет, если flex-basis: 0 и flex-grow: 1 у всех элементов одинаково?",
    options: [
      "Все элементы займут равное пространство контейнера",
      "Никакие элементы не будут расти",
      "Элементы исчезнут",
      "Элементы центрируются",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: с flex-basis:0 и flex-grow одинаковым, свободное пространство делится поровну.",
      "flex-grow:1 позволит рост, а basis:0 даст равное условие всем элементам.",
      "Элементы остаются видимыми, если display не изменено.",
      "Выравнивание зависит от justify-content или align-items, а не от flex-бasis/grow.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_108",
    title:
      "Как flex-shrink влияет, если суммарная ширина элементов больше контейнера и flex-shrink:1 у всех?",
    options: [
      "Все элементы будут сжиматься пропорционально, чтобы влезть",
      "Элементы будут расти",
      "Перенос без сжатия",
      "Элементы перекрываются",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при нехватке места и равном flex-shrink элементы сжимаются пропорционально.",
      "Когда места не хватает, элементы не растут.",
      "flex-wrap управляет переносом, но сжатие сначала применяется, если nowrap.",
      "Без сжатия и переноса возможна накладка, но с shrink:1 это компенсируется.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_109",
    title: "Что означает flex: 0 1 50px?",
    options: [
      "flex-grow:0, flex-shrink:1, flex-basis:50px",
      "flex-grow:1, flex-shrink:0, flex-basis:50px",
      "flex-grow:0, flex-shrink:0, flex-basis:50",
      "flex-grow:1, flex-shrink:1, flex-basis:0",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: порядок — grow, shrink, basis.",
      "grow и shrink перепутаны; основание верно.",
      "shrink:0 запрещает сжатие, а здесь стоит 1.",
      "basis не равен 0.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_110",
    title:
      "Какой базовый размер у элемента при flex-basis: auto и без width/height?",
    options: ["Размер по содержимому", "0", "100%", "Зависит от flex-grow"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto устанавливает размер по содержимому или его intrinsic-размеру.",
      "0 — значение только при flex-basis:0.",
      "100% — если явно задано, а не при auto.",
      "flex-grow влияет лишь после базового размера.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_111",
    title: "Что flex: 1 0 auto означает для flex-элемента?",
    options: [
      "Элемент растягивается и не сжимается, базовый размер по содержимому",
      "Элемент не растягивается и не сжимается, базовый размер ноль",
      "Элемент сжимается и не растягивается, базовый размер фиксирован",
      "Элемент исчезает",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grow:1 даёт рост при избытке, shrink:0 запрещает сжатие, basis:auto — по содержимому.",
      "grow=0/shrink=0/basis=0 описывает отсутствие гибкости.",
      "shrink=1/grow=0/basis=200px — противоположно.",
      "Элемент остаётся видимым с базовым размером.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_112",
    title: "Что flex: 0 1 auto означает для flex-элемента?",
    options: [
      "Элемент не растягивается, но может сжиматься, базовый размер по содержимому",
      "Элемент растягивается, но не сжимается",
      "Элемент фиксирован, без гибкости",
      "Элемент исчезает",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grow:0 запрещает рост, shrink:1 позволяет сжатие, basis:auto — по содержимому.",
      "grow=1/shrink=0/basis=auto — даст рост, но не сжатие.",
      "grow=0/shrink=0/basis=auto — отключит гибкость, но auto не влияет.",
      "Элемент остаётся видимым с базовым размером.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_113",
    title:
      "Какое сочетание flex-basis: 0 и flex-shrink: 1 означает для flex-элемента?",
    options: [
      "Элемент начнёт с размера 0 и сможет сжиматься при необходимости",
      "Элемент не займёт место и исчезнет",
      "Элемент базируется по содержимому",
      "Элемент не будет ни расти, ни сжиматься",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: basis:0 задаёт начальный размер 0, shrink:1 позволяет сжатие, что даёт гибкость.",
      "Элемент остаётся видимым, но до применения grow он никуда не растёт.",
      "basis:auto бы дал базирование по содержимому, а не 0.",
      "grow и shrink отключились бы при 0 0, но здесь shrink=1.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_114",
    title:
      "Что означает flex: 1 1 50% при наличии трех элементов одинаковых свойств?",
    options: [
      "Каждый элемент занимает минимум 50% контейнера, затем равномерно делит оставшееся пространство",
      "Элементы занимают поровну 33% каждый",
      "Элементы не растут и имеют фиксированный размер",
      "Элементы сжимают содержимое",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-basis:50% задаёт базовый размер, а flex-grow/flex-shrink регулируют размеры далее.",
      "33% было бы при basis отсутствующем или равном auto с равными grow.",
      "grow=1/shrink=1 допускают и рост, и сжатие, а basis:50% уже задаёт старт.",
      "shrink даёт сжатие, но basis:50% задаёт базу.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_115",
    title: "Как flex-basis влияет, если flex-grow и flex-shrink равны нулю?",
    options: [
      "flex-basis определит точный размер элемента, без изменений",
      "Элемент исчезнет",
      "Элемент станет гибким",
      "Порядок изменится",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: при flex:0 0 <value> элемент займёт ровно заданный flex-basis без гибкости.",
      "Элемент остаётся видимым, если display не изменено.",
      "grow=0/shrink=0 отключает гибкость, а basis=значение задаёт фиксированный размер.",
      "order управляет порядком, а не flex-basis.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_116",
    title:
      "Что происходит, если задать flex-basis: auto, но ширина элемента явно задана width: 100px?",
    options: [
      "flex-basis примет значение 100px",
      "flex-basis игнорируется",
      "Элемент растянется на весь контейнер",
      "Элемент исчезнет",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto берёт в расчёт width/height, поэтому flex-basis будет 100px.",
      "flex-basis auto не игнорируется, а учитывает width.",
      "grow/shrink определят растяжение, а не auto.",
      "Элемент не исчезает без display:none.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_117",
    title: "Какое значение flex: 2 0 auto означает?",
    options: [
      "Элемент может расти вдвое, не сжимается, базовый размер по содержимому",
      "Элемент не растёт, может сжиматься, базовый размер 0",
      "Элемент исчезает",
      "Элемент занимает все пространство",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grow:2 даёт удвоенный рост, shrink:0 запрещает сжатие, basis:auto — по содержимому.",
      "grow и shrink здесь перепутаны, а basis отличается.",
      "Элемент остаётся видимым с размером по содержимому.",
      "grow растягивает, но shrink=0 означает отсутствие сжатия при нехватке.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_118",
    title: "Что означает сочетание flex: 0 1 100px?",
    options: [
      "Элемент не растягивается, но может сжиматься, базовая ширина 100px",
      "Элемент растягивается, но не сжимается, базовая ширина 100px",
      "Элемент занимает весь контейнер",
      "Элемент исчезнет",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grow:0 запрещает рост, shrink:1 позволяет сжатие, basis:100px задаёт базовый размер.",
      "grow=1/shrink=0 задаёт рост, а не данный вариант.",
      "grow=0/shrink=1/basis=100px не гарантирует весь контейнер.",
      "Элемент остаётся с базовым размером.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_119",
    title:
      "Что происходит, если flex-grow: 1 и flex-basis: 0 у всех элементов в контейнере?",
    options: [
      "Свободное пространство делится поровну между элементами",
      "Элементы будут иметь различный размер",
      "Элементы исчезнут",
      "Элементы зафиксированы по 0px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: basis:0 даёт всем нулевой старт, а grow:1 равномерно распределяет свободное пространство.",
      "При равном grow и basis элементы занимают одинаковое место.",
      "Элементы остаются видимыми, занимая пространство.",
      "grow:1 растянет их дальше 0, а не оставить 0.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_120",
    title: "Как shorthand flex: 1 2 20% влияет на размер flex-элемента?",
    options: [
      "grow:1, shrink:2, базовый размер 20% от контейнера",
      "grow:2, shrink:1, базовый размер 20px",
      "grow:1, shrink:2, базовый размер 20px",
      "grow:2, shrink:1, базовый размер 20% от контейнера",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: порядок в shorthand — grow:1, shrink:2, basis:20%.",
      "grow и shrink перепутаны, а basis не в пикселях.",
      "Базовый размер должен быть в процентах, а не пикселях.",
      "grow и shrink перепутаны.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_121",
    title:
      "Какое ключевое отличие flex-контейнера от контейнера с float-элементами?",
    options: [
      "Flex-контейнер автоматически управляет выравниванием и распределением элементов",
      "Float-элементы выравниваются по центру по умолчанию",
      "Flex-контейнеры не могут менять порядок элементов",
      "Float-элементы всегда растягиваются во всю ширину",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: Flexbox автоматически управляет выравниванием и распределением элементов внутри контейнера.",
      "Float по умолчанию не центрирует; нужно использовать margin:auto или text-align.",
      "Flexbox позволяет менять порядок с помощью свойства order.",
      "Float даёт блочный поток, но не обязательно растягивается во всю ширину.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_122",
    title:
      "Почему использование inline-block не решает проблему вертикального выравнивания элементов так же легко, как flexbox?",
    options: [
      "Inline-block элементы выравниваются по baseline, а не по центру",
      "Inline-block не позволяет задать ширину элементов",
      "Inline-block не поддерживается в современных браузерах",
      "Inline-block блокирует любые отступы",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: inline-block по умолчанию выравнивается по baseline текста, а не автоматически по центру.",
      "Inline-block позволяет задавать ширину через width.",
      "Inline-block поддерживается всеми современными браузерами.",
      "Inline-block не блокирует отступы; margin/padding работают.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_123",
    title:
      "Как flexbox упрощает создание адаптивных сеток по сравнению с float?",
    options: [
      "Flexbox использует свойства grow и shrink для автоматического распределения пространства",
      "Float автоматически адаптируется без дополнительных стилей",
      "Flexbox запрещает переполнение",
      "Float не требует clearfix",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-grow и flex-shrink позволяют элементам автоматически распределять и сжимать пространство в контейнере.",
      "Float без clearfix и media queries редко даёт адаптивный результат без дополнительной настройки.",
      "Flexbox не запрещает переполнение, но предлагает более гибкое управление пространством.",
      "Float часто требует clearfix или overflow:hidden, чтобы очистить обтекание.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_124",
    title:
      "Что происходит с порядком элементов при float по сравнению с flexbox?",
    options: [
      "Float оставляет элементы в DOM-порядке, а flexbox может изменять их порядок с помощью order",
      "Float автоматически сортирует элементы по ширине",
      "Flexbox оставляет порядок неизменным всегда",
      "Float позволяет задать order, как flexbox",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: float не меняет визуальный порядок относительно DOM, а flexbox позволяет менять порядок.",
      "Float не сортирует по ширине.",
      "Flexbox может изменять порядок с помощью свойства order.",
      "Float не имеет свойства order.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_125",
    title:
      "Почему flex-контейнеры чаще применяют вместо inline-block, когда нужно ровно распределить элементы с промежутками?",
    options: [
      "Flexbox поддерживает свойство gap, а inline-block требует пробелов или margin",
      "Inline-block не работает с margin",
      "Flexbox запрещает margin",
      "Inline-block не поддерживается в IE",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox gap позволяет задать равный промежуток между элементами без лишних хитростей, в то время как inline-block требует ручного задания пробелов или margin.",
      "Inline-block поддерживает margin.",
      "Flexbox не запрещает margin.",
      "Inline-block поддерживается и в IE (почти).",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_126",
    title:
      "Как flexbox решает проблему «скрывающегося» контейнера при использовании float?",
    options: [
      "Flexbox не требует clearfix, потому что родитель автоматически охватывает дочерние элементы",
      "Float автоматически очищает контейнеры",
      "Flexbox заставляет контейнер быть display:block",
      "Float контейнеры не могут закрываться",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-контейнер расширяется по высоте автоматически, охватывая все дочерние элементы, в отличие от float, где требуется clearfix.",
      "Float не очищает контейнер по умолчанию.",
      "Flex-контейнером становится display:flex, а не display:block принудительно.",
      "Float-контейнеры часто требуют clearfix.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_127",
    title:
      "Как flexbox упрощает вертикальное центрирование по сравнению с float и inline-block?",
    options: [
      "Flexbox позволяет использовать align-items:center, float и inline-block требуют трюков с positioning или line-height",
      "Float и inline-block автоматически центрируют по вертикали",
      "Flexbox не может центрировать по вертикали",
      "Inline-block требует order для центрирования",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: с помощью align-items:center можно легко вертикально центрировать элементы внутри flex-контейнера, тогда как float и inline-block требуют более сложных приёмов (position, line-height и т. д.).",
      "Float и inline-block не центрируют по вертикали без дополнительных техник.",
      "Flexbox предоставляет встроенные методы вертикального центрирования.",
      "order управляет порядком, а не центрированием.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_128",
    title:
      "Почему flexbox эффективнее при создании равномерной строки карточек, чем float?",
    options: [
      "Flexbox автоматически выравнивает карточки и распределяет свободное место, float требует дополнительных расчётов",
      "Float запрещает устанавливать ширину элементов",
      "Flexbox запрещает перенос",
      "Float не поддерживает margin",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox автоматически выравнивает и распределяет пространство, float часто требует явных вычислений и clearfix.",
      "Float позволяет задавать ширину.",
      "Flexbox может как переносить (wrap), так и запрещать перенос (nowrap).",
      "Float поддерживает margin.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_129",
    title:
      "Какое преимущество flex-basis имеет над width при сравнении с float?",
    options: [
      "flex-basis задаёт базовый размер с учётом flex-контейнера, а width лишь фиксирует размер",
      "width вычисляет процент от родителя, flex-basis нет",
      "width не работает в flexbox",
      "flex-basis запрещает прокрутку",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-basis учитывает контекст flex-контейнера при распределении пространства, а width задаёт фиксированную ширину без адаптивных вычислений.",
      "flex-basis может быть задан в процентах от контейнера, как и width.",
      "width работает в flexbox, но flex-basis зачастую приоритетнее.",
      "flex-basis не управляет прокруткой.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_130",
    title:
      "Почему использование float затрудняет вертикальное выравнивание элементов в одной строке?",
    options: [
      "Потому что float убирает элемент из нормального потока, и для выравнивания нужен clearfix или контейнеры",
      "Float не позволяет задавать margin",
      "Float запрещает задавать высоту",
      "Float не поддерживается flex",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: float выводит элемент из нормального потока, усложняя вертикальное выравнивание без дополнительных приёмов.",
      "Float поддерживает margin.",
      "Float не запрещает задавать высоту.",
      "Flexbox и float — разные методы, но float не зависит от flex.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_131",
    title:
      "Что проще сделать с помощью flexbox, чем с inline-block, при наличии пробелов между элементами?",
    options: [
      "Убрать «пробельные» зазоры между элементами без дополнительных ухищрений",
      "Задать фоновое изображение на элемент",
      "Создать псевдоэлемент ::before",
      "Добавить border-radius",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox gap позволяет задавать промежутки без лишних пробелов, а inline-block требует удалять пробелы в HTML или управлять margin.",
      "Фоновое изображение можно задать и с помощью inline-block.",
      "Псевдоэлементы поддерживаются любым display, а не только flex.",
      "border-radius работает для любого display.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_132",
    title:
      "Почему flexbox предпочтителен для горизонтального центрирования группы элементов по сравнению с inline-block?",
    options: [
      "Flexbox с justify-content: center легко центрирует, inline-block требует text-align у родителя",
      "Inline-block не может центрироваться",
      "Flexbox автоматически удаляет пробелы",
      "Inline-block не поддерживается в мобильных браузерах",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox центрирует всю группу с помощью justify-content, тогда как inline-block требует text-align:center у родителя.",
      "Inline-block можно центрировать через text-align.",
      "Flexbox gap управляет пробелами между элементами, а не их удалением.",
      "Inline-block работает во всех современных браузерах.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_133",
    title:
      "Как flexbox решает проблему «висения» элементов, характерную для float?",
    options: [
      "Flex-контейнер автоматически оборачивает дочерние элементы, не требуя clearfix",
      "Float автоматически оборачивает контейнер",
      "Flexbox заставляет элементы становиться позиционированными",
      "Float и flexbox работают одинаково",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-контейнер растягивается по высоте, охватывая дочерние элементы, без необходимости clearfix.",
      "Float не оборачивает контейнер по умолчанию.",
      "Flexbox не меняет позиционирование на absolute.",
      "Flexbox и float работают по-разному.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_134",
    title:
      "Почему flexbox может быть более экономным по коду, чем float для адаптивных макетов?",
    options: [
      "Flexbox предоставляет встроенные свойства для выравнивания, распределения и порядка, float требует большого количества дополнительного CSS",
      "Float проще и не требует кода",
      "Flexbox не работает без JavaScript",
      "Float автоматически адаптируется к размеру окна",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox интегрирует выравнивание, распределение и порядок в единый API, в то время как float часто требует clearfix, media queries и ручных расчётов.",
      "Float часто требует clearfix и дополнительных стилей для адаптивности.",
      "Flexbox — чисто CSS-решение без JavaScript.",
      "Float не автоматически адаптивен; требует дополнительных медиа-запросов.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_135",
    title:
      "Какую проблему flexbox решает лучше, чем inline-block, при необходимости выравнивать элементы по базовой линии текста?",
    options: [
      "Flexbox позволяет align-items: baseline, inline-block требует вертикальных оступов",
      "Inline-block поддерживает baseline по умолчанию",
      "Flexbox запрещает baseline",
      "Inline-block автоматически центрирует",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox свойство align-items:baseline позволяет легко выравнивать элементы по базовой линии внутри flex-контейнера, тогда как inline-block может требовать ручных настроек.",
      "Inline-block по умолчанию выравнивается по baseline, но точно настроить различные высоты сложнее.",
      "Flexbox не запрещает baseline; наоборот, поддерживает его.",
      "Inline-block не центрируется автоматически без text-align.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_136",
    title:
      "Почему flexbox удобнее, чем float для упорядочивания элементов в строку с равными отступами?",
    options: [
      "Flexbox gap позволяет задать равные промежутки, float требует margin и учёта clearfix",
      "Float всегда выстраивает элементы вертикально",
      "Flexbox запрещает отступы",
      "Float автоматически добавляет пробелы",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: с gap можно задать единый промежуток между элементами, тогда как float требует явных margin и clearfix.",
      "Float выстраивает горизонтально, но без gap.",
      "Flexbox поддерживает margin, padding, gap.",
      "Float не добавляет пробелы автоматически.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_137",
    title:
      "Как flexbox облегчает создание «отзывчивого» меню в сравнении с inline-block?",
    options: [
      "Flexbox flex-wrap позволяет автоматически переносить элементы при уменьшении контейнера",
      "Inline-block поддерживает flex-wrap",
      "Flexbox не работает в мобильных устройствах",
      "Inline-block автоматически центрируется",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-wrap позволяет элементам меню переноситься на новую строку при необходимости, а inline-block требует media queries или JS.",
      "Inline-block не имеет свойства wrap.",
      "Flexbox поддерживается на мобильных устройствах.",
      "Inline-block не центрируется без дополнительного CSS.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_138",
    title:
      "Что flexbox делает по-другому, чем float, когда нужно удалить пустое пространство между блочными элементами?",
    options: [
      "Flexbox gap не создаёт лишних пробелов в HTML-разметке",
      "Float удаляет пробелы сам",
      "Flexbox не поддерживает пробелы",
      "Float автоматически убирает margin",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox gap задаётся в CSS, а inline-block/float часто требуют удаления пробелов в HTML.",
      "Float не удаляет пробелы между элементами.",
      "Flexbox управляет пробелами через gap, а не запрещает их.",
      "Float не изменяет margin; margin задаётся вручную.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_139",
    title:
      "Какое преимущество flexbox имеет при смешении элементов разной высоты, по сравнению с float?",
    options: [
      "align-items позволяет выровнять по поперечной оси, float требует manual vertical-align или padding",
      "Float автоматически выравнивает по центру",
      "Flexbox запрещает смешивать разные высоты",
      "Float всегда заставляет один элемент иметь ту же высоту",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-items выравнивает элементы по поперечной оси, облегчая работу с разными высотами; float требует workaround.",
      "Float не выравнивает по центру самостоятельно.",
      "Flexbox поддерживает разные высоты и предоставляет выравнивание.",
      "Float не гарантирует одинаковую высоту.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_140",
    title:
      "Почему float не подходит для центрирования группы элементов с динамической шириной?",
    options: [
      "Float не учитывает оставшееся пространство, flexbox делает это с help of justify-content",
      "Float всегда центрируется автоматически",
      "Float запрещает margin:auto",
      "Flexbox и float работают одинаково",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: float не распределяет свободное пространство автоматически, а flexbox с justify-content делает это.",
      "Float не центрируется без text-align:center или margin:auto.",
      "Float поддерживает margin:auto для блочных элементов при заданной ширине.",
      "Flexbox и float отличаются по способу распределения пространства.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_141",
    title:
      "Как flexbox упрощает выравнивание снизу верх элементов в строке по сравнению с float?",
    options: [
      "align-items: flex-end выравнивает все элементы по нижнему краю контейнера",
      "Float автоматически выравнивает снизу вверх",
      "Flexbox запрещает выравнивание",
      "Float принудительно растягивает элементы",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-items:flex-end выравнивает элементы по нижнему краю flex-контейнера просто и без дополнительных трюков.",
      "Float не выравнивает по нижнему краю без дополнительного CSS.",
      "Flexbox предоставляет возможности выравнивания.",
      "Float не растягивает по вертикали автоматически.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_142",
    title: "При каком сценарии float может быть предпочтительнее, чем flexbox?",
    options: [
      "Когда нужно обтекать текст вокруг изображения",
      "Когда нужно центрировать элементы по вертикали",
      "Когда нужно менять порядок элементов",
      "Когда требуется gap",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: float традиционно используется для создания текстового обтекания вокруг изображений.",
      "Для вертикального центрирования лучше использовать flexbox.",
      "Порядок меняется проще с помощью flexbox и свойства order.",
      "Gap — это flexbox/ CSS Grid свойство; float не поддерживает его.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_143",
    title:
      "Почему flexbox лучше подходит для создания горизонтальных навигационных меню по сравнению с inline-block?",
    options: [
      "Flexbox автоматически равномерно распределяет пункты и позволяет легко центрировать",
      "Inline-block запрещает создание меню",
      "Flexbox не поддерживает hover",
      "Inline-block требует JavaScript",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox позволяет равномерно распределять пункты меню и централизованно выравнивать с помощью простых свойств.",
      "Inline-block может использоваться, но требует больше CSS-трюков для центрирования и пробелов.",
      "Flexbox поддерживает hover на элементах.",
      "Inline-block не требует JavaScript; CSS достаточно.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_144",
    title: "Как flexbox и float отличаются в контексте «колоночных» макетов?",
    options: [
      "Flexbox легко делает адаптивные колонки с помощью flex-wrap и flex-basis, float требует clearfix и media queries",
      "Float автоматически создаёт колонки без кода",
      "Flexbox не может создавать колонки",
      "Float запрещает адаптивность",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-wrap и flex-basis позволяют гибко управлять колонками, тогда как float требует clearfix и дополнительных медиа-запросов.",
      "Float не создаёт адаптивные колонки автоматически.",
      "Flexbox идеально подходит для колоночных макетов.",
      "Float может работать адаптивно, но с большим количеством кода.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_145",
    title:
      "Чем отличается взаимодействие margin: auto у flex-элементов от inline-block?",
    options: [
      "margin: auto внутри flex-контейнера может выровнять элемент по оси, inline-block margin:auto не выравнивает элемент без блока-контейнера",
      "Inline-block margin:auto всегда центрирует элемент",
      "Flexbox margin:auto запрещает отступы",
      "Inline-block margin:auto работает только в grid",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: у flex-элемента margin:auto по оси выравнивает его внутри контейнера, а inline-block требует родитель с text-align:center или определённую ширину.",
      "Inline-block margin:auto не центрирует без блоковой модели или text-align.",
      "Flexbox margin:auto работает корректно.",
      "Inline-block margin:auto не зависит от grid.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_146",
    title:
      "Как flexbox превосходит float при заполнении строки одинаковыми элементами с разным содержимым?",
    options: [
      "Flexbox автоматически распределяет элементы по ширине, float требует явной ширины для каждого",
      "Float распределяет одинаково без кода",
      "Flexbox запрещает разный контент",
      "Float разрешает flex-grow",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox flex-grow позволяет элементам заполнять доступную ширину пропорционально, float потребует задать width каждому элементу.",
      "Float не распределяет автоматически; нужно задавать проценты или фиксированные ширины.",
      "Flexbox поддерживает разное содержимое и динамическое распределение.",
      "Flex-grow — свойство flexbox, не доступное в float.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_147",
    title:
      "Что flexbox делает лучше, чем inline-block, при создании «галереи» изображений с центровкой и обрезкой?",
    options: [
      "Flexbox позволяет align-items:center и justify-content:center без лишнего HTML, inline-block требует контейнеры с text-align",
      "Inline-block автоматически центрирует без кода",
      "Flexbox не поддерживает изображения",
      "Inline-block лучше обрезает",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox позволяет легко центрировать элементы по вертикали и горизонтали, а inline-block требует text-align на родителе и вертикальных приёмов.",
      "Inline-block не центрируется автоматически без container text-align.",
      "Flexbox поддерживает любые дочерние элементы, включая изображения.",
      "Обрезка зависит от overflow и width/height, а не от flex или inline-block.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_148",
    title:
      "Почему flexbox предпочтителен для сложных макетов, содержащих вложенные ряды и колонки, по сравнению с float?",
    options: [
      "Flexbox имеет вложенные flex-контейнеры с независимыми осями, float требует clearfix и не управляет вложенностью так гибко",
      "Float автоматически управляет вложенностью",
      "Flexbox запрещает вложенность",
      "Float запрещает вертикальное выравнивание",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox позволяет вложить flex-контейнеры с разными направлениями и правилами распределения, float в сложных вложенных макетах становится трудозатратным.",
      "Float не управляет вложенностью без clearfix и дополнительных стилей.",
      "Flexbox поддерживает вложенность flex-контейнеров.",
      "Float может выравнивать вертикально через margin и padding, но с трудностями.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_149",
    title:
      "Что flexbox делает быстрее, чем inline-block, при пересчёте размеров при изменении окна браузера?",
    options: [
      "Перераспределяет доступное пространство и пересчитывает размеры flex-элементов «на лету» без перекомпиляции верстки, inline-block требует перерасчёта всех пробелов и размеров",
      "Inline-block быстрее пересчитывает",
      "Flexbox запрещает перерасчёт",
      "Inline-block перерасчитывает только при перезагрузке",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox динамически перераспределяет пространство при изменении размера контейнера, а inline-block может требовать перерасчёта пространства между элементами.",
      "В большинстве случаев flexbox более оптимизирован для адаптивности.",
      "Flexbox постоянно реагирует на изменения размеров.",
      "Inline-block адаптируется, но с дополнительной нагрузкой на перерасчёт.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_150",
    title: "Чем возвращаемость кода при переходе с float на flexbox оправдана?",
    options: [
      "Flexbox устраняет необходимость в clearfix и числовых ширинах, делая код чище и более поддерживаемым",
      "Float требует меньше кода",
      "Flexbox запрещает использование margin",
      "Float не работает в современных браузерах",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flexbox устраняет многие хаки, такие как clearfix и ручные вычисления ширин, упрощая поддержку и читаемость кода.",
      "Float в сложных макетах требует больше вспомогательного кода.",
      "Flexbox поддерживает margin.",
      "Float поддерживается всеми современными браузерами.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_151",
    title: "Что такое flex-контейнер?",
    options: [
      "Элемент с display: flex или inline-flex",
      "Элемент с float: left",
      "Элемент с position: relative",
      "Элемент с display: block",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: любой элемент, у которого display установлено в flex или inline-flex, становится flex-контейнером.",
      "Float не делает контейнер flex.",
      "Position не влияет на flex-контейнер.",
      "display: block не создаёт flex-контейнер.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_152",
    title: "Какой набор свойств включает shorthand flex?",
    options: [
      "flex-grow, flex-shrink, flex-basis",
      "flex-direction, flex-wrap",
      "justify-content, align-items",
      "order, align-self",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: shorthand flex объединяет flex-grow, flex-shrink и flex-basis.",
      "Это shorthand flex-flow, а не flex.",
      "Это наборы для выравнивания, не shorthand flex.",
      "Эти свойства не входят в shorthand flex.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_153",
    title: "Что делает justify-content: center?",
    options: [
      "Центрирует flex-элементы вдоль главной оси",
      "Центрирует flex-элементы вдоль поперечной оси",
      "Изменяет порядок элементов",
      "Запрещает перенос",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: justify-content отвечает за выравнивание вдоль главной оси.",
      "Выравнивание вдоль поперечной оси выполняется align-items.",
      "order управляет порядком, а не justify-content.",
      "flex-wrap отвечает за перенос.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_154",
    title: "Что делает align-items: stretch?",
    options: [
      "Растягивает flex-элементы по поперечной оси",
      "Центрирует элементы по поперечной оси",
      "Выравнивает элементы по верхнему краю",
      "Запрещает сжатие",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: stretch растягивает элементы, чтобы заполнить доступное пространство по поперечной оси.",
      "center выравнивает по центру, а не stretch.",
      "flex-start выравнивает по верхнему краю.",
      "flex-shrink управляет сжатием, а не align-items.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_155",
    title: "Что означает свойство align-self?",
    options: [
      "Переопределяет align-items для конкретного элемента",
      "Задаёт порядок элемента",
      "Запрещает перенос элемента",
      "Изменяет размер шрифта",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-self позволяет одному элементу иметь своё выравнивание по поперечной оси.",
      "order управляет порядком, а не align-self.",
      "flex-wrap управляет переносом, а не align-self.",
      "align-self не влияет на текстовый размер.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_156",
    title: "Как flex-wrap влияет на расположение элементов?",
    options: [
      "Разрешает или запрещает перенос элементов на новую строку",
      "Изменяет порядок элементов",
      "Выравнивает элементы по центру",
      "Растягивает элементы",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-wrap определяет, будут ли элементы переноситься при нехватке места.",
      "order отвечает за порядок, а не flex-wrap.",
      "justify-content и align-items отвечают за выравнивание.",
      "flex-grow/flex-shrink управляют растягиванием/сжатием.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_157",
    title: "Что shorthand flex-flow объединяет?",
    options: [
      "flex-direction и flex-wrap",
      "flex-grow и flex-shrink",
      "justify-content и align-items",
      "order и align-self",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-flow shorthand объединяет flex-direction и flex-wrap.",
      "Это shorthand flex, а не flex-flow.",
      "Это свойства выравнивания, а не flex-flow.",
      "order и align-self не входят в flex-flow.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_158",
    title: "Что делает order: -1?",
    options: [
      "Перемещает элемент перед всеми другими с большим order",
      "Растягивает элемент",
      "Запрещает перенос",
      "Центрирует элемент",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: меньшее значение order выводит элемент вперед в порядке следования.",
      "flex-grow управляет растягиванием, а не order.",
      "flex-wrap управляет переносом, а не order.",
      "justify-content и align-items отвечают за центрирование.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_159",
    title: "Что происходит, если задать flex: 1 1 0?",
    options: [
      "Элемент стартует с 0, может расти и сжиматься пропорционально",
      "Элемент всегда остаётся 0px",
      "Элемент растягивается на всю высоту контейнера",
      "Элемент исчезает",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-basis=0 задаёт стартовый размер 0, а grow/shrink позволяют гибко изменять размер.",
      "grow:1 позволит растягиваться, а не оставаться 0.",
      "flex-basis не равен 100%, а 0.",
      "Элемент остаётся видимым, занимая гибкие пространства.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_160",
    title: "Как задать равные пропорции для всех flex-элементов?",
    options: [
      "Установить flex-grow:1 и flex-basis:0 для всех",
      "Установить flex-shrink:0 для всех",
      "Установить order одинаково для всех",
      "Установить align-items: center",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-grow:1 и flex-basis:0 заставляют элементы равномерно делить доступное пространство.",
      "flex-shrink отвечает за сжатие, а не деление пространства.",
      "order влияет на порядок, а не на размеры.",
      "align-items управляет выравниванием, а не размерами.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_161",
    title: "Что делает align-content: space-between при нескольких строках?",
    options: [
      "Распределяет строки так, чтобы первая была у начала, а последняя у конца контейнера",
      "Растягивает строки по высоте",
      "Центрирует строки",
      "Запрещает перенос",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: space-between распределяет строки по поперечной оси между началом и концом.",
      "stretch растягивает строки, а не space-between.",
      "center центрирует строки, а не space-between.",
      "flex-wrap управляет переносом, а не align-content.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_162",
    title: "Что shorthand flex: auto означает?",
    options: [
      "flex: 1 1 auto",
      "flex: 0 0 auto",
      "flex: 1 0 0",
      "flex: auto not supported",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:auto эквивалентно flex:1 1 auto, позволяя расти и сжиматься.",
      "0 0 auto запрещает гибкость.",
      "Неверное сочетание значений.",
      "auto поддерживается shorthand.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_163",
    title: "Что shorthand flex: initial означает?",
    options: [
      "flex: 0 1 auto",
      "flex: 1 1 auto",
      "flex: 0 0 auto",
      "flex: initial not supported",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:initial эквивалентно flex:0 1 auto.",
      "1 1 auto — это значение auto, а не initial.",
      "0 0 auto — это none, а не initial.",
      "initial поддерживается shorthand.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_164",
    title: "Что shorthand flex: none означает?",
    options: [
      "flex: 0 0 auto",
      "flex: 1 0 0",
      "flex: 0 1 1",
      "flex: none not supported",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:none эквивалентно flex:0 0 auto, отключая гибкость.",
      "1 0 0 разрешает рост, а none запрещает.",
      "0 1 1 — некорректное значение shorthand.",
      "none поддерживается shorthand.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_165",
    title: "Что shorthand flex: 1 2 50px означает?",
    options: [
      "grow:1, shrink:2, basis:50px",
      "grow:2, shrink:1, basis:50%",
      "grow:1, shrink:2, basis:0",
      "grow:0, shrink:1, basis:50px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: порядок shorthand flex — grow, shrink, basis.",
      "grow и shrink перепутаны, а basis указан неверно.",
      "basis должен быть 50px, а не 0.",
      "grow и shrink указаны неверно.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_166",
    title: "Как flexbox помогает с адаптивностью элементов?",
    options: [
      "flex-grow и flex-shrink автоматически подстраивают размеры при изменении контейнера",
      "flexbox запрещает изменение размеров",
      "flexbox требует JavaScript для адаптивности",
      "flexbox игнорирует медиа-запросы",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grow/shrink автоматически адаптируют элементы к доступному пространству.",
      "Flexbox работает именно для гибкости, не запрещая изменения.",
      "Flexbox адаптивен без JavaScript.",
      "Flexbox и медиа-запросы работают вместе.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_167",
    title: "Что shorthand flex: 0 1 auto означает?",
    options: [
      "Элемент не растягивается, может сжиматься, базовый размер по содержимому",
      "Элемент растягивается, но не сжимается",
      "Элемент фиксирован, без гибкости",
      "Элемент исчезает",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grow:0, shrink:1, basis:auto даёт базовый размер по содержимому и возможность сжатия, но не роста.",
      "grow:1/shrink:0 — другое сочетание.",
      "0 0 auto — фиксированный размер без гибкости.",
      "Элемент видим при auto basis.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_168",
    title: "Как flexbox справляется с вертикальным выравниванием?",
    options: [
      "align-items управляет выравниванием вдоль поперечной оси",
      "justify-content управляет вертикальным выравниванием",
      "order управляет вертикальным выравниванием",
      "flex-wrap управляет вертикальным выравниванием",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: align-items отвечает за выравнивание вдоль поперечной оси, которая может быть вертикальной при row.",
      "justify-content выравнивает вдоль главной оси.",
      "order меняет порядок, а не выравнивание.",
      "flex-wrap определяет перенос, а не выравнивание.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_169",
    title:
      "Как flexbox упрощает создание «жесткой» сетки из элементов одинакового размера?",
    options: [
      "flex-basis задаёт фиксированный размер, а flex-grow/shrink контролируют распределение",
      "flexbox не поддерживает фиксированные размеры",
      "justify-content автоматически ограничивает размер",
      "align-items запрещает изменение размеров",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-basis позволяет задать одинаковый размер, а grow/shrink управляют укладкой без сложных расчётов.",
      "Flexbox поддерживает любые sizes через flex-basis или width/height.",
      "justify-content управляет выравниванием, а не размером.",
      "align-items управляет выравниванием, а не запретом изменения.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_170",
    title: "Что shorthand flex: 2 0 25% означает для flex-элемента?",
    options: [
      "grow:2, shrink:0, basis:25% от контейнера",
      "grow:0, shrink:2, basis:25px",
      "grow:1, shrink:1, basis:25%",
      "grow:2, shrink:1, basis:0",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: порядок shorthand — grow, shrink, basis.",
      "shrink:2 и basis:25px — неверное сочетание.",
      "grow/shrink указаны не так, как в shorthand.",
      "basis должно быть 25%, а не 0.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_171",
    title: "Как flexbox обрабатывает вложенные flex-контейнеры?",
    options: [
      "Каждый flex-контейнер имеет свои независимые оси и правила распределения",
      "Вложенный контейнер становится частью родительских осей",
      "Flexbox запрещает вложенность",
      "Вложенный контейнер наследует grow/shrink родителя",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: вложенный flex-контейнер сам по себе имеет свои свойства flex и не зависит от родительских осей.",
      "Он не использует родительские оси напрямую; каждая система независима.",
      "Flexbox поддерживает произвольную вложенность flex-контейнеров.",
      "grow/shrink применяются к этому контейнеру отдельно.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_172",
    title: "Что shorthand flex: 0 0 auto означает?",
    options: [
      "Элемент фиксированного размера по содержимому, без роста и сжатия",
      "Элемент может расти, но не сжиматься",
      "Элемент может сжиматься, но не расти",
      "Элемент исчезает",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: grow:0/shrink:0/basis:auto фиксирует элемент по его intrinsic-размеру.",
      "grow=1/shrink=0/basis=auto разрешает рост, но не сжатие.",
      "grow=0/shrink=1/basis=auto разрешает сжатие, но не рост.",
      "Элемент остаётся видимым.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_173",
    title: "Что shorthand flex: 0 1 100px означает?",
    options: [
      "grow:0, shrink:1, basis:100px",
      "grow:1, shrink:0, basis:100px",
      "grow:0, shrink:0, basis:100",
      "grow:0, shrink:1, basis:auto",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: порядок — grow, shrink, basis.",
      "grow и shrink перепутаны.",
      "basis должно быть с юнитом (100px).",
      "basis указан неверно.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_174",
    title: "Какое свойство запрещает элементу сжиматься?",
    options: ["flex-shrink: 0", "flex-grow: 0", "order: 0", "flex-basis: auto"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-shrink:0 запрещает элементу уменьшаться при нехватке места.",
      "grow управляет ростом, а не сжатием.",
      "order управляет порядком, а не размером.",
      "basis управляет базовым размером, а не сжатием.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_175",
    title: "Какое свойство задаёт базовый размер flex-элемента?",
    options: ["flex-basis", "flex-grow", "flex-shrink", "order"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex-basis определяет первоначальный размер до роста или сжатия.",
      "grow управляет ростом, но не базовым размером.",
      "shrink управляет сжатием, но не базовым размером.",
      "order управляет порядком, а не размером.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_176",
    title: "Как shorthand flex: 1 0 0 влияет на flex-элемент?",
    options: [
      "grow:1, shrink:0, basis:0",
      "grow:0, shrink:1, basis:100%",
      "grow:1, shrink:1, basis:auto",
      "grow:0, shrink:0, basis:0",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: shorthand flex принимает значения в порядке grow, shrink, basis.",
      "grow и shrink перепутаны, basis указан неверно.",
      "Это shorthand для flex:auto, а не 1 0 0.",
      "grow/shrink не соответствуют 1 0.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_177",
    title: "Что shorthand flex: 2 1 20px означает?",
    options: [
      "grow:2, shrink:1, basis:20px",
      "grow:1, shrink:2, basis:20%",
      "grow:2, shrink:1, basis:auto",
      "grow:2, shrink:0, basis:20px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: порядок — grow, shrink, basis.",
      "grow/shrink перепутаны, basis указан неверно.",
      "basis должно быть 20px, а не auto.",
      "shrink указан неверно.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_178",
    title: "Как shorthand flex: 0 0 50% влияет на flex-элемент?",
    options: [
      "grow:0, shrink:0, basis:50%",
      "grow:0, shrink:1, basis:50px",
      "grow:1, shrink:0, basis:50%",
      "grow:0, shrink:0, basis:50px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: shorthand flex принимает значения в порядке grow, shrink, basis, basis задано в процентах.",
      "shrink указан неверно и basis не в процентах.",
      "grow указан неверно.",
      "basis должен быть 50%.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_179",
    title: "Как shorthand flex: 1 1 auto влияет на flex-элемент?",
    options: [
      "grow:1, shrink:1, basis:auto",
      "grow:0, shrink:1, basis:auto",
      "grow:1, shrink:0, basis:0",
      "grow:1, shrink:1, basis:0",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: shorthand flex:auto эквивалентно 1 1 auto.",
      "grow указан неверно.",
      "basis указан неверно.",
      "basis указан неверно.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
  {
    id: "css_flexbox_180",
    title: "Что shorthand flex: none делает?",
    options: [
      "grow:0, shrink:0, basis:auto",
      "grow:1, shrink:1, basis:auto",
      "grow:0, shrink:1, basis:auto",
      "grow:1, shrink:0, basis:0",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: flex:none эквивалентно flex:0 0 auto, отключая гибкость.",
      "1 1 auto — это auto, а не none.",
      "shrink указан неверно.",
      "grow/shrink указаны неверно.",
    ],
    moduleId: "css",
    sectionTitle: "Flexbox",
    topic: "css_flexbox",
  },
];
