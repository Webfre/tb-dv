export const cssResponsiveQuestions = [
  {
    id: "css_responsive_1",
    title: "Что такое адаптивность в веб-дизайне?",
    options: [
      "Способность страницы подстраиваться под различные размеры экрана",
      "Использование фиксированных пиксельных значений для всех элементов",
      "Применение только фреймворков без CSS",
      "Создание нескольких отдельных макетов для каждого устройства",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: адаптивность — это когда макет изменяется под ширину экрана пользователя.",
      "Фиксированные значения не обеспечивают адаптивность.",
      "Фреймворк сам по себе не гарантирует адаптивность без CSS.",
      "Ненужно создавать отдельные макеты, адаптивный дизайн работает через единый код.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_2",
    title: "Что такое резиновая (fluid) вёрстка?",
    options: [
      "Макет, который растягивается и сжимается за счёт процентов и относительных единиц",
      "Макет с фиксированными ширинами в пикселях",
      "Макет, использующий только фреймворк Bootstrap",
      "Макет, где все размеры задаются через rem",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: резиновая вёрстка (%) подстраивается под любую ширину окна.",
      "Фиксированные ширины не являются резиновыми.",
      "Использование Bootstrap не гарантирует резиновый макет.",
      "rem — относительная единица, но сама по себе не делает макет резиновым.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_3",
    title: "Чем резиновая вёрстка отличается от адаптивной?",
    options: [
      "Резиновая использует проценты без брейкпоинтов, адаптивная — фиксированные точки перехода",
      "Резиновая применяет только медиа-запросы, адаптивная — только проценты",
      "Они идентичны по принципу работы",
      "Адаптивная не поддерживает мобильные устройства",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: резиновая растягивается непрерывно, адаптивная переключается по брейкпоинтам.",
      "Наоборот: адаптивная использует медиа-запросы, резиновая — проценты.",
      "Нет, у них разные подходы.",
      "Адаптивная предназначена также для мобильных.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_4",
    title: "Что такое медиазапрос (@media) в CSS?",
    options: [
      "Правило для применения стилей при выполнении определённых условий (ширина, устройство)",
      "Специальный селектор, выбирающий только мобильные элементы",
      "Функция для загрузки изображений",
      "Команда для начала анимации",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: @media применяет стили, когда окно отвечает указанным условиям.",
      "Это не селектор, а директива.",
      "Медиазапросы не загружают медиафайлы.",
      "Анимации задаются через @keyframes и transition, а не @media.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_5",
    title: "Какой синтаксис медиазапроса для максимальной ширины 768px?",
    options: [
      "@media (max-width: 768px) { ... }",
      "@media (min-width: 768px) { ... }",
      "@media width=768px { ... }",
      "@media screen 768px { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: max-width определяет стили до указанной ширины включительно.",
      "min-width действует от 768px и выше, не то что нужно.",
      "Неверный синтаксис — требуется max-width.",
      "Правильный синтаксис использует ключевые слова (max-width).",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_6",
    title: "Какие единицы vw и vh используются для чего?",
    options: [
      "vw — 1% от ширины окна, vh — 1% от высоты окна",
      "vw — фиктивная величина, vh — высота в пикселях",
      "vw — пропорция текста, vh — фонового изображения",
      "Обе единицы равны 10px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: 1vw = 1% ширины viewport, 1vh = 1% высоты viewport.",
      "Это не пиксели, а относительные единицы.",
      "Нет такой зависимости между текстом и фоном.",
      "vw и vh не фиксируются в пикселях, а вычисляются динамически.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_7",
    title: "Что означает ширина 100% в резиновом макете?",
    options: [
      "Занять всю доступную ширину родительского контейнера",
      "Занять 100px в любом случае",
      "Задать фиксированную ширину вне зависимости от родителя",
      "Игнорировать родитель и брать ширину экрана",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: 100% = всю ширину родителя, и элемент растягивается вместе с ним.",
      "100% — не означает 100px.",
      "100% не фиксирует размер, а задаёт относительный.",
      "Элемент привязан к родителю, а не напрямую к экрану.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_8",
    title: "Что такое фиксированный (fixed) макет?",
    options: [
      "Макет с абсолютными ширинами (px), не меняющийся при изменении окна",
      "Макет, который изменяется в зависимости от размера экрана",
      "Макет, основанный на единицах vw/vh",
      "Макет с медиазапросами",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: fixed-layout задаёт ширины в пикселях и не реагирует на изменение ширины окна.",
      "Это описание адаптивного или резинового макета.",
      "vw/vh — относительные единицы, а не фиксированные.",
      "Медиа-запросы относятся к адаптивному дизайну.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_9",
    title:
      'Что делает мета-тег <meta name="viewport" content="width=device-width, initial-scale=1.0">?',
    options: [
      "Устанавливает ширину viewport равной ширине устройства и масштаб по умолчанию 1",
      "Блокирует масштабирование страницы",
      "Устанавливает фон страницы по умолчанию",
      "Загружает CSS-файлы автоматически",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: этот тег сообщает браузеру использовать ширину экрана устройства и начальный масштаб 1.",
      "Он не блокирует масштабирование, а задаёт начальный масштаб.",
      "Фон страницы задаётся через CSS, не через viewport.",
      "CSS-файлы подключаются через link, а не через этот мета-тег.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_10",
    title: "Какой пример корректного мета-тега для адаптивного дизайна?",
    options: [
      `<meta name="viewport" content="width=device-width, initial-scale=1">`,
      `<meta name="viewport" content="scale-to-fit=yes">`,
      `<meta name="responsive" content="true">`,
      `<meta http-equiv="X-UA-Compatible" content="IE=edge">`,
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: width=device-width и initial-scale=1 — стандартный вариант.",
      "scale-to-fit не является стандартным атрибутом viewport.",
      'Тег name="responsive" не имеет смысла в HTML.',
      "Это устаревший тег для совместимости с IE.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_11",
    title: "Как сделать изображение резиновым (адаптивным) с помощью CSS?",
    options: [
      "img { width: 100%; height: auto; }",
      "img { width: auto; }",
      "img { max-width: 100px; }",
      "img { height: 100%; width: auto; }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: width:100% растягивает до ширины контейнера, height:auto сохраняет пропорции.",
      "width:auto не делает изображение адаптивным.",
      "max-width:100px задаёт фиксированную максимальную ширину.",
      "height:100% растянет по высоте родителя, но не по ширине.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_12",
    title:
      "Как запретить элементу становиться уже указанной ширины при уменьшении окна?",
    options: [
      "Указать max-width",
      "Указать min-width",
      "Указать width в px",
      "Использовать display: inline-block",
    ],
    correctAnswers: [1],
    descriptions: [
      "Правильно: min-width не позволит элементу сузиться меньше указанного значения.",
      "max-width ограничивает максимальную ширину, а не минимальную.",
      "width в px задаёт фиксированную ширину, но не гарантирует минимальную при адаптивности.",
      "display не решает проблему минимальной ширины.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_13",
    title: "Что такое брейкпоинт (breakpoint) в адаптивном дизайне?",
    options: [
      "Ширина экрана, при которой применяются другие стили через медиазапрос",
      "Размер шрифта, при котором меняется макет",
      "Высота окна браузера, при которой шрифты меняются",
      "Производительность страницы при загрузке",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: breakpoint — точка, где меняются стили для разных экранов.",
      "Брейкпоинты относятся к ширине, а не к размеру шрифта.",
      "Высота окна не считается типичным брейкпоинтом.",
      "Производительность не связана с брейкпоинтами.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_14",
    title: "Что означает условие @media (min-width: 1200px)?",
    options: [
      "Стили внутри будут применяться при ширине экрана 1200px и больше",
      "Стили применяются только при ширине меньше 1200px",
      "Стили применяются всегда, независимо от ширины",
      "Стили применяются при высоте экрана 1200px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: min-width означает «при ширине экрана не менее 1200px».",
      "Это было бы max-width:<1200px, а не min-width.",
      "Нужно, чтобы условие было истинно; всегда не подходит.",
      "min-width относится к ширине, а не к высоте.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_15",
    title: "Что означает условие @media (max-width: 480px)?",
    options: [
      "Стили применяются при ширине экрана 480px и меньше",
      "Стили применяются при ширине экрана 480px и больше",
      "Стили применяются при высоте экрана 480px",
      "Стили никогда не применяются",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: max-width означает «при ширине до 480px включительно».",
      "Это было бы min-width:480px, а не max-width.",
      "max-width относится к ширине, а не к высоте.",
      "При любых условиях до 480px стили будут применяться.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_16",
    title: "Что означает подход mobile-first в медиазапросах?",
    options: [
      "Сначала пишутся стили для мобильных (min-width), затем для больших экранов",
      "Сначала пишутся стили для больших экранов, затем для мобильных",
      "Использование только пиксельных единиц",
      "Игнорирование мобильных устройств",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: mobile-first значит стилям по умолчанию соответствуют мобильные, затем через min-width добавляются стили для планшетов и десктопов.",
      "Это описывает desktop-first, а не mobile-first.",
      "Единицы не определяют подход mobile-first.",
      "Mobile-first как раз фокусируется на мобильных.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_17",
    title: "Что означает desktop-first в медиазапросах?",
    options: [
      "Сначала стили для больших экранов (max-width), затем для мобильных",
      "Сначала стили для мобильных, потом для больших экранов",
      "Использование только относительных единиц",
      "Полное отсутствие медиазапросов",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: desktop-first использует max-width для снижения к меньшим устройствам.",
      "Это подход mobile-first, а не desktop-first.",
      "Единицы не определяют desktop-first.",
      "desktop-first может содержать медиазапросы, просто в другом порядке.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_18",
    title:
      "Какой подход используют, чтобы контент плавно перекомпоновывался на разных экранах?",
    options: [
      "Резиновая + адаптивная вёрстка",
      "Только фиксированная вёрстка",
      "Только абсолютное позиционирование",
      "Использование таблиц внутри CSS",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: сочетание резинового (%) макета с медиазапросами обеспечивает плавный переход и подстройку.",
      "Фиксированная не адаптируется.",
      "Absolute ломает адаптивность, так как фиксирует позиции.",
      "Таблицы не применяются для макетов, а для табличных данных.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_19",
    title: "Что означает свойство box-sizing: border-box в адаптивной вёрстке?",
    options: [
      "Границы и отступы включаются в width/height, упрощая расчёт адаптивных размеров",
      "Границы игнорируются при расчёте размеров",
      "Элемент становится фиксированного размера",
      "Отключает адаптивность",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: border-box включает padding и border в общую ширину, что упрощает макет при адаптивном изменении размеров.",
      "Наоборот: учитывает padding и border вместо игнорирования.",
      "border-box не фиксирует размер, а меняет модель расчёта.",
      "box-sizing не отключает адаптивность.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_20",
    title:
      "Как сделать элемент, чтобы он занимал не более 100% родителя, но не растягивался дальше?",
    options: [
      "max-width: 100%;",
      "width: 100vw;",
      "min-width: 100%;",
      "height: 100%",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: max-width:100% ограничивает ширину родителя и не даёт выйти за пределы.",
      "100vw — это 100% ширины окна, а не родителя.",
      "min-width задаёт минимальную ширину, а не ограничение сверху.",
      "height относится к высоте, а не ширине.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_21",
    title:
      "Какой медиазапрос применит стили только для экранов шириной от 600px до 1200px?",
    options: [
      "@media (min-width: 600px) and (max-width: 1200px) { ... }",
      "@media (max-width: 600px) or (min-width: 1200px) { ... }",
      "@media (width: 600px, 1200px) { ... }",
      "@media screen 600px-1200px { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: и min-width, и max-width в одном условии задают диапазон.",
      "OR объединяет неподходящие условия, верный синтаксис – AND.",
      "Неверный синтаксис, нужно явно указывать min- и max-width.",
      "Неверный синтаксис, нужно использовать ключевые слова min-width и max-width.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_22",
    title:
      "Какой медиазапрос отвечает за устройства с минимальной шириной экрана 768px?",
    options: [
      "@media (min-width: 768px) { ... }",
      "@media (max-width: 768px) { ... }",
      "@media (width >= 768px) { ... }",
      "@media only (device-width: 768px) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: min-width:768px – стили применяются при ширине >=768px.",
      "max-width означает ширина <=768px, не то, что нужно.",
      "Неверный синтаксис, нужно использовать min-width.",
      "device-width жестко привязывается к физическому устройству, а не окну.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_23",
    title:
      "Какой медиазапрос применяет стили только при ширине экрана меньше 480px?",
    options: [
      "@media (max-width: 479px) { ... }",
      "@media (max-width: 480px) { ... }",
      "@media (min-width: 480px) { ... }",
      "@media (width < 480px) { ... }",
    ],
    correctAnswers: [1],
    descriptions: [
      "max-width:479px означает до 479px, но условие меньше 480px включительно – max-width:480px.",
      "Правильно: max-width:480px включает все экраны до и включая 480px.",
      "min-width:480px означает >=480px, а нужно <480px.",
      "Неправильный синтаксис, нужно использовать min- или max-width.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_24",
    title: "Как задать стиль для ориентации экрана портрет (portrait)?",
    options: [
      "@media (orientation: portrait) { ... }",
      "@media (screen-mode: portrait) { ... }",
      "@media (aspect-ratio: portrait) { ... }",
      "@media (direction: portrait) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: orientation:portrait применяется к портретной ориентации.",
      "screen-mode — неверный параметр.",
      "aspect-ratio — отношение сторон, не ориентация.",
      "direction — управление текстом, не ориентация экрана.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_25",
    title:
      "Какой медиазапрос определяет устройства с высоким разрешением (Retina)?",
    options: [
      "@media (min-resolution: 2dppx) { ... }",
      "@media (resolution >= 2) { ... }",
      "@media (high-res: true) { ... }",
      "@media (device-pixel-ratio: 2) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: min-resolution:2dppx означает плотность >=2 device pixels per CSS pixel.",
      "Неверный синтаксис, нужно указать единицы (dppx или dpi).",
      "high-res не является валидным медиа-фильтром.",
      "device-pixel-ratio не стандартизирован в официальной спецификации.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_26",
    title: "Какой медиазапрос применяется для печатающих устройств?",
    options: [
      "@media print { ... }",
      "@media (device: print) { ... }",
      "@media show-print { ... }",
      "@media (media-type: print) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: @media print применяется к печати.",
      "device:print не является корректным синтаксисом.",
      "show-print не валидно.",
      "Нужно просто print без дополнительных условий.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_27",
    title:
      "Как объединить медиа-условия «минимальная ширина 500px» и «ориентация ландшафт»?",
    options: [
      "@media (min-width: 500px) and (orientation: landscape) { ... }",
      "@media both (min-width: 500px) and (orientation: landscape) { ... }",
      "@media only screen and (min-width: 500px), (orientation: landscape) { ... }",
      "@media (min-width: 500px) or (orientation: landscape) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: AND объединяет оба условия одновременно.",
      "both не обязателен, просто AND.",
      "Запятая разделяет независимые условия, а не объединяет.",
      "OR означает либо одно из условий, тест задан на оба сразу.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_28",
    title:
      "Какой медиазапрос применит стили только для экранов с минимальной высотой 800px?",
    options: [
      "@media (min-height: 800px) { ... }",
      "@media (height >= 800px) { ... }",
      "@media (device-height: 800px) { ... }",
      "@media (max-height: 800px) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: min-height:800px действует при высоте окна >=800px.",
      "Неправильный синтаксис, нужно min-height.",
      "device-height относится к физическому устройству, а не к viewport.",
      "max-height означает <=800px, а не >=.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_29",
    title: "Как задать медиа-условие для экранов с соотношением сторон 4:3?",
    options: [
      "@media (aspect-ratio: 4/3) { ... }",
      "@media (ratio: 4-3) { ... }",
      "@media (screen-ratio: 4by3) { ... }",
      "@media (4:3) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: aspect-ratio:4/3 задаёт именно соотношение ширины к высоте.",
      "Неправильный синтаксис, нужно aspect-ratio.",
      "screen-ratio не поддерживается.",
      "Нужно указывать ключевое слово aspect-ratio.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_30",
    title:
      "Как указать стили для устройств с минимальной шириной 320px и максимальной 640px?",
    options: [
      "@media (min-width: 320px) and (max-width: 640px) { ... }",
      "@media (width: 320px-640px) { ... }",
      "@media (320px <= width <= 640px) { ... }",
      "@media (only width 320px to 640px) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: min-width и max-width вместе задают диапазон.",
      "Неверный синтаксис.",
      "Неверный синтаксис, нужно разделять условия AND.",
      "Неправильный синтаксис, нужно min-width/max-width.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_31",
    title:
      "Какой медиазапрос выберет стили для устройств с минимальной разрешающей способностью 300dpi?",
    options: [
      "@media (min-resolution: 300dpi) { ... }",
      "@media (resolution >= 300dpi) { ... }",
      "@media (dpi: 300) { ... }",
      "@media (high-dpi: 300) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: min-resolution:300dpi задаёт диапазон плотности пикселей.",
      "Неверный синтаксис, нужно min-resolution.",
      "dpi без ключевого слова resolution не сработает.",
      "high-dpi не является стандартным.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_32",
    title: "Что означает директива @media only screen and (max-width: 1024px)?",
    options: [
      "Применяет стили только для экранов (screen) шириной до 1024px",
      "Применяет стили для всех устройств шириной до 1024px",
      "Применяет стили только для печати до 1024px",
      "Игнорирует все устройства",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: only screen ограничивает тип устройства экраном, а max-width до 1024px.",
      "Без only подходил бы любой тип, но здесь указан screen.",
      "print не указан, только screen.",
      "Условие охватывает экраны с шириной до 1024px.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_33",
    title:
      "Какой медиазапрос применит стили для печатных и скрин устройств с шириной до 800px?",
    options: [
      "@media screen and (max-width: 800px), print and (max-width: 800px) { ... }",
      "@media all and (max-width: 800px) { ... }",
      "@media (max-width: 800px) { ... }",
      "Все варианты верны",
    ],
    correctAnswers: [3],
    descriptions: [
      "Правильно: можно перечислить оба типа через запятую, либо использовать all.",
      "all охватывает screen и print, условие max-width действует для всех.",
      "Без указания типа default – all, поэтому тоже сработает.",
      "Все перечисленные варианты корректно применяют стили до 800px.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_34",
    title:
      "Как задать медиазапрос, применяющий стили, когда ориентация экрана - ландшафт и ширина минимум 1024px?",
    options: [
      "@media (orientation: landscape) and (min-width: 1024px) { ... }",
      "@media (landscape and min-width: 1024px) { ... }",
      "@media (orientation-landscape: true) and (width>=1024px) { ... }",
      "@media only landscape and width:1024px { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: orientation:landscape и min-width объединяются через AND.",
      "landscape без ключевого слова orientation не сработает.",
      "Неверный синтаксис, нужно orientation: landscape.",
      "Неверный синтаксис, нужно min-width и orientation.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_35",
    title:
      "Какой медиазапрос выберет стили для экранов с максимальной высотой 600px?",
    options: [
      "@media (max-height: 600px) { ... }",
      "@media (min-height: 600px) { ... }",
      "@media (height <= 600px) { ... }",
      "@media only height:600px { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: max-height:600px выбирает экраны до и включая 600px по высоте.",
      "min-height означает >=600px, а не <=.",
      "Неверный синтаксис, нужно max-height.",
      "Неверный синтаксис, нужно ключевое слово max-height.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_36",
    title:
      "Какой медиазапрос применит стили только для экранов с минимальным соотношением сторон 16:9?",
    options: [
      "@media (min-aspect-ratio: 16/9) { ... }",
      "@media (aspect >= 16/9) { ... }",
      "@media (min-ratio: 16:9) { ... }",
      "@media (ratio: 16by9) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: min-aspect-ratio:16/9 задаёт минимальное соотношение ширины к высоте.",
      "Неверный синтаксис, нужно min-aspect-ratio.",
      "min-ratio не является валидным.",
      "ratio не поддерживается.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_37",
    title:
      "Какой медиазапрос укажет стили для устройств, поддерживающих hover?",
    options: [
      "@media (hover: hover) { ... }",
      "@media (can-hover: true) { ... }",
      "@media (supports-hover) { ... }",
      "@media (device-hover: yes) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: hover: hover определяет устройства, где курсор может наводиться.",
      "can-hover не является стандартным медиа-параметром.",
      "supports-hover не является валидным.",
      "device-hover не является валидным.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_38",
    title:
      "Как задать стили для устройств, у которых нет возможности hover (например, тачскрин)?",
    options: [
      "@media (hover: none) { ... }",
      "@media (no-hover) { ... }",
      "@media (cannot-hover) { ... }",
      "@media (touch-device) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: hover:none указывает устройства без hover.",
      "no-hover не является валидным.",
      "cannot-hover не поддерживается.",
      "touch-device не является медиа-фильтром.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_39",
    title:
      "Какой медиазапрос определяет устройства с указателем fine (точность устройства высокая)?",
    options: [
      "@media (pointer: fine) { ... }",
      "@media (hover-zone: fine) { ... }",
      "@media (pointer-precision: fine) { ... }",
      "@media (accurate-pointer: yes) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: pointer:fine указывает устройства с точным указателем (мышь).",
      "hover-zone не является поддерживаемым параметром.",
      "pointer-precision не поддерживается.",
      "accurate-pointer не является медиа-фильтром.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_40",
    title:
      "Какой медиазапрос применит стили для печатающего устройства при цветной печати?",
    options: [
      "@media print and (color) { ... }",
      "@media print and (monochrome) { ... }",
      "@media (print-color: true) { ... }",
      "@media screen and (color) { ... }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: print and (color) применяет стили только при цветном выводе на печать.",
      "monochrome – для ч/б печати, а не для цветной.",
      "print-color не является стандартным медиа-параметром.",
      "screen применяется к экранам, а не к печати.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_41",
    title: "Что означает единица измерения % при задании ширины элемента?",
    options: [
      "Процент от ширины родительского элемента",
      "Процент от высоты окна браузера",
      "Процент от ширины экрана",
      "Процент от высоты родительского элемента",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: 100% ширины означает полную ширину родителя.",
      "% по высоте относится к родителю только при высоте, но не в этом контексте.",
      "% не привязана напрямую к ширине экрана, а к родителю.",
      "% по высоте зависит от высоты родителя, а не при ширине.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_42",
    title: "Что делает единица vw при задании размера шрифта?",
    options: [
      "1vw = 1% ширины окна браузера",
      "1vw = 1% высоты окна браузера",
      "1vw = 1% ширины родителя",
      "1vw = 1px",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: 1vw означает 1% от текущей ширины viewport.",
      "vh применяется к высоте, а не vw.",
      "vw всегда связывает с viewport, а не с родителем.",
      "1vw динамическая величина, а не фиксированный 1px.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_43",
    title:
      "Как сочетать относительные и абсолютные единицы для отзывчивого размера шрифта?",
    options: [
      "font-size: calc(1rem + 1vw);",
      "font-size: 1rem 1vw;",
      "font-size: clamp(1rem 2rem);",
      "font-size: percent(1rem,1vw);",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: calc позволяет комбинировать rem и vw вместе.",
      "Неверный синтаксис, нельзя просто перечислять.",
      "clamp требует три параметра (min, preferred, max).",
      "percent не является функцией CSS.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_44",
    title: "Что делает функция clamp() при создании адаптивного размера?",
    options: [
      "Ограничивает значение между минимальным и максимальным",
      "Закрепляет значение только в процентах",
      "Устанавливает только минимальное значение",
      "Устанавливает только максимальное значение",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: clamp(min, preferred, max) возвращает значение в заданных границах.",
      "clamp работает с единицами, а не только с процентами.",
      "clamp задаёт оба ограничения: минимум и максимум.",
      "clamp задаёт минимум и максимум, а не только максимум.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_45",
    title: "Какой синтаксис функции clamp() корректен для шрифта?",
    options: [
      "font-size: clamp(1rem, 2.5vw, 2rem);",
      "font-size: clamp(1rem 2.5vw 2rem);",
      "font-size: clamp(1rem; 2.5vw; 2rem);",
      "font-size: clamp(1 rem, 2.5 vw, 2 rem);",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: clamp(минимум, предпочтительное, максимум) через запятые.",
      "Нужно разделять аргументы запятыми, а не пробелами.",
      "Синтаксис clamp разделяется запятыми, а не точками с запятой.",
      "Не должно быть пробелов в аргументах между цифрой и единицей.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_46",
    title:
      "Как задать отзывчивый padding верхнего уровня с учётом ширины экрана?",
    options: [
      "padding: 2% 1rem;",
      "padding: 2vh 1rem;",
      "padding: 2px 1rem;",
      "padding: 2rem 1vw;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: 2% высчитываются от ширины родителя по умолчанию.",
      "vh высчитывается от высоты окна, не всегда ожидаемого результата.",
      "px фиксированы, не отзывчивы.",
      "1vw может быть слишком маленьким для отступа второстепенных частей.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_47",
    title:
      "Какой способ задаёт отзывчивую высоту для секции, чтобы она занимала минимум 50vh?",
    options: [
      "min-height: 50vh;",
      "height: 50%;",
      "min-height: 50%;",
      "height: 50vw;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: min-height:50vh гарантирует минимум половину высоты окна.",
      "height:50% зависит от родителя, не окна.",
      "min-height:50% зависит от родительской высоты, а не viewport.",
      "50vw относится к ширине viewport, а не высоте.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_48",
    title:
      "Как сделать отзывчивую картинку, чтобы она никогда не выходила за пределы контейнера?",
    options: [
      "img { max-width: 100%; height: auto; }",
      "img { width: auto; }",
      "img { width: 100px; }",
      "img { max-height: 100%; }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: max-width:100% ограничит ширину до контейнера, height:auto сохранит пропорции.",
      "width:auto не гарантирует, что картинка не выйдет за пределы.",
      "100px фиксированная ширина, не отзывчивая.",
      "max-height:100% ограничивает высоту, а не ширину.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_49",
    title: "Что такое object-fit: cover при работе с изображениями?",
    options: [
      "Изображение обрезается, заполняя контейнер полностью, сохраняя пропорции",
      "Изображение сжимается, чтобы поместиться без обрезки",
      "Изображение повторяется по контейнеру",
      "Изображение растягивается и теряет пропорции",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: cover масштабирует и обрезает, чтобы заполнить контейнер.",
      "contain меняет размер без обрезки, а не cover.",
      "repeat – повторение, а не object-fit.",
      "object-fit:fill растягивает, а cover – нет.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_50",
    title: "Как использовать vw для установки отступа между элементами?",
    options: ["gap: 2vw;", "gap: 2px;", "gap: 2%;", "gap: 2vh;"],
    correctAnswers: [0],
    descriptions: [
      "Правильно: gap:2vw даёт отступ, основанный на ширине viewport.",
      "px не отзывчивы.",
      "% зависит от размера контейнера, а не viewport.",
      "vh зависит от высоты viewport, а не ширины.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_51",
    title:
      "Как задать отзывчивый max-width для контейнера, максимизируя до 1200px?",
    options: [
      "max-width: clamp(320px, 80%, 1200px);",
      "max-width: 80vw 1200px;",
      "max-width: 1200px 80%;",
      "max-width: min(80%, 1200px);",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: clamp задаёт минимум 320px, 80% как предпочтительное, максимум 1200px.",
      "Неверный синтаксис, нужно использовать функцию.",
      "Порядок аргументов неверный.",
      "min вернёт только меньшее значение, но без нижнего ограничения.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_52",
    title:
      "Как задать отзывчивый margin слева, чтобы он был всегда 5% ширины родителя?",
    options: [
      "margin-left: 5%;",
      "margin-left: 5vw;",
      "margin-left: 5px;",
      "margin-left: 5vh;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: 5% от ширины родителя.",
      "5vw — 5% от ширины viewport, а не родителя.",
      "5px — фиксированный отступ.",
      "5vh — 5% от высоты viewport.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_53",
    title: "Как создать отзывчивую сетку без фреймворков, используя CSS Grid?",
    options: [
      "grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));",
      "grid-columns: repeat(auto-fit, 200px);",
      "grid-area: auto-fit minmax(200px);",
      "grid-template: auto 200px 1fr;",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: auto-fit и minmax позволяют ячейкам адаптироваться.",
      "grid-columns не является валидным свойством.",
      "grid-area — для позиционирования, а не для шаблона.",
      "Неверный синтаксис для шаблона.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_54",
    title:
      "Как задать отзывчивую ширину для элемента, чтобы она занимала минимум 300px и максимум 80% родителя?",
    options: [
      "width: minmax(300px, 80%);",
      "width: clamp(300px, 80%, 100%);",
      "width: clamp(300px, 80%, 80%);",
      "width: max(300px, 80%);",
    ],
    correctAnswers: [2],
    descriptions: [
      "minmax работает только внутри Grid.",
      "clamp(min, preferred, max): здесь preferred и max оба 80%, ширина не ограничена снизу 300px.",
      "Правильно: clamp(300px, 80%, 80%) гарантирует минимум 300px, максимум 80%.",
      "max выберет только большее значение без верхнего ограничения.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_55",
    title:
      "Какой приём позволит сделать отзывчивый колонтитул (footer) с минимальной высотой 100px и адаптацией содержимого?",
    options: [
      "footer { min-height: 100px; padding: 2vh 2vw; }",
      "footer { height: 100px; }",
      "footer { height: auto; }",
      "footer { max-height: 100px; }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: min-height позволяет элементу быть не меньше 100px, а padding задаёт отзывчивый отступ.",
      "height:100px фиксирует высоту, не отзывчивую.",
      "height:auto не гарантирует минимальную высоту.",
      "max-height ограничивает сверху, а не задаёт минимум.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_56",
    title: "Что такое fluid typography?",
    options: [
      "Адаптивный размер текста с помощью относительных единиц и функций clamp()/calc()",
      "Фиксированный размер текста в пикселях",
      "Текст, который меняется цветом при изменении ширины экрана",
      "Текст, который повторяется как фон",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: fluid typography означает плавное изменение размера шрифта.",
      "Пиксели — фиксированные, а не адаптивные.",
      "Цвет не имеет отношения к fluid typography.",
      "Фоновые эффекты не связаны с responsive typography.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_57",
    title:
      "Как задать fluid typography, чтобы заголовок был минимум 24px, максимум 48px и предпочёл 5vw?",
    options: [
      "h1 { font-size: clamp(24px, 5vw, 48px); }",
      "h1 { font-size: clamp(24, 5vw, 48); }",
      "h1 { font-size: clamp(px(24), 5vw, px(48)); }",
      "h1 { font-size: minmax(24px, 48px, 5vw); }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: clamp(minimum, preferred, maximum) с пиксельными значениями и vw.",
      "Нужно указывать единицы у всех параметров.",
      "Неверный синтаксис, нужно просто числа и единицы.",
      "minmax работает только в Grid.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_58",
    title:
      "Какой подход позволяет сделать отзывчивый контейнер с максимальной шириной 1200px и боковыми отступами по 1rem?",
    options: [
      ".container { width: 100%; max-width: 1200px; padding: 0 1rem; margin: 0 auto; }",
      ".container { width: 1200px; padding: 0 1rem; }",
      ".container { width: auto; margin: 1rem; }",
      ".container { max-width: 100%; padding: 1rem; }",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: width:100% растягивает до родителя, max-width ограничивает, padding задаёт отступы, а margin auto центрирует.",
      "width:1200px фиксирует ширину, не отзывчивую.",
      "margin:1rem не центрирует контейнер.",
      "max-width:100% не ограничивает до 1200px.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_59",
    title:
      "Какой CSS-селектор будет применять стили к элементам внутри контейнера шириной менее 500px?",
    options: [
      "@media (max-width: 500px) .container > * { ... }",
      "@media (max-width: 500px) { .container > * { ... } }",
      ".container (max-width: 500px) > * { ... }",
      "@media container (max-width: 500px) { ... }",
    ],
    correctAnswers: [1],
    descriptions: [
      "Правильно: нужно обернуть селектор в блок @media.",
      "Неправильный синтаксис – селектор должен быть внутри фигурных скобок @media.",
      "Неверный синтаксис, медиа-запросы нельзя писать до селектора без фигурных скобок.",
      "Не существует медиа-запросов контейнера, только по viewport.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
  {
    id: "css_responsive_60",
    title:
      "Какой способ позволяет задать адаптивные отступы внутри контейнера через CSS-функцию?",
    options: [
      "padding: clamp(1rem, 2vw, 2rem);",
      "padding: min(1rem, 2vw, 2rem);",
      "padding: max(1rem, 2vw, 2rem);",
      "padding: percent(1rem, 2vw, 2rem);",
    ],
    correctAnswers: [0],
    descriptions: [
      "Правильно: clamp задаёт отступ между 1rem и 2rem по шаблону 2vw.",
      "min() принимает только два аргумента.",
      "max() принимает только два аргумента, а не три.",
      "percent() не является функцией CSS.",
    ],
    moduleId: "css",
    sectionTitle: "Адаптивный дизайн",
    topic: "css_responsive",
  },
];
