export const js_cycles_test = {
  id: 504,
  name: "Циклы в JavaScript",
  category: "JavaScript",
  ques: [
    {
      id: 1,
      name: "Что делает цикл while?",
      variants: [
        "Повторяет действия, пока условие истинно",
        "Выполняет действия только один раз",
        "Прерывает выполнение программы",
      ],
      correct: [0],
    },
    {
      id: 2,
      name: "Что произойдет, если условие while всегда true и переменная не меняется?",
      variants: [
        "Выполнится один раз",
        "Будет бесконечный цикл",
        "Произойдет ошибка синтаксиса",
      ],
      correct: [1],
    },
    {
      id: 3,
      name: "Что выведет код?\nlet count = 1;\nwhile (count <= 3) {\n  console.log(count);\n  count++;\n}",
      variants: ["1 2 3", "0 1 2", "1 2 3 4"],
      correct: [0],
    },
    {
      id: 4,
      name: "Когда удобно использовать while?",
      variants: [
        "Когда заранее известно количество повторений",
        "Когда неизвестно, сколько раз повторять",
        "Когда нужно выйти из функции",
      ],
      correct: [1],
    },
    {
      id: 5,
      name: "Что обязательно должно быть внутри цикла while?",
      variants: [
        "Обновление переменной, участвующей в условии",
        "Консольный вывод",
        "Оператор break",
      ],
      correct: [0],
    },
    {
      id: 6,
      name: "Что выведет этот код?\nlet seconds = 3;\nwhile (seconds > 0) {\n  console.log(seconds);\n  seconds--;\n}",
      variants: ["3 2 1", "1 2 3", "3 2 1 0"],
      correct: [0],
    },
    {
      id: 7,
      name: "Чем отличается do...while от while?",
      variants: [
        "do...while выполняет тело хотя бы один раз",
        "do...while всегда выполняется бесконечно",
        "Нет отличий",
      ],
      correct: [0],
    },
    {
      id: 8,
      name: "Что выведет код?\nlet num = 5;\ndo {\n  console.log('Привет');\n} while (num < 2);",
      variants: [
        "Выведет 'Привет' один раз",
        "Не выведет ничего",
        "Выведет 'Привет' бесконечно",
      ],
      correct: [0],
    },
    {
      id: 9,
      name: "Когда удобно использовать do...while?",
      variants: [
        "Когда нужно проверить условие до выполнения тела",
        "Когда действие должно быть выполнено хотя бы один раз",
        "Когда цикл не нужен",
      ],
      correct: [1],
    },
    {
      id: 10,
      name: "Что делает цикл for?",
      variants: [
        "Повторяет действия с переменной-счётчиком",
        "Выполняет действие только один раз",
        "Прерывает выполнение скрипта",
      ],
      correct: [0],
    },
    {
      id: 11,
      name: "Какой результат выведет код?\nfor (let i = 1; i <= 3; i++) {\n  console.log(i);\n}",
      variants: ["1 2 3", "0 1 2", "1 2 3 4"],
      correct: [0],
    },
    {
      id: 12,
      name: "Для чего обычно используется переменная i в цикле for?",
      variants: [
        "Для хранения суммы",
        "Для хранения индекса (счётчика итераций)",
        "Для хранения условий",
      ],
      correct: [1],
    },
    {
      id: 13,
      name: "Что произойдет, если убрать i++ из цикла for?",
      variants: [
        "Цикл может стать бесконечным",
        "Цикл выполнится один раз",
        "Будет ошибка компиляции",
      ],
      correct: [0],
    },
    {
      id: 14,
      name: "Как вывести только чётные числа от 2 до 10 с помощью for?",
      variants: [
        "for (let i = 2; i <= 10; i += 2)",
        "for (let i = 1; i <= 10; i++)",
        "for (let i = 10; i >= 2; i--)",
      ],
      correct: [0],
    },
    {
      id: 15,
      name: "Что делает оператор break внутри цикла?",
      variants: [
        "Полностью останавливает цикл",
        "Пропускает итерацию",
        "Вызывает ошибку",
      ],
      correct: [0],
    },
    {
      id: 16,
      name: "Что выведет этот код?\nfor (let i = 1; i <= 10; i++) {\n  if (i === 3) break;\n  console.log(i);\n}",
      variants: ["1 2", "1 2 3", "1 2 3 4 5 6 7 8 9 10"],
      correct: [0],
    },
    {
      id: 17,
      name: "Для чего используют break в цикле?",
      variants: [
        "Для досрочного выхода из цикла",
        "Для увеличения счётчика",
        "Для пропуска итерации",
      ],
      correct: [0],
    },
    {
      id: 18,
      name: "Что делает оператор continue?",
      variants: [
        "Прерывает текущую итерацию и переходит к следующей",
        "Полностью завершает цикл",
        "Всегда вызывает ошибку",
      ],
      correct: [0],
    },
    {
      id: 19,
      name: "Что выведет код?\nfor (let i = 1; i <= 3; i++) {\n  if (i === 2) continue;\n  console.log(i);\n}",
      variants: ["1 3", "1 2 3", "2 3"],
      correct: [0],
    },
    {
      id: 20,
      name: "Когда использовать continue?",
      variants: [
        "Когда нужно пропустить отдельную итерацию",
        "Когда нужно полностью завершить цикл",
        "Когда цикл не нужен",
      ],
      correct: [0],
    },
    {
      id: 21,
      name: "Что такое вложенные циклы?",
      variants: [
        "Цикл, внутри которого есть ещё один цикл",
        "Два независимых цикла",
        "Цикл, выполняемый только при ошибке",
      ],
      correct: [0],
    },
    {
      id: 22,
      name: "Что выведет код?\nfor (let row = 1; row <= 2; row++) {\n  for (let col = 1; col <= 2; col++) {\n    console.log(row, col);\n  }\n}",
      variants: ["1 1, 1 2, 2 1, 2 2", "1 2, 2 1", "2 1, 2 2"],
      correct: [0],
    },
    {
      id: 23,
      name: "Для чего используют вложенные циклы?",
      variants: [
        "Для работы с многомерными структурами или таблицами",
        "Для увеличения скорости работы",
        "Для выхода из функции",
      ],
      correct: [0],
    },
    {
      id: 24,
      name: "Что важно помнить при использовании вложенных циклов?",
      variants: [
        "У каждого цикла должны быть свои переменные-счётчики",
        "Все циклы должны использовать одну переменную",
        "Вложенные циклы всегда медленнее",
      ],
      correct: [0],
    },
    {
      id: 25,
      name: "Что произойдет при вызове break во внутреннем цикле вложенных циклов?",
      variants: [
        "Выйдет только из внутреннего цикла",
        "Выйдет из всех циклов сразу",
        "Ничего не произойдет",
      ],
      correct: [0],
    },
    {
      id: 26,
      name: "Что произойдет при вызове continue во внутреннем цикле?",
      variants: [
        "Пропустит только текущую итерацию внутреннего цикла",
        "Пропустит итерацию внешнего цикла",
        "Полностью завершит оба цикла",
      ],
      correct: [0],
    },
    {
      id: 27,
      name: "Можно ли использовать break и continue в цикле while?",
      variants: ["Да, можно", "Нет, нельзя", "Только break"],
      correct: [0],
    },
    {
      id: 28,
      name: "Что произойдет, если забыть увеличить счётчик в цикле for или while?",
      variants: [
        "Цикл может стать бесконечным",
        "Цикл выполнится один раз",
        "Будет ошибка синтаксиса",
      ],
      correct: [0],
    },
    {
      id: 29,
      name: "Для чего удобно использовать цикл for?",
      variants: [
        "Когда известно точное количество повторений",
        "Когда нужно проверить одно условие",
        "Когда нужен ввод пользователя",
      ],
      correct: [0],
    },
    {
      id: 30,
      name: "Можно ли использовать continue без break в цикле?",
      variants: [
        "Да, можно",
        "Нет, обязательно вместе",
        "Только внутри switch",
      ],
      correct: [0],
    },
  ],
};
