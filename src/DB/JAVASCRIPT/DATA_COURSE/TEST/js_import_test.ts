export const js_import_test = {
  id: 516,
  name: "Модули JavaScript и структура проекта",
  category: "JavaScript",
  ques: [
    {
      id: 1,
      name: "Что такое модуль в JavaScript?",
      variants: [
        "Отдельный файл с частью кода",
        "CSS-файл для стилей",
        "Объект внутри HTML",
      ],
      correct: [0],
    },
    {
      id: 2,
      name: "Для чего используются модули?",
      variants: [
        "Для разделения и переиспользования кода",
        "Для анимации элементов",
        "Только для работы с сервером",
      ],
      correct: [0],
    },
    {
      id: 3,
      name: "Что делает ключевое слово export?",
      variants: [
        "Делает переменные и функции доступными вне файла",
        "Импортирует код из другого файла",
        "Создает новый HTML-элемент",
      ],
      correct: [0],
    },
    {
      id: 4,
      name: "Сколько export default может быть в одном файле?",
      variants: ["Один", "Сколько угодно", "Не более трёх"],
      correct: [0],
    },
    {
      id: 5,
      name: "Как импортировать только один экспорт по умолчанию?",
      variants: [
        "import myFunc from './module.js'",
        "import { myFunc } from './module.js'",
        "import * as myFunc from './module.js'",
      ],
      correct: [0],
    },
    {
      id: 6,
      name: "Как импортировать сразу несколько переменных из модуля?",
      variants: [
        "import { a, b } from './module.js'",
        "import * as a, b from './module.js'",
        "import default from './module.js'",
      ],
      correct: [0],
    },
    {
      id: 7,
      name: "Как импортировать все экспортируемое как объект?",
      variants: [
        "import * as obj from './module.js'",
        "import obj from './module.js'",
        "import { * } from './module.js'",
      ],
      correct: [0],
    },
    {
      id: 8,
      name: "Что обязательно писать в пути при импорте модуля в браузере?",
      variants: ["Расширение .js", "Расширение .json", "Порт сервера"],
      correct: [0],
    },
    {
      id: 9,
      name: "Где можно использовать import/export?",
      variants: [
        "Только на верхнем уровне файла",
        "Внутри функций",
        "Внутри условий",
      ],
      correct: [0],
    },
    {
      id: 10,
      name: "Какой атрибут нужен для модульного скрипта в HTML?",
      variants: ['type="module"', 'module="true"', "async"],
      correct: [0],
    },
    {
      id: 11,
      name: 'Что произойдет, если подключить модуль без type="module"?',
      variants: [
        "Браузер выдаст ошибку",
        "Скрипт выполнится как обычно",
        "Переменные будут видны глобально",
      ],
      correct: [0],
    },
    {
      id: 12,
      name: "Чем отличается модульный скрипт от обычного?",
      variants: [
        "Изолирует переменные и разрешает import/export",
        "Всегда запускается синхронно",
        "Может работать только на сервере",
      ],
      correct: [0],
    },
    {
      id: 13,
      name: "Модули в браузере загружаются...",
      variants: [
        "Асинхронно (как defer)",
        "Только после загрузки страницы",
        "Вручную с помощью функции run()",
      ],
      correct: [0],
    },
    {
      id: 14,
      name: "Видны ли переменные из модуля в глобальном window?",
      variants: [
        "Нет, у модуля своя область видимости",
        "Да, если явно объявить через var",
        "Да, всегда",
      ],
      correct: [0],
    },
    {
      id: 15,
      name: "Можно ли импортировать модуль прямо в <script> внутри HTML?",
      variants: [
        'Да, если указать type="module"',
        "Нет, только из файла",
        "Только с атрибутом defer",
      ],
      correct: [0],
    },
    {
      id: 16,
      name: "Зачем структурировать проект на модули?",
      variants: [
        "Чтобы код был понятным и поддерживаемым",
        "Чтобы использовать только старый синтаксис",
        "Чтобы убрать все функции из проекта",
      ],
      correct: [0],
    },
    {
      id: 17,
      name: "Какой принцип модульности правильный?",
      variants: [
        "Один модуль — одна задача",
        "Один модуль — весь проект",
        "Модули нельзя импортировать друг в друга",
      ],
      correct: [0],
    },
    {
      id: 18,
      name: "Где обычно хранят вспомогательные функции?",
      variants: [
        "В папке utils или modules",
        "В папке images",
        "В файле index.html",
      ],
      correct: [0],
    },
    {
      id: 19,
      name: "Что НЕ стоит делать в main.js в крупном проекте?",
      variants: [
        "Хранить много бизнес-логики",
        "Импортировать другие модули",
        "Экспортировать функции",
      ],
      correct: [0],
    },
    {
      id: 20,
      name: "Что дает модульная структура?",
      variants: [
        "Масштабируемость и удобство работы в команде",
        "Уменьшение размера изображений",
        "Обеспечивает работу только в Node.js",
      ],
      correct: [0],
    },
  ],
};
