export const js_map_set_test = {
  id: 519,
  name: "Set и Map в JavaScript",
  category: "JavaScript",
  ques: [
    {
      id: 1,
      name: "Что такое Set в JavaScript?",
      variants: [
        "Коллекция уникальных значений",
        "Ассоциативный массив",
        "Массив с дубликатами",
      ],
      correct: [0],
    },
    {
      id: 2,
      name: "Что происходит при добавлении дубликата в Set?",
      variants: [
        "Дубликат не добавится",
        "Set выдаст ошибку",
        "Дубликат заменит первое значение",
      ],
      correct: [0],
    },
    {
      id: 3,
      name: "Как создать Set с начальными значениями?",
      variants: ["new Set([1, 2, 3])", "Set(1, 2, 3)", "set.add([1,2,3])"],
      correct: [0],
    },
    {
      id: 4,
      name: "Что выведет: [...new Set([1, 2, 2, 3, 4, 4, 5])]",
      variants: ["[1, 2, 3, 4, 5]", "[1, 2, 2, 3, 4, 4, 5]", "[5, 4, 3, 2, 1]"],
      correct: [0],
    },
    {
      id: 5,
      name: "Что произойдет если в Set добавить два разных объекта с одинаковыми свойствами?",
      variants: [
        "Оба будут добавлены, так как это разные объекты",
        "Добавится только первый",
        "Set выдаст ошибку",
      ],
      correct: [0],
    },
    {
      id: 6,
      name: "Какой метод добавляет элемент в Set?",
      variants: ["add", "push", "insert"],
      correct: [0],
    },
    {
      id: 7,
      name: "Какой метод удаляет элемент из Set?",
      variants: ["delete", "remove", "pop"],
      correct: [0],
    },
    {
      id: 8,
      name: "Как узнать, есть ли элемент в Set?",
      variants: ["has", "find", "includes"],
      correct: [0],
    },
    {
      id: 9,
      name: "Что делает set.clear()?",
      variants: [
        "Удаляет все элементы",
        "Удаляет только первый элемент",
        "Удаляет set из памяти",
      ],
      correct: [0],
    },
    {
      id: 10,
      name: "Как узнать размер коллекции Set?",
      variants: ["set.size", "set.length", "set.count"],
      correct: [0],
    },
    {
      id: 11,
      name: "Какие способы перебора есть у Set?",
      variants: ["for...of и forEach", "map и filter", "while и do...while"],
      correct: [0],
    },
    {
      id: 12,
      name: "Что передается в функцию-колбэк метода forEach у Set?",
      variants: ["value, value, set", "value, index, set", "value, key, set"],
      correct: [0],
    },
    {
      id: 13,
      name: "В каком порядке перебираются элементы Set?",
      variants: [
        "В порядке добавления",
        "В алфавитном порядке",
        "В обратном порядке",
      ],
      correct: [0],
    },
    {
      id: 14,
      name: 'Что напечатает цикл for...of по Set(["a", "b", "c"])?',
      variants: ["a, b, c", "c, b, a", "b, a, c"],
      correct: [0],
    },
    {
      id: 15,
      name: "Можно ли из Set получить доступ по индексу?",
      variants: ["Нет", "Да, через set[0]", "Да, через set.get(index)"],
      correct: [0],
    },
    {
      id: 16,
      name: "Что такое Map в JavaScript?",
      variants: [
        "Коллекция пар ключ-значение с ключами любого типа",
        "Массив уникальных значений",
        "Функция для поиска по массиву",
      ],
      correct: [0],
    },
    {
      id: 17,
      name: "Какие типы могут быть ключами в Map?",
      variants: [
        "Любые (строки, числа, объекты и т.д.)",
        "Только строки",
        "Только числа",
      ],
      correct: [0],
    },
    {
      id: 18,
      name: 'Что выведет userRoles.get("Анна") если userRoles.set("Анна", "админ")?',
      variants: ['"админ"', '"Анна"', "undefined"],
      correct: [0],
    },
    {
      id: 19,
      name: "Можно ли использовать объект в качестве ключа в Map?",
      variants: ["Да", "Нет", "Только если объект сериализован"],
      correct: [0],
    },
    {
      id: 20,
      name: "Чем Map отличается от объекта?",
      variants: [
        "В Map ключи могут быть любого типа, в объекте — только строки или Symbol",
        "В объекте сохраняется порядок ключей",
        "В Map нет метода set",
      ],
      correct: [0],
    },
    {
      id: 21,
      name: "Какой метод добавляет пару ключ-значение в Map?",
      variants: ["set", "add", "insert"],
      correct: [0],
    },
    {
      id: 22,
      name: "Что возвращает map.get(key) если ключ не найден?",
      variants: ["undefined", "null", "0"],
      correct: [0],
    },
    {
      id: 23,
      name: "Как узнать, есть ли ключ в Map?",
      variants: ["has", "find", "in"],
      correct: [0],
    },
    {
      id: 24,
      name: "Как удалить элемент из Map по ключу?",
      variants: ["delete", "remove", "pop"],
      correct: [0],
    },
    {
      id: 25,
      name: "Как полностью очистить Map?",
      variants: ["clear", "deleteAll", "reset"],
      correct: [0],
    },
    {
      id: 26,
      name: "Что возвращает map.entries()?",
      variants: [
        "Итерируемый объект пар [ключ, значение]",
        "Массив всех ключей",
        "Массив всех значений",
      ],
      correct: [0],
    },
    {
      id: 27,
      name: "Как перебрать только ключи Map?",
      variants: ["map.keys()", "map.values()", "map.getKeys()"],
      correct: [0],
    },
    {
      id: 28,
      name: "Как перебрать только значения Map?",
      variants: ["map.values()", "map.entries()", "map.getValues()"],
      correct: [0],
    },
    {
      id: 29,
      name: "В каком порядке перебираются элементы Map?",
      variants: [
        "В порядке добавления",
        "В алфавитном порядке",
        "В обратном порядке",
      ],
      correct: [0],
    },
    {
      id: 30,
      name: 'Что напечатает цикл for (const [k,v] of new Map([[1,"a"],[2,"b"]]).entries())?',
      variants: ["1 a, 2 b", "2 b, 1 a", "undefined"],
      correct: [0],
    },
  ],
};
