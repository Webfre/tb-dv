export const js_conditionsAndBranches_test = {
  id: 503,
  name: "Условия и ветвления в JavaScript",
  category: "JavaScript",
  ques: [
    {
      id: 1,
      name: "Что делает оператор if?",
      variants: [
        "Повторяет действия несколько раз",
        "Выполняет код только если условие истинно",
        "Завершает выполнение программы",
      ],
      correct: [1],
    },
    {
      id: 2,
      name: "Что произойдет, если условие в if ложно?",
      variants: [
        "Код внутри блока if выполнится",
        "Код внутри блока if не выполнится",
        "Всегда будет ошибка",
      ],
      correct: [1],
    },
    {
      id: 3,
      name: "Для чего нужен оператор else?",
      variants: [
        "Для создания цикла",
        "Для альтернативного действия, если условие в if ложно",
        "Для остановки программы",
      ],
      correct: [1],
    },
    {
      id: 4,
      name: "Какой результат у кода?\nlet age = 16;\nif (age >= 18) {\n  console.log('Доступ разрешён');\n} else {\n  console.log('Доступ запрещён');\n}",
      variants: ["'Доступ разрешён'", "'Доступ запрещён'", "Ничего не выведет"],
      correct: [1],
    },
    {
      id: 5,
      name: "Сколько раз можно использовать else if подряд?",
      variants: [
        "Только один раз",
        "Столько, сколько нужно",
        "Нельзя использовать else if",
      ],
      correct: [1],
    },
    {
      id: 6,
      name: "Какой блок выполнится?\nlet score = 75;\nif (score >= 90) {...} else if (score >= 70) {...} else {...}",
      variants: ["Первый", "Второй", "Третий"],
      correct: [1],
    },
    {
      id: 7,
      name: "Для чего используется тернарный оператор ? :",
      variants: [
        "Для короткой записи условия",
        "Для создания массивов",
        "Для объединения строк",
      ],
      correct: [0],
    },
    {
      id: 8,
      name: "Какой результат у выражения: let isStudent = true; let price = isStudent ? 100 : 200;",
      variants: ["100", "200", "undefined"],
      correct: [0],
    },
    {
      id: 9,
      name: "Что делает конструкция: let access = age >= 18 ? 'Да' : 'Нет';",
      variants: [
        "Вызывает ошибку",
        "Записывает 'Да' или 'Нет' в зависимости от условия",
        "Всегда записывает 'Да'",
      ],
      correct: [1],
    },
    {
      id: 10,
      name: "Когда НЕ стоит использовать тернарный оператор?",
      variants: [
        "Когда нужно выбрать одно из двух значений",
        "Когда условий больше двух или сложная логика",
        "Когда условие короткое и понятное",
      ],
      correct: [1],
    },
    {
      id: 11,
      name: "Что такое вложенные условия?",
      variants: [
        "Это когда if находится внутри другого if",
        "Это когда используется else if",
        "Это когда условия пишут в одну строку",
      ],
      correct: [0],
    },
    {
      id: 12,
      name: "Что выведет код?\nlet age = 18;\nlet hasDoc = false;\nif (age > 16) {\n  if (hasDoc) {\n    console.log('Экзамен');\n  } else {\n    console.log('Нет документов');\n  }\n} else {\n  console.log('Слишком молод');\n}",
      variants: ["'Экзамен'", "'Нет документов'", "'Слишком молод'"],
      correct: [1],
    },
    {
      id: 13,
      name: "Как лучше поступить, если в коде слишком много уровней вложенности?",
      variants: [
        "Разбить код на функции и упростить условия",
        "Оставить как есть",
        "Всегда использовать тернарный оператор",
      ],
      correct: [0],
    },
    {
      id: 14,
      name: "Что выполнится первым при вложенных if?",
      variants: [
        "Проверится внешнее условие",
        "Проверится внутреннее условие",
        "Оба сразу",
      ],
      correct: [0],
    },
    {
      id: 15,
      name: "Что делает логический оператор && (И) внутри if?",
      variants: [
        "Условие выполнится, если оба условия true",
        "Условие выполнится, если хотя бы одно условие true",
        "Переворачивает значение",
      ],
      correct: [0],
    },
    {
      id: 16,
      name: "Что делает логический оператор || (ИЛИ) внутри if?",
      variants: [
        "Условие выполнится, если оба условия true",
        "Условие выполнится, если хотя бы одно условие true",
        "Переворачивает значение",
      ],
      correct: [1],
    },
    {
      id: 17,
      name: "Что делает логический оператор ! (НЕ) внутри if?",
      variants: [
        "Переворачивает значение условия",
        "Всегда возвращает true",
        "Всегда возвращает false",
      ],
      correct: [0],
    },
    {
      id: 18,
      name: "Что выведет код?\nlet isOnline = false;\nif (!isOnline) { console.log('Не в сети'); }",
      variants: ["'В сети'", "'Не в сети'", "Ничего"],
      correct: [1],
    },
    {
      id: 19,
      name: 'Как записать условие: "пользователь старше 18 И активен"?',
      variants: [
        "if (age > 18 && isActive) {...}",
        "if (age > 18 || isActive) {...}",
        "if (age > 18 ! isActive) {...}",
      ],
      correct: [0],
    },
    {
      id: 20,
      name: 'Как записать условие: "выходной день ИЛИ праздничный"?',
      variants: [
        "if (isWeekend && isHoliday) {...}",
        "if (isWeekend || isHoliday) {...}",
        "if (isWeekend ! isHoliday) {...}",
      ],
      correct: [1],
    },
    {
      id: 21,
      name: "Что такое ранний выход (early return)?",
      variants: [
        "Это приём, когда ненужные действия выполняются последними",
        "Это приём, когда программа прекращает выполнение дальнейших инструкций при неудачном условии",
        "Это всегда оператор break",
      ],
      correct: [1],
    },
    {
      id: 22,
      name: "Зачем использовать ранний выход?",
      variants: [
        "Чтобы код был более читаемым и избежать лишней вложенности",
        "Чтобы усложнить код",
        "Чтобы всегда выходить из программы",
      ],
      correct: [0],
    },
    {
      id: 23,
      name: "Какой код более читаемый?",
      variants: [
        "С ранними выходами для плохих случаев",
        "С глубокой вложенностью условий",
        "С большим количеством тернарных операторов",
      ],
      correct: [0],
    },
    {
      id: 24,
      name: "Для чего используется оператор switch?",
      variants: [
        "Для создания циклов",
        "Для проверки одного значения на равенство нескольким вариантам",
        "Для сложения чисел",
      ],
      correct: [1],
    },
    {
      id: 25,
      name: "Что произойдет, если в switch не указать break?",
      variants: [
        "Выполнится только подходящий блок",
        "Выполнятся все последующие блоки до конца switch",
        "Будет ошибка",
      ],
      correct: [1],
    },
    {
      id: 26,
      name: "Что делает блок default в switch?",
      variants: [
        "Выполняется всегда",
        "Выполняется, если не подошёл ни один case",
        "Выполняется только если указать break",
      ],
      correct: [1],
    },
    {
      id: 27,
      name: "Какой результат выведет код?\nlet day = 2;\nswitch (day) {\n  case 1: console.log('Пн'); break;\n  case 2: console.log('Вт'); break;\n  default: console.log('Другой');\n}",
      variants: ["'Пн'", "'Вт'", "'Другой'"],
      correct: [1],
    },
    {
      id: 28,
      name: "Когда лучше использовать switch вместо if/else?",
      variants: [
        "Когда нужно сравнить одно значение с множеством вариантов",
        "Когда много разных условий",
        "Когда надо проверить больше двух условий",
      ],
      correct: [0],
    },
    {
      id: 29,
      name: "Что выведет код?\nlet isBanned = false;\nlet isAdmin = true;\nif (!isBanned && isAdmin) { console.log('Доступ разрешён'); }",
      variants: ["'Доступ запрещён'", "'Доступ разрешён'", "Ничего"],
      correct: [1],
    },
    {
      id: 30,
      name: "Можно ли использовать логические операторы в switch?",
      variants: [
        "Нет, только строгое сравнение значения с case",
        "Да, любые выражения",
        "Только оператор !",
      ],
      correct: [0],
    },
  ],
};
