export const js_errors_test = {
  id: 508,
  name: "Ошибки и отладка в JavaScript",
  category: "JavaScript",
  ques: [
    {
      id: 1,
      name: "Что такое ошибка в программировании?",
      variants: [
        "Ситуация, когда выполнение кода не может продолжаться как задумано",
        "Запланированная часть алгоритма",
        "Всегда приводит к удалению файла",
      ],
      correct: [0],
    },
    {
      id: 2,
      name: "Ошибки могут возникать из-за...",
      variants: [
        "Синтаксических опечаток, неправильной логики, внешних сбоев",
        "Слишком длинных переменных",
        "Использования только чисел",
      ],
      correct: [0],
    },
    {
      id: 3,
      name: "Что НЕ является примером ошибки?",
      variants: [
        "Корректно выполненный код",
        "Попытка обратиться к необъявленной переменной",
        "Синтаксическая опечатка",
      ],
      correct: [0],
    },
    {
      id: 4,
      name: "Что такое синтаксическая ошибка?",
      variants: [
        "Ошибка, возникающая при нарушении правил языка",
        "Ошибка неправильного результата при корректном коде",
        "Ошибка из-за сбоя сети",
      ],
      correct: [0],
    },
    {
      id: 5,
      name: "Пример синтаксической ошибки:",
      variants: [
        "console.log('Привет'",
        "console.log('Привет')",
        "let name = 'Иван';",
      ],
      correct: [0],
    },
    {
      id: 6,
      name: "Что такое логическая ошибка?",
      variants: [
        "Код работает, но результат неверный",
        "Код не запускается вовсе",
        "Ошибка из-за отсутствия интернета",
      ],
      correct: [0],
    },
    {
      id: 7,
      name: "Когда возникает ошибка времени выполнения?",
      variants: [
        "Во время работы кода, при корректном синтаксисе",
        "До запуска программы",
        "При компиляции",
      ],
      correct: [0],
    },
    {
      id: 8,
      name: "Что будет результатом console.log(user.name), если user = null?",
      variants: [
        "Uncaught TypeError: Cannot read properties of null",
        "0",
        "undefined",
      ],
      correct: [0],
    },
    {
      id: 9,
      name: "Что такое ошибка внешней среды?",
      variants: [
        "Ошибка, вызванная проблемами вне кода (например, сбой сети)",
        "Синтаксическая ошибка",
        "Неправильное имя функции",
      ],
      correct: [0],
    },
    {
      id: 10,
      name: "Как обработать ошибку при запросе к серверу?",
      variants: [
        ".catch() после fetch",
        ".then() после fetch",
        ".map() после fetch",
      ],
      correct: [0],
    },
    {
      id: 11,
      name: "Когда возникает ошибка компиляции в JS?",
      variants: [
        "Перед запуском кода, если есть синтаксические ошибки",
        "После завершения программы",
        "Когда сервер не отвечает",
      ],
      correct: [0],
    },
    {
      id: 12,
      name: "Что произойдёт при синтаксической ошибке?",
      variants: [
        "Код не выполнится вовсе",
        "Код выполнится с неправильным результатом",
        "Ошибка проигнорируется",
      ],
      correct: [0],
    },
    {
      id: 13,
      name: "Какие ошибки можно обработать через try...catch?",
      variants: [
        "Ошибки времени выполнения",
        "Синтаксические ошибки",
        "Ошибки оформления кода",
      ],
      correct: [0],
    },
    {
      id: 14,
      name: "Что означает ошибка ReferenceError?",
      variants: [
        "Обращение к необъявленной переменной",
        "Передан неправильный тип данных",
        "Ошибка неправильного синтаксиса",
      ],
      correct: [0],
    },
    {
      id: 15,
      name: "Что означает TypeError?",
      variants: [
        "Операция невозможна для данного типа данных",
        "Ошибка компиляции",
        "Ошибка доступа к серверу",
      ],
      correct: [0],
    },
    {
      id: 16,
      name: "В какой части сообщения об ошибке указывается строка и символ?",
      variants: ["script.js:10:15", "TypeError:", "Uncaught:"],
      correct: [0],
    },
    {
      id: 17,
      name: "Что делать, если возникла ошибка 'Cannot read properties of undefined'?",
      variants: [
        "Проверить, не undefined ли переменная перед обращением",
        "Перезапустить браузер",
        "Удалить файл",
      ],
      correct: [0],
    },
    {
      id: 18,
      name: "Какой тип ошибки укажет на отсутствие переменной?",
      variants: ["ReferenceError", "TypeError", "RangeError"],
      correct: [0],
    },
    {
      id: 19,
      name: "Для чего используется console.log()?",
      variants: [
        "Для вывода информации в консоль браузера",
        "Для установки паузы в коде",
        "Для обработки ошибок",
      ],
      correct: [0],
    },
    {
      id: 20,
      name: "Какой метод выделяет сообщения как ошибку (красным)?",
      variants: ["console.error()", "console.log()", "console.warn()"],
      correct: [0],
    },
    {
      id: 21,
      name: "Что делает команда debugger?",
      variants: [
        "Останавливает выполнение кода для отладки",
        "Выводит ошибку в консоль",
        "Перезагружает страницу",
      ],
      correct: [0],
    },
    {
      id: 22,
      name: "Когда работает команда debugger?",
      variants: [
        "Когда открыта вкладка DevTools",
        "Только в продакшн-режиме",
        "Всегда, даже если DevTools закрыты",
      ],
      correct: [0],
    },
    {
      id: 23,
      name: "Для чего используется вкладка Console в DevTools?",
      variants: [
        "Для просмотра логов, ошибок и ввода команд",
        "Для редактирования CSS",
        "Для просмотра истории посещений",
      ],
      correct: [0],
    },
    {
      id: 24,
      name: "Что позволяет делать вкладка Sources в DevTools?",
      variants: [
        "Просматривать исходный код, ставить breakpoints, отлаживать код",
        "Менять настройки браузера",
        "Проверять ошибки верстки",
      ],
      correct: [0],
    },
    {
      id: 25,
      name: "Что такое breakpoint?",
      variants: [
        "Точка остановки выполнения кода для анализа",
        "Ошибка в синтаксисе",
        "Свойство объекта",
      ],
      correct: [0],
    },
    {
      id: 26,
      name: "Что такое стек вызовов (call stack)?",
      variants: [
        "Список функций, вызванных до текущего места исполнения",
        "Список всех переменных программы",
        "Папка с файлами скриптов",
      ],
      correct: [0],
    },
    {
      id: 27,
      name: "Для чего нужен стек вызовов?",
      variants: [
        "Анализировать цепочку вызовов и искать причину ошибки",
        "Показывать историю браузера",
        "Сохранять лог ошибок",
      ],
      correct: [0],
    },
    {
      id: 28,
      name: "Какую ошибку можно исправить только вручную, а не с помощью try...catch?",
      variants: ["Синтаксическую", "TypeError", "ReferenceError"],
      correct: [0],
    },
    {
      id: 29,
      name: "Что помогает быстрее понять причину ошибки в коде?",
      variants: [
        "Чтение сообщения об ошибке и анализ места возникновения",
        "Игнорирование ошибок",
        "Удаление всех переменных",
      ],
      correct: [0],
    },
    {
      id: 30,
      name: "Что делать, если появляется много ошибок при запуске кода?",
      variants: [
        "Внимательно читать сообщения, устранять по одной, пользоваться отладчиком",
        "Удалить проект и начать заново",
        "Игнорировать ошибки",
      ],
      correct: [0],
    },
  ],
};
