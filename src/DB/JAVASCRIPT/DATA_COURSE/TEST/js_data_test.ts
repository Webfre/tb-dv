export const js_date_test = {
  id: 511,
  name: "Дата и время в JavaScript",
  category: "JavaScript",
  ques: [
    {
      id: 1,
      name: "Для чего чаще всего используется объект Date в JavaScript?",
      variants: [
        "Работа с датой и временем",
        "Выполнение математических вычислений",
        "Хранение массивов",
      ],
      correct: [0],
    },
    {
      id: 2,
      name: "Что хранит объект Date внутри себя?",
      variants: [
        "Количество миллисекунд с 1 января 1970 года (UTC)",
        "Только строку с датой",
        "Год и месяц",
      ],
      correct: [0],
    },
    {
      id: 3,
      name: "Какой тип значения возвращает метод getTime() у Date?",
      variants: ["Число (миллисекунды)", "Строку", "Объект"],
      correct: [0],
    },
    {
      id: 4,
      name: "Как создать объект Date с текущей датой и временем?",
      variants: ["new Date()", "Date.now()", "Date.create()"],
      correct: [0],
    },
    {
      id: 5,
      name: "Как создать объект Date на 25 декабря 2025 года (ISO строка)?",
      variants: [
        'new Date("2025-12-25")',
        "new Date(2025, 12, 25)",
        'new Date("25-12-2025")',
      ],
      correct: [0],
    },
    {
      id: 6,
      name: "Что будет результатом new Date(2025, 11, 25)?",
      variants: ["25 декабря 2025", "25 ноября 2025", "11 декабря 2025"],
      correct: [0],
    },
    {
      id: 7,
      name: "Что произойдет при попытке создать new Date('not a date')?",
      variants: [
        "Получится объект Invalid Date",
        "Будет выброшено исключение",
        "Создастся объект с текущей датой",
      ],
      correct: [0],
    },
    {
      id: 8,
      name: "Что возвращает date.getMonth()?",
      variants: [
        "Месяц от 0 (январь) до 11 (декабрь)",
        "Месяц от 1 до 12",
        "Название месяца",
      ],
      correct: [0],
    },
    {
      id: 9,
      name: "Что вернет метод getDate() у объекта Date?",
      variants: ["День месяца (от 1 до 31)", "День недели", "Текущее время"],
      correct: [0],
    },
    {
      id: 10,
      name: "Какой результат даст date.getDay(), если дата — воскресенье?",
      variants: ["0", "1", "7"],
      correct: [0],
    },
    {
      id: 11,
      name: "Как получить год из объекта Date?",
      variants: ["getFullYear()", "getYear()", "year()"],
      correct: [0],
    },
    {
      id: 12,
      name: "Как получить часы из Date?",
      variants: ["getHours()", "getTime()", "getClock()"],
      correct: [0],
    },
    {
      id: 13,
      name: "Для получения минут используется метод:",
      variants: ["getMinutes()", "getMins()", "getMin()"],
      correct: [0],
    },
    {
      id: 14,
      name: "Методы getUTCFullYear(), getUTCMonth() возвращают значения в:",
      variants: [
        "Всемирном времени (UTC)",
        "Локальном времени пользователя",
        "Формате ISO",
      ],
      correct: [0],
    },
    {
      id: 15,
      name: "Зачем используется padStart(2, '0') при форматировании даты?",
      variants: [
        "Добавляет ведущий ноль к однозначному числу",
        "Удаляет пробелы",
        "Преобразует число в строку",
      ],
      correct: [0],
    },
    {
      id: 16,
      name: "Как получить дату в формате ДД.ММ.ГГГГ вручную?",
      variants: [
        "`${day}.${month}.${year}`",
        "date.toLocaleString()",
        "date.toISOString()",
      ],
      correct: [0],
    },
    {
      id: 17,
      name: "Какой метод возвращает строку с датой в локальном формате?",
      variants: ["toLocaleDateString()", "toDateString()", "getDate()"],
      correct: [0],
    },
    {
      id: 18,
      name: "Что вернет разность между двумя объектами Date (date2 - date1)?",
      variants: ["Число миллисекунд между датами", "Новую дату", "Строку"],
      correct: [0],
    },
    {
      id: 19,
      name: "Как узнать, сколько дней между двумя датами?",
      variants: [
        "Разделить разницу в миллисекундах на (1000 * 60 * 60 * 24)",
        "Использовать date.diffDays()",
        "Сравнить getDay()",
      ],
      correct: [0],
    },
    {
      id: 20,
      name: "Что вернет этот код: new Date(0)?",
      variants: [
        "1 января 1970 года, 00:00:00 UTC",
        "Текущую дату",
        "0 миллисекунд",
      ],
      correct: [0],
    },
    {
      id: 21,
      name: "Как изменить год у существующего объекта Date?",
      variants: ["setFullYear()", "setYear()", "changeYear()"],
      correct: [0],
    },
    {
      id: 22,
      name: "Что произойдет при date.setMonth(12)?",
      variants: [
        "Месяц переполнится, дата перескочит на следующий год",
        "Будет ошибка",
        "Месяц станет декабрем",
      ],
      correct: [0],
    },
    {
      id: 23,
      name: "Какая последовательность методов корректно изменяет дату на 1 января 2026 года, 08:15?",
      variants: [
        "setFullYear(2026), setMonth(0), setDate(1), setHours(8), setMinutes(15)",
        "setYear(2026), setMonth(1), setDate(0), setHours(15), setMinutes(8)",
        "setDate(1), setMonth(1), setFullYear(2026)",
      ],
      correct: [0],
    },
    {
      id: 24,
      name: "Как добавить 5 часов к текущему времени объекта Date?",
      variants: ["setHours(getHours() + 5)", "addHours(5)", "setTime(5)"],
      correct: [0],
    },
    {
      id: 25,
      name: "Какое поведение при выходе за пределы (например, setDate(32) в январе)?",
      variants: [
        "Дата корректируется автоматически, перескакивая на следующий месяц",
        "Будет ошибка",
        "Останется 31 января",
      ],
      correct: [0],
    },
    {
      id: 26,
      name: "Какой метод возвращает миллисекунды с 1 января 1970 года для объекта Date?",
      variants: ["getTime()", "getMilliseconds()", "getEpoch()"],
      correct: [0],
    },
    {
      id: 27,
      name: "Для чего полезно вычислять разницу между датами?",
      variants: [
        "Для таймеров, отчётов, расчета интервалов",
        "Для форматирования даты",
        "Для создания массивов",
      ],
      correct: [0],
    },
    {
      id: 28,
      name: "Как получить строку ISO из Date (например, 2025-06-14T14:00:00.000Z)?",
      variants: ["toISOString()", "toString()", "toLocaleDateString()"],
      correct: [0],
    },
    {
      id: 29,
      name: "Какая библиотека НЕ используется для работы с датами в JS?",
      variants: ["lodash", "date-fns", "dayjs"],
      correct: [0],
    },
    {
      id: 30,
      name: "Что важно помнить при сравнении дат в JavaScript?",
      variants: [
        "Сравнивать getTime() или использовать операторы >, <, == (Date сравниваются как числа)",
        "Можно сравнивать как строки",
        "Даты сравниваются по ссылке",
      ],
      correct: [0],
    },
  ],
};
