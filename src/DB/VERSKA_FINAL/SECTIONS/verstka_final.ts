export const verstka_final1 = {
  id: "verstka_final1",
  title: "Краткий итог изученного",
  content: `
 #### В ходе курса вы получили комплексные знания и практические навыки веб-верстки: от основ разметки до продвинутых приёмов оптимизации и архитектуры стилей. Ниже — ключевые моменты, которые вы усвоили.

---

### 1. Основы HTML5  
- **Семантика**: использование \`<header>\`, \`<nav>\`, \`<article>\`, \`<section>\`, \`<footer>\` для логичной структуры.  
- **Формы и валидация**: теги \`<form>\`, \`<input>\`, \`<select>\`, атрибуты \`required\`, \`pattern\`, кастомные сообщения.  
- **Таблицы и списки**: \`<table>\` с \`<thead>\`, \`<tbody>\`, \`<caption>\`; упорядоченные и неупорядоченные списки.

---

### 2. Продвинутый CSS3  
- **Селекторы**: универсальные, атрибутные, псевдоклассы (\`:hover\`, \`:focus\`), псевдоэлементы (\`::before\`, \`::after\`).  
- **Flexbox**: выравнивание, распределение пространства, порядок элементов.  
- **Grid Layout**: создание сложных сеток, управление областями, автоматические ряды и колонки.  
- **CSS-анимации и переходы**: \`transition\`, \`transform\`, \`@keyframes\`.

---

### 3. SCSS (Sassy CSS)  
- **Переменные** (\`$\`): централизованное хранение цветов, шрифтов, отступов.  
- **Вложенность**: читаемая структура, избежание дублирования селекторов.  
- **Миксины и функции**: шаблоны с параметрами, вычисления.  
- **Директивы управления**: \`@if\`, \`@for\`, \`@each\` для динамического кода.  
- **Partials и \`@import\`**: модульная организация файлов.

---

### 4. Инструменты и рабочий процесс  
- **DevTools**: отладка HTML/CSS, аудит производительности, эмуляция устройств.  
- **Сборщики и бандлеры**: npm-скрипты, Webpack/Vite для компиляции, объединения и минификации.  
- **IDE/редакторы**: VS Code с Emmet, Prettier, ESLint, Live Server для быстрой проверки.

---

### 5. Ключевые приёмы и паттерны  
- **Mobile-first**: верстка для мобильных сначала и расширение до десктопа через медиазапросы.  
- **Адаптивные единицы**: \`rem\`, \`vh\`, \`vw\`, \`%\`.  
- **Архитектура CSS**: BEM/FLOCSS для читаемости и масштабируемости.  
- **Оптимизация загрузки**: минификация, критический CSS, спрайты, WebP, lazy-loading.  
- **Доступность (a11y)**: ARIA-атрибуты, фокусные состояния, контрастность.  
- **Кроссбраузерность**: Autoprefixer, Babel-полифилы, тестирование в разных браузерах.

---

Теперь вы готовы создавать современные, быстрые и доступные веб-страницы, а также переходить к более сложным фронтенд-задачам с JavaScript-фреймворками и инструментами сборки.
  `.trim(),
};

export const verstka_final2 = {
  id: "verstka_final2",
  title: "Портфолио-проекты",
  content: `
## Выполнение портфолио-проектов — это важнейшая часть курса, позволяющая получить реальный опыт и собрать собственное портфолио работ.
 ---
### Практические навыки

Работа над проектами — это не просто “для галочки”, а имитация настоящей работы фронтенд-разработчика:
- Анализ задачи, планирование и разбивка на этапы.
- Самостоятельный поиск решений, чтение документации и внедрение новых подходов.
- Навыки самоорганизации и работы “до результата”.

 Такая практика формирует уверенность и самостоятельность, учит искать информацию и реализовывать задачи как в реальной компании.

 ---
###  Публичная демонстрация работ

В современном IT важно не только сделать проект, но и грамотно его **показать**:
- **GitHub** — вы загружаете код в публичный репозиторий. Работодатель или наставник сможет посмотреть, как вы пишете код и как оформлены проекты.
- **GitHub Pages** — бесплатный способ разместить свою страницу/проект в интернете.
- **Ссылки на работы** — собирайте проекты в портфолио, чтобы демонстрировать их при устройстве на работу или стажировку.

Оформленные проекты на GitHub (и с опубликованной страницей) — это ваш персональный сайт и “визитка” для работодателя.

 ---
###  Советы по оформлению портфолио

- Дайте проекту понятное название, добавьте короткое описание и ссылку на демо.
- Не удаляйте истории коммитов — это показывает ваш прогресс и навыки работы с Git.
- Старайтесь делать README.md с инструкциями по запуску, описанием задач и технологий.
  `.trim(),
  resources: [
    "https://pages.github.com/",
    "https://docs.github.com/ru/pages/getting-started-with-github-pages/creating-a-github-pages-site",
    "https://github.com/",
  ],
};
